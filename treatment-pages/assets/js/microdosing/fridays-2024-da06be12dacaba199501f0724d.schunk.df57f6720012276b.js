
/*!
 * Webflow: Front-end site library
 * @license MIT
 * Inline scripts may access the api using an async handler:
 *   var Webflow = Webflow || [];
 *   Webflow.push(readyFunction);
 */

(self["webpackChunk"] = self["webpackChunk"] || []).push([["485"], {
5897: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/* eslint-env browser */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    cleanupElement: function() {
        return cleanupElement;
    },
    createInstance: function() {
        return createInstance;
    },
    destroy: function() {
        return destroy;
    },
    init: function() {
        return init;
    },
    ready: function() {
        return ready;
    }
});
__webpack_require__(2897);
__webpack_require__(233);
__webpack_require__(9754);
__webpack_require__(971);
__webpack_require__(2374);
__webpack_require__(5152);
__webpack_require__(5273);
__webpack_require__(172);
const _findIndex = /*#__PURE__*/ _interop_require_default(__webpack_require__(3142));
const _LottieFetchUtils = __webpack_require__(7933);
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const getLottieLibrary = (win)=>win.Webflow.require('lottie').lottie;
const isInDesigner = (win)=>Boolean(win.Webflow.env('design') || win.Webflow.env('preview'));
const PlayerState = {
    Playing: 'playing',
    Stopped: 'stopped'
};
class Cache {
    _cache = [];
    set(container, instance) {
        const index = (0, _findIndex.default)(this._cache, ({ wrapper })=>wrapper === container);
        if (index !== -1) this._cache.splice(index, 1);
        this._cache.push({
            wrapper: container,
            instance
        });
    }
    delete(container) {
        const index = (0, _findIndex.default)(this._cache, ({ wrapper })=>wrapper === container);
        if (index !== -1) this._cache.splice(index, 1);
    }
    get(container) {
        const index = (0, _findIndex.default)(this._cache, ({ wrapper })=>wrapper === container);
        // @ts-expect-error - TS2532 - Object is possibly 'undefined'.
        return index !== -1 ? this._cache[index].instance : null;
    }
}
const cache = new Cache();
const emptyObject = {};
class LottieInstance {
    config = null;
    currentState = PlayerState.Stopped;
    animationItem;
    handlers = {
        enterFrame: [],
        complete: [],
        loop: [],
        dataReady: [],
        destroy: [],
        error: []
    };
    load(container) {
        const dataset = container.dataset || emptyObject;
        const src = dataset.src || '';
        if (src.endsWith('.lottie')) {
            (0, _LottieFetchUtils.fetchLottie)(src).then((animationData)=>{
                this._loadAnimation(container, animationData);
            });
        } else {
            this._loadAnimation(container, undefined);
        }
        cache.set(container, this);
        this.container = container;
    }
    _loadAnimation(container, animationData) {
        const dataset = container.dataset || emptyObject;
        const src = dataset.src || '';
        // Available options here https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio
        const preserveAspectRatio = dataset.preserveAspectRatio || 'xMidYMid meet';
        const renderer = dataset.renderer || 'svg';
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
        const loop = parseFloat(dataset.loop) === 1;
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
        const direction = parseFloat(dataset.direction) || 1;
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
        const autoplay = parseFloat(dataset.autoplay) === 1;
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
        const duration = parseFloat(dataset.duration) || 0;
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
        const hasIx2 = parseFloat(dataset.isIx2Target) === 1;
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
        let ix2InitialValue = parseFloat(dataset.ix2InitialState);
        if (isNaN(ix2InitialValue)) {
            // @ts-expect-error - TS2322 - Type 'null' is not assignable to type 'number'.
            ix2InitialValue = null;
        }
        const config = {
            src,
            loop,
            autoplay,
            renderer,
            direction,
            duration,
            hasIx2,
            ix2InitialValue,
            preserveAspectRatio
        };
        // If it's the same path/src, don't destroy the animation
        if (this.animationItem && this.config && this.config.src === src && renderer === this.config.renderer && preserveAspectRatio === this.config.preserveAspectRatio) {
            if (loop !== this.config.loop) {
                this.setLooping(loop);
            }
            if (!hasIx2) {
                if (direction !== this.config.direction) {
                    // @ts-expect-error - TS2345 - Argument of type 'number' is not assignable to parameter of type '1 | -1'.
                    this.setDirection(direction);
                }
                if (duration !== this.config.duration) {
                    if (duration > 0 && duration !== this.duration) {
                        this.setSpeed(this.duration / duration);
                    } else {
                        this.setSpeed(1);
                    }
                }
            }
            if (autoplay) {
                this.play();
            }
            if (ix2InitialValue && ix2InitialValue !== this.config.ix2InitialValue) {
                const percent = ix2InitialValue / 100;
                this.goToFrame(this.frames * percent);
            }
            // @ts-expect-error - TS2322 - Type '{ readonly src: string; readonly loop: boolean; readonly autoplay: boolean; readonly renderer: string; readonly direction: number; readonly duration: number; readonly hasIx2: boolean; readonly ix2InitialValue: number; readonly preserveAspectRatio: string; }' is not assignable to type 'LoadAnimation'.
            this.config = config;
            return;
        }
        const options = {
            container,
            loop,
            autoplay,
            renderer,
            rendererSettings: {
                preserveAspectRatio,
                progressiveLoad: true,
                hideOnTransparent: true
            }
        };
        const win = container.ownerDocument.defaultView;
        try {
            // Clear previous animation, if any
            if (this.animationItem) {
                this.destroy();
            }
            // Initialize lottie player and load animation
            this.animationItem = getLottieLibrary(win).loadAnimation({
                ...options,
                ...animationData ? {
                    animationData
                } : {
                    path: src
                }
            });
        } catch (err) {
            this.handlers.error.forEach((cb)=>cb(err));
            return;
        }
        if (!this.animationItem) return;
        if (isInDesigner(win)) {
            // Calculate and save the current progress of the animation
            this.animationItem.addEventListener('enterFrame', ()=>{
                if (!this.isPlaying) return;
                const { currentFrame, totalFrames, playDirection } = this.animationItem;
                const toPercent = currentFrame / totalFrames * 100;
                const percentage = Math.round(playDirection === 1 ? toPercent : 100 - toPercent);
                this.handlers.enterFrame.forEach((cb)=>cb(percentage, currentFrame));
            });
            // Handle animation play complete
            this.animationItem.addEventListener('complete', ()=>{
                if (this.currentState !== PlayerState.Playing) {
                    this.handlers.complete.forEach((cb)=>cb());
                    return;
                }
                if (!this.animationItem.loop) {
                    this.handlers.complete.forEach((cb)=>cb());
                    return;
                }
                this.currentState = PlayerState.Stopped;
            });
            // Handle animation play complete
            this.animationItem.addEventListener('loopComplete', (loopComplete)=>{
                this.handlers.loop.forEach((cb)=>cb(loopComplete));
            });
            // Set error state when animation load fail event triggers
            // @ts-expect-error - TS7006 - Parameter 'err' implicitly has an 'any' type.
            this.animationItem.addEventListener('data_failed', (err)=>{
                this.handlers.error.forEach((cb)=>cb(err));
            });
            // Set error state when animation load fail event triggers
            // @ts-expect-error - TS7006 - Parameter 'err' implicitly has an 'any' type.
            this.animationItem.addEventListener('error', (err)=>{
                this.handlers.error.forEach((cb)=>cb(err));
            });
        }
        if (this.isLoaded) {
            this.handlers.dataReady.forEach((cb)=>cb());
            if (autoplay) {
                this.play();
            }
        } else {
            // Handle animation data load complete
            this.animationItem.addEventListener('data_ready', ()=>{
                this.handlers.dataReady.forEach((cb)=>cb());
                // Only set the direction and speed if no IX2 is attached
                if (!hasIx2) {
                    // @ts-expect-error - TS2345 - Argument of type 'number' is not assignable to parameter of type '1 | -1'.
                    this.setDirection(direction);
                    if (duration > 0 && duration !== this.duration) {
                        this.setSpeed(this.duration / duration);
                    }
                    if (autoplay) {
                        this.play();
                    }
                }
                // Set the animation's initial state value from IX2
                if (ix2InitialValue) {
                    const percent = ix2InitialValue / 100;
                    this.goToFrame(this.frames * percent);
                }
            });
        }
        // @ts-expect-error - TS2322 - Type '{ readonly src: string; readonly loop: boolean; readonly autoplay: boolean; readonly renderer: string; readonly direction: number; readonly duration: number; readonly hasIx2: boolean; readonly ix2InitialValue: number; readonly preserveAspectRatio: string; }' is not assignable to type 'LoadAnimation'.
        this.config = config;
    }
    onFrameChange(cb) {
        if (this.handlers.enterFrame.indexOf(cb) === -1) {
            this.handlers.enterFrame.push(cb);
        }
    }
    onPlaybackComplete(cb) {
        if (this.handlers.complete.indexOf(cb) === -1) {
            this.handlers.complete.push(cb);
        }
    }
    onLoopComplete(cb) {
        if (this.handlers.loop.indexOf(cb) === -1) {
            this.handlers.loop.push(cb);
        }
    }
    onDestroy(cb) {
        if (this.handlers.destroy.indexOf(cb) === -1) {
            this.handlers.destroy.push(cb);
        }
    }
    onDataReady(cb) {
        if (this.handlers.dataReady.indexOf(cb) === -1) {
            this.handlers.dataReady.push(cb);
        }
    }
    onError(cb) {
        if (this.handlers.error.indexOf(cb) === -1) {
            this.handlers.error.push(cb);
        }
    }
    play() {
        if (!this.animationItem) return;
        const frame = this.animationItem.playDirection === 1 ? 0 : this.frames;
        this.animationItem.goToAndPlay(frame, true);
        this.currentState = PlayerState.Playing;
    }
    stop() {
        if (!this.animationItem) return;
        if (this.isPlaying) {
            const { playDirection } = this.animationItem;
            const frame = playDirection === 1 ? 0 : this.frames;
            this.animationItem.goToAndStop(frame, true);
        }
        this.currentState = PlayerState.Stopped;
    }
    destroy() {
        if (!this.animationItem) return;
        if (this.isPlaying) this.stop();
        this.handlers.destroy.forEach((cb)=>cb());
        if (this.container) {
            cache.delete(this.container);
        }
        this.animationItem.destroy();
        Object.keys(this.handlers).forEach(// @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ enterFrame: OnFrameChangeCallback[]; complete: (() => void)[]; loop: OnLoopCompleteCallback[]; dataReady: (() => void)[]; destroy: (() => void)[]; error: ((arg1: Error) => void)[]; }'.
        (key)=>this.handlers[key].length = 0);
        this.animationItem = null;
        this.container = null;
        this.config = null;
    }
    // @ts-expect-error - TS2416 - Property 'isPlaying' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
    get isPlaying() {
        if (!this.animationItem) return false;
        return !this.animationItem.isPaused;
    }
    // @ts-expect-error - TS2416 - Property 'isPaused' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
    get isPaused() {
        if (!this.animationItem) return false;
        return this.animationItem.isPaused;
    }
    // @ts-expect-error - TS2416 - Property 'duration' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
    get duration() {
        if (!this.animationItem) return 0;
        return this.animationItem.getDuration();
    }
    // @ts-expect-error - TS2416 - Property 'frames' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
    get frames() {
        if (!this.animationItem) return 0;
        return this.animationItem.totalFrames;
    }
    // @ts-expect-error - TS2416 - Property 'direction' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
    get direction() {
        if (!this.animationItem) return 1;
        return this.animationItem.playDirection;
    }
    // @ts-expect-error - TS2416 - Property 'isLoaded' in type 'LottieInstance' is not assignable to the same property in base type 'LottieItem'.
    get isLoaded() {
        if (!this.animationItem) false;
        return this.animationItem.isLoaded;
    }
    get ix2InitialValue() {
        return this.config ? this.config.ix2InitialValue : null;
    }
    goToFrame(value) {
        if (!this.animationItem) return;
        this.animationItem.setCurrentRawFrameValue(value);
    }
    setSubframe(value) {
        if (!this.animationItem) return;
        this.animationItem.setSubframe(value);
    }
    setSpeed(value = 1) {
        if (!this.animationItem) return;
        if (this.isPlaying) this.stop();
        this.animationItem.setSpeed(value);
    }
    setLooping(value) {
        if (!this.animationItem) return;
        if (this.isPlaying) this.stop();
        this.animationItem.loop = value;
    }
    setDirection(value) {
        if (!this.animationItem) return;
        if (this.isPlaying) this.stop();
        this.animationItem.setDirection(value);
        this.goToFrame(value === 1 ? 0 : this.frames);
    }
}
const getLottieElements = ()=>Array.from(document.querySelectorAll('[data-animation-type="lottie"]'));
const createInstance = (container)=>{
    let lottieInstance = cache.get(container);
    if (lottieInstance == null) {
        lottieInstance = new LottieInstance();
    }
    lottieInstance.load(container);
    return lottieInstance;
};
const cleanupElement = (element)=>{
    const lottieInstance = cache.get(element);
    if (lottieInstance) {
        lottieInstance.destroy();
    }
};
const init = ()=>{
    getLottieElements().forEach((element)=>{
        // @ts-expect-error - TS2345 - Argument of type 'string | null' is not assignable to parameter of type 'string'.
        const hasIx2 = parseFloat(element.getAttribute('data-is-ix2-target')) === 1;
        if (!hasIx2) {
            cleanupElement(element);
        }
        createInstance(element);
    });
};
const destroy = ()=>{
    getLottieElements().forEach(cleanupElement);
};
const ready = init;

//# sourceMappingURL=data:application/json;base64,

}),
2444: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";

var Webflow = __webpack_require__(3949);
var lottieSiteModule = __webpack_require__(5897);
var lottie = __webpack_require__(8724);
Webflow.define('lottie', module.exports = function() {
    return {
        lottie,
        createInstance: lottieSiteModule.createInstance,
        cleanupElement: lottieSiteModule.cleanupElement,
        init: lottieSiteModule.init,
        destroy: lottieSiteModule.destroy,
        ready: lottieSiteModule.ready
    };
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYmZsb3ctbG90dGllLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBXZWJmbG93ID0gcmVxdWlyZSgnLi4vQmFzZVNpdGVNb2R1bGVzL3dlYmZsb3ctbGliJyk7XG52YXIgbG90dGllU2l0ZU1vZHVsZSA9IHJlcXVpcmUoJy4vbW9kdWxlcy9Mb3R0aWVTaXRlTW9kdWxlJyk7XG52YXIgbG90dGllID0gcmVxdWlyZSgnbG90dGllLXdlYi9idWlsZC9wbGF5ZXIvbG90dGllLm1pbicpO1xuXG5XZWJmbG93LmRlZmluZShcbiAgJ2xvdHRpZScsXG4gIChtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbG90dGllLFxuICAgICAgY3JlYXRlSW5zdGFuY2U6IGxvdHRpZVNpdGVNb2R1bGUuY3JlYXRlSW5zdGFuY2UsXG4gICAgICBjbGVhbnVwRWxlbWVudDogbG90dGllU2l0ZU1vZHVsZS5jbGVhbnVwRWxlbWVudCxcbiAgICAgIGluaXQ6IGxvdHRpZVNpdGVNb2R1bGUuaW5pdCxcbiAgICAgIGRlc3Ryb3k6IGxvdHRpZVNpdGVNb2R1bGUuZGVzdHJveSxcbiAgICAgIHJlYWR5OiBsb3R0aWVTaXRlTW9kdWxlLnJlYWR5LFxuICAgIH07XG4gIH0pXG4pO1xuIl0sIm5hbWVzIjpbIldlYmZsb3ciLCJyZXF1aXJlIiwibG90dGllU2l0ZU1vZHVsZSIsImxvdHRpZSIsImRlZmluZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJjcmVhdGVJbnN0YW5jZSIsImNsZWFudXBFbGVtZW50IiwiaW5pdCIsImRlc3Ryb3kiLCJyZWFkeSJdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFVBQVVDLFFBQVE7QUFDdEIsSUFBSUMsbUJBQW1CRCxRQUFRO0FBQy9CLElBQUlFLFNBQVNGLFFBQVE7QUFFckJELFFBQVFJLE1BQU0sQ0FDWixVQUNDQyxPQUFPQyxPQUFPLEdBQUc7SUFDaEIsT0FBTztRQUNMSDtRQUNBSSxnQkFBZ0JMLGlCQUFpQkssY0FBYztRQUMvQ0MsZ0JBQWdCTixpQkFBaUJNLGNBQWM7UUFDL0NDLE1BQU1QLGlCQUFpQk8sSUFBSTtRQUMzQkMsU0FBU1IsaUJBQWlCUSxPQUFPO1FBQ2pDQyxPQUFPVCxpQkFBaUJTLEtBQUs7SUFDL0I7QUFDRiJ9

}),
5487: (function () {
"use strict";
/* eslint-disable eslint-comments/no-unlimited-disable */ /* eslint-disable */ /*!
 * tram.js v0.8.2-global
 * Cross-browser CSS3 transitions in JavaScript
 * https://github.com/bkwld/tram
 * MIT License
 */ /* prettier-ignore */ 
window.tram = function(a) {
    function b(a, b) {
        var c = new M.Bare;
        return c.init(a, b);
    }
    function c(a) {
        return a.replace(/[A-Z]/g, function(a) {
            return "-" + a.toLowerCase();
        });
    }
    function d(a) {
        var b = parseInt(a.slice(1), 16), c = b >> 16 & 255, d = b >> 8 & 255, e = 255 & b;
        return [
            c,
            d,
            e
        ];
    }
    function e(a, b, c) {
        return "#" + (1 << 24 | a << 16 | b << 8 | c).toString(16).slice(1);
    }
    function f() {}
    function g(a, b) {
        j("Type warning: Expected: [" + a + "] Got: [" + typeof b + "] " + b);
    }
    function h(a, b, c) {
        j("Units do not match [" + a + "]: " + b + ", " + c);
    }
    function i(a, b, c) {
        if (void 0 !== b && (c = b), void 0 === a) return c;
        var d = c;
        return $.test(a) || !_.test(a) ? d = parseInt(a, 10) : _.test(a) && (d = 1e3 * parseFloat(a)), 0 > d && (d = 0), d === d ? d : c;
    }
    function j(a) {
        U.debug && window && window.console.warn(a);
    }
    function k(a) {
        for(var b = -1, c = a ? a.length : 0, d = []; ++b < c;){
            var e = a[b];
            e && d.push(e);
        }
        return d;
    }
    var l = function(a, b, c) {
        function d(a) {
            return "object" == typeof a;
        }
        function e(a) {
            return "function" == typeof a;
        }
        function f() {}
        function g(h, i) {
            function j() {
                var a = new k;
                return e(a.init) && a.init.apply(a, arguments), a;
            }
            function k() {}
            i === c && (i = h, h = Object), j.Bare = k;
            var l, m = f[a] = h[a], n = k[a] = j[a] = new f;
            return n.constructor = j, j.mixin = function(b) {
                return k[a] = j[a] = g(j, b)[a], j;
            }, j.open = function(a) {
                if (l = {}, e(a) ? l = a.call(j, n, m, j, h) : d(a) && (l = a), d(l)) for(var c in l)b.call(l, c) && (n[c] = l[c]);
                return e(n.init) || (n.init = h), j;
            }, j.open(i);
        }
        return g;
    }("prototype", {}.hasOwnProperty), m = {
        ease: [
            "ease",
            function(a, b, c, d) {
                var e = (a /= d) * a, f = e * a;
                return b + c * (-2.75 * f * e + 11 * e * e + -15.5 * f + 8 * e + .25 * a);
            }
        ],
        "ease-in": [
            "ease-in",
            function(a, b, c, d) {
                var e = (a /= d) * a, f = e * a;
                return b + c * (-1 * f * e + 3 * e * e + -3 * f + 2 * e);
            }
        ],
        "ease-out": [
            "ease-out",
            function(a, b, c, d) {
                var e = (a /= d) * a, f = e * a;
                return b + c * (.3 * f * e + -1.6 * e * e + 2.2 * f + -1.8 * e + 1.9 * a);
            }
        ],
        "ease-in-out": [
            "ease-in-out",
            function(a, b, c, d) {
                var e = (a /= d) * a, f = e * a;
                return b + c * (2 * f * e + -5 * e * e + 2 * f + 2 * e);
            }
        ],
        linear: [
            "linear",
            function(a, b, c, d) {
                return c * a / d + b;
            }
        ],
        "ease-in-quad": [
            "cubic-bezier(0.550, 0.085, 0.680, 0.530)",
            function(a, b, c, d) {
                return c * (a /= d) * a + b;
            }
        ],
        "ease-out-quad": [
            "cubic-bezier(0.250, 0.460, 0.450, 0.940)",
            function(a, b, c, d) {
                return -c * (a /= d) * (a - 2) + b;
            }
        ],
        "ease-in-out-quad": [
            "cubic-bezier(0.455, 0.030, 0.515, 0.955)",
            function(a, b, c, d) {
                return (a /= d / 2) < 1 ? c / 2 * a * a + b : -c / 2 * (--a * (a - 2) - 1) + b;
            }
        ],
        "ease-in-cubic": [
            "cubic-bezier(0.550, 0.055, 0.675, 0.190)",
            function(a, b, c, d) {
                return c * (a /= d) * a * a + b;
            }
        ],
        "ease-out-cubic": [
            "cubic-bezier(0.215, 0.610, 0.355, 1)",
            function(a, b, c, d) {
                return c * ((a = a / d - 1) * a * a + 1) + b;
            }
        ],
        "ease-in-out-cubic": [
            "cubic-bezier(0.645, 0.045, 0.355, 1)",
            function(a, b, c, d) {
                return (a /= d / 2) < 1 ? c / 2 * a * a * a + b : c / 2 * ((a -= 2) * a * a + 2) + b;
            }
        ],
        "ease-in-quart": [
            "cubic-bezier(0.895, 0.030, 0.685, 0.220)",
            function(a, b, c, d) {
                return c * (a /= d) * a * a * a + b;
            }
        ],
        "ease-out-quart": [
            "cubic-bezier(0.165, 0.840, 0.440, 1)",
            function(a, b, c, d) {
                return -c * ((a = a / d - 1) * a * a * a - 1) + b;
            }
        ],
        "ease-in-out-quart": [
            "cubic-bezier(0.770, 0, 0.175, 1)",
            function(a, b, c, d) {
                return (a /= d / 2) < 1 ? c / 2 * a * a * a * a + b : -c / 2 * ((a -= 2) * a * a * a - 2) + b;
            }
        ],
        "ease-in-quint": [
            "cubic-bezier(0.755, 0.050, 0.855, 0.060)",
            function(a, b, c, d) {
                return c * (a /= d) * a * a * a * a + b;
            }
        ],
        "ease-out-quint": [
            "cubic-bezier(0.230, 1, 0.320, 1)",
            function(a, b, c, d) {
                return c * ((a = a / d - 1) * a * a * a * a + 1) + b;
            }
        ],
        "ease-in-out-quint": [
            "cubic-bezier(0.860, 0, 0.070, 1)",
            function(a, b, c, d) {
                return (a /= d / 2) < 1 ? c / 2 * a * a * a * a * a + b : c / 2 * ((a -= 2) * a * a * a * a + 2) + b;
            }
        ],
        "ease-in-sine": [
            "cubic-bezier(0.470, 0, 0.745, 0.715)",
            function(a, b, c, d) {
                return -c * Math.cos(a / d * (Math.PI / 2)) + c + b;
            }
        ],
        "ease-out-sine": [
            "cubic-bezier(0.390, 0.575, 0.565, 1)",
            function(a, b, c, d) {
                return c * Math.sin(a / d * (Math.PI / 2)) + b;
            }
        ],
        "ease-in-out-sine": [
            "cubic-bezier(0.445, 0.050, 0.550, 0.950)",
            function(a, b, c, d) {
                return -c / 2 * (Math.cos(Math.PI * a / d) - 1) + b;
            }
        ],
        "ease-in-expo": [
            "cubic-bezier(0.950, 0.050, 0.795, 0.035)",
            function(a, b, c, d) {
                return 0 === a ? b : c * Math.pow(2, 10 * (a / d - 1)) + b;
            }
        ],
        "ease-out-expo": [
            "cubic-bezier(0.190, 1, 0.220, 1)",
            function(a, b, c, d) {
                return a === d ? b + c : c * (-Math.pow(2, -10 * a / d) + 1) + b;
            }
        ],
        "ease-in-out-expo": [
            "cubic-bezier(1, 0, 0, 1)",
            function(a, b, c, d) {
                return 0 === a ? b : a === d ? b + c : (a /= d / 2) < 1 ? c / 2 * Math.pow(2, 10 * (a - 1)) + b : c / 2 * (-Math.pow(2, -10 * --a) + 2) + b;
            }
        ],
        "ease-in-circ": [
            "cubic-bezier(0.600, 0.040, 0.980, 0.335)",
            function(a, b, c, d) {
                return -c * (Math.sqrt(1 - (a /= d) * a) - 1) + b;
            }
        ],
        "ease-out-circ": [
            "cubic-bezier(0.075, 0.820, 0.165, 1)",
            function(a, b, c, d) {
                return c * Math.sqrt(1 - (a = a / d - 1) * a) + b;
            }
        ],
        "ease-in-out-circ": [
            "cubic-bezier(0.785, 0.135, 0.150, 0.860)",
            function(a, b, c, d) {
                return (a /= d / 2) < 1 ? -c / 2 * (Math.sqrt(1 - a * a) - 1) + b : c / 2 * (Math.sqrt(1 - (a -= 2) * a) + 1) + b;
            }
        ],
        "ease-in-back": [
            "cubic-bezier(0.600, -0.280, 0.735, 0.045)",
            function(a, b, c, d, e) {
                return void 0 === e && (e = 1.70158), c * (a /= d) * a * ((e + 1) * a - e) + b;
            }
        ],
        "ease-out-back": [
            "cubic-bezier(0.175, 0.885, 0.320, 1.275)",
            function(a, b, c, d, e) {
                return void 0 === e && (e = 1.70158), c * ((a = a / d - 1) * a * ((e + 1) * a + e) + 1) + b;
            }
        ],
        "ease-in-out-back": [
            "cubic-bezier(0.680, -0.550, 0.265, 1.550)",
            function(a, b, c, d, e) {
                return void 0 === e && (e = 1.70158), (a /= d / 2) < 1 ? c / 2 * a * a * (((e *= 1.525) + 1) * a - e) + b : c / 2 * ((a -= 2) * a * (((e *= 1.525) + 1) * a + e) + 2) + b;
            }
        ]
    }, n = {
        "ease-in-back": "cubic-bezier(0.600, 0, 0.735, 0.045)",
        "ease-out-back": "cubic-bezier(0.175, 0.885, 0.320, 1)",
        "ease-in-out-back": "cubic-bezier(0.680, 0, 0.265, 1)"
    }, o = document, p = window, q = "bkwld-tram", r = /[\-\.0-9]/g, s = /[A-Z]/, t = "number", u = /^(rgb|#)/, v = /(em|cm|mm|in|pt|pc|px)$/, w = /(em|cm|mm|in|pt|pc|px|%)$/, x = /(deg|rad|turn)$/, y = "unitless", z = /(all|none) 0s ease 0s/, A = /^(width|height)$/, B = " ", C = o.createElement("a"), D = [
        "Webkit",
        "Moz",
        "O",
        "ms"
    ], E = [
        "-webkit-",
        "-moz-",
        "-o-",
        "-ms-"
    ], F = function(a) {
        if (a in C.style) return {
            dom: a,
            css: a
        };
        var b, c, d = "", e = a.split("-");
        for(b = 0; b < e.length; b++)d += e[b].charAt(0).toUpperCase() + e[b].slice(1);
        for(b = 0; b < D.length; b++)if (c = D[b] + d, c in C.style) return {
            dom: c,
            css: E[b] + a
        };
    }, G = b.support = {
        bind: Function.prototype.bind,
        transform: F("transform"),
        transition: F("transition"),
        backface: F("backface-visibility"),
        timing: F("transition-timing-function")
    };
    if (G.transition) {
        var H = G.timing.dom;
        if (C.style[H] = m["ease-in-back"][0], !C.style[H]) for(var I in n)m[I][0] = n[I];
    }
    var J = b.frame = function() {
        var a = p.requestAnimationFrame || p.webkitRequestAnimationFrame || p.mozRequestAnimationFrame || p.oRequestAnimationFrame || p.msRequestAnimationFrame;
        return a && G.bind ? a.bind(p) : function(a) {
            p.setTimeout(a, 16);
        };
    }(), K = b.now = function() {
        var a = p.performance, b = a && (a.now || a.webkitNow || a.msNow || a.mozNow);
        return b && G.bind ? b.bind(a) : Date.now || function() {
            return +new Date;
        };
    }(), L = l(function(b) {
        function d(a, b) {
            var c = k(("" + a).split(B)), d = c[0];
            b = b || {};
            var e = Y[d];
            if (!e) return j("Unsupported property: " + d);
            if (!b.weak || !this.props[d]) {
                var f = e[0], g = this.props[d];
                return g || (g = this.props[d] = new f.Bare), g.init(this.$el, c, e, b), g;
            }
        }
        function e(a, b, c) {
            if (a) {
                var e = typeof a;
                if (b || (this.timer && this.timer.destroy(), this.queue = [], this.active = !1), "number" == e && b) return this.timer = new S({
                    duration: a,
                    context: this,
                    complete: h
                }), void (this.active = !0);
                if ("string" == e && b) {
                    switch(a){
                        case "hide":
                            o.call(this);
                            break;
                        case "stop":
                            l.call(this);
                            break;
                        case "redraw":
                            p.call(this);
                            break;
                        default:
                            d.call(this, a, c && c[1]);
                    }
                    return h.call(this);
                }
                if ("function" == e) return void a.call(this, this);
                if ("object" == e) {
                    var f = 0;
                    u.call(this, a, function(a, b) {
                        a.span > f && (f = a.span), a.stop(), a.animate(b);
                    }, function(a) {
                        "wait" in a && (f = i(a.wait, 0));
                    }), t.call(this), f > 0 && (this.timer = new S({
                        duration: f,
                        context: this
                    }), this.active = !0, b && (this.timer.complete = h));
                    var g = this, j = !1, k = {};
                    J(function() {
                        u.call(g, a, function(a) {
                            a.active && (j = !0, k[a.name] = a.nextStyle);
                        }), j && g.$el.css(k);
                    });
                }
            }
        }
        function f(a) {
            a = i(a, 0), this.active ? this.queue.push({
                options: a
            }) : (this.timer = new S({
                duration: a,
                context: this,
                complete: h
            }), this.active = !0);
        }
        function g(a) {
            return this.active ? (this.queue.push({
                options: a,
                args: arguments
            }), void (this.timer.complete = h)) : j("No active transition timer. Use start() or wait() before then().");
        }
        function h() {
            if (this.timer && this.timer.destroy(), this.active = !1, this.queue.length) {
                var a = this.queue.shift();
                e.call(this, a.options, !0, a.args);
            }
        }
        function l(a) {
            this.timer && this.timer.destroy(), this.queue = [], this.active = !1;
            var b;
            "string" == typeof a ? (b = {}, b[a] = 1) : b = "object" == typeof a && null != a ? a : this.props, u.call(this, b, v), t.call(this);
        }
        function m(a) {
            l.call(this, a), u.call(this, a, w, x);
        }
        function n(a) {
            "string" != typeof a && (a = "block"), this.el.style.display = a;
        }
        function o() {
            l.call(this), this.el.style.display = "none";
        }
        function p() {
            this.el.offsetHeight;
        }
        function r() {
            l.call(this), a.removeData(this.el, q), this.$el = this.el = null;
        }
        function t() {
            var a, b, c = [];
            this.upstream && c.push(this.upstream);
            for(a in this.props)b = this.props[a], b.active && c.push(b.string);
            c = c.join(","), this.style !== c && (this.style = c, this.el.style[G.transition.dom] = c);
        }
        function u(a, b, e) {
            var f, g, h, i, j = b !== v, k = {};
            for(f in a)h = a[f], f in Z ? (k.transform || (k.transform = {}), k.transform[f] = h) : (s.test(f) && (f = c(f)), f in Y ? k[f] = h : (i || (i = {}), i[f] = h));
            for(f in k){
                if (h = k[f], g = this.props[f], !g) {
                    if (!j) continue;
                    g = d.call(this, f);
                }
                b.call(this, g, h);
            }
            e && i && e.call(this, i);
        }
        function v(a) {
            a.stop();
        }
        function w(a, b) {
            a.set(b);
        }
        function x(a) {
            this.$el.css(a);
        }
        function y(a, c) {
            b[a] = function() {
                return this.children ? A.call(this, c, arguments) : (this.el && c.apply(this, arguments), this);
            };
        }
        function A(a, b) {
            var c, d = this.children.length;
            for(c = 0; d > c; c++)a.apply(this.children[c], b);
            return this;
        }
        b.init = function(b) {
            if (this.$el = a(b), this.el = this.$el[0], this.props = {}, this.queue = [], this.style = "", this.active = !1, U.keepInherited && !U.fallback) {
                var c = W(this.el, "transition");
                c && !z.test(c) && (this.upstream = c);
            }
            G.backface && U.hideBackface && V(this.el, G.backface.css, "hidden");
        }, y("add", d), y("start", e), y("wait", f), y("then", g), y("next", h), y("stop", l), y("set", m), y("show", n), y("hide", o), y("redraw", p), y("destroy", r);
    }), M = l(L, function(b) {
        function c(b, c) {
            var d = a.data(b, q) || a.data(b, q, new L.Bare);
            return d.el || d.init(b), c ? d.start(c) : d;
        }
        b.init = function(b, d) {
            var e = a(b);
            if (!e.length) return this;
            if (1 === e.length) return c(e[0], d);
            var f = [];
            return e.each(function(a, b) {
                f.push(c(b, d));
            }), this.children = f, this;
        };
    }), N = l(function(a) {
        function b() {
            var a = this.get();
            this.update("auto");
            var b = this.get();
            return this.update(a), b;
        }
        function c(a, b, c) {
            return void 0 !== b && (c = b), a in m ? a : c;
        }
        function d(a) {
            var b = /rgba?\((\d+),\s*(\d+),\s*(\d+)/.exec(a);
            return (b ? e(b[1], b[2], b[3]) : a).replace(/#(\w)(\w)(\w)$/, "#$1$1$2$2$3$3");
        }
        var f = {
            duration: 500,
            ease: "ease",
            delay: 0
        };
        a.init = function(a, b, d, e) {
            this.$el = a, this.el = a[0];
            var g = b[0];
            d[2] && (g = d[2]), X[g] && (g = X[g]), this.name = g, this.type = d[1], this.duration = i(b[1], this.duration, f.duration), this.ease = c(b[2], this.ease, f.ease), this.delay = i(b[3], this.delay, f.delay), this.span = this.duration + this.delay, this.active = !1, this.nextStyle = null, this.auto = A.test(this.name), this.unit = e.unit || this.unit || U.defaultUnit, this.angle = e.angle || this.angle || U.defaultAngle, U.fallback || e.fallback ? this.animate = this.fallback : (this.animate = this.transition, this.string = this.name + B + this.duration + "ms" + ("ease" != this.ease ? B + m[this.ease][0] : "") + (this.delay ? B + this.delay + "ms" : ""));
        }, a.set = function(a) {
            a = this.convert(a, this.type), this.update(a), this.redraw();
        }, a.transition = function(a) {
            this.active = !0, a = this.convert(a, this.type), this.auto && ("auto" == this.el.style[this.name] && (this.update(this.get()), this.redraw()), "auto" == a && (a = b.call(this))), this.nextStyle = a;
        }, a.fallback = function(a) {
            var c = this.el.style[this.name] || this.convert(this.get(), this.type);
            a = this.convert(a, this.type), this.auto && ("auto" == c && (c = this.convert(this.get(), this.type)), "auto" == a && (a = b.call(this))), this.tween = new R({
                from: c,
                to: a,
                duration: this.duration,
                delay: this.delay,
                ease: this.ease,
                update: this.update,
                context: this
            });
        }, a.get = function() {
            return W(this.el, this.name);
        }, a.update = function(a) {
            V(this.el, this.name, a);
        }, a.stop = function() {
            (this.active || this.nextStyle) && (this.active = !1, this.nextStyle = null, V(this.el, this.name, this.get()));
            var a = this.tween;
            a && a.context && a.destroy();
        }, a.convert = function(a, b) {
            if ("auto" == a && this.auto) return a;
            var c, e = "number" == typeof a, f = "string" == typeof a;
            switch(b){
                case t:
                    if (e) return a;
                    if (f && "" === a.replace(r, "")) return +a;
                    c = "number(unitless)";
                    break;
                case u:
                    if (f) {
                        if ("" === a && this.original) return this.original;
                        if (b.test(a)) return "#" == a.charAt(0) && 7 == a.length ? a : d(a);
                    }
                    c = "hex or rgb string";
                    break;
                case v:
                    if (e) return a + this.unit;
                    if (f && b.test(a)) return a;
                    c = "number(px) or string(unit)";
                    break;
                case w:
                    if (e) return a + this.unit;
                    if (f && b.test(a)) return a;
                    c = "number(px) or string(unit or %)";
                    break;
                case x:
                    if (e) return a + this.angle;
                    if (f && b.test(a)) return a;
                    c = "number(deg) or string(angle)";
                    break;
                case y:
                    if (e) return a;
                    if (f && w.test(a)) return a;
                    c = "number(unitless) or string(unit or %)";
            }
            return g(c, a), a;
        }, a.redraw = function() {
            this.el.offsetHeight;
        };
    }), O = l(N, function(a, b) {
        a.init = function() {
            b.init.apply(this, arguments), this.original || (this.original = this.convert(this.get(), u));
        };
    }), P = l(N, function(a, b) {
        a.init = function() {
            b.init.apply(this, arguments), this.animate = this.fallback;
        }, a.get = function() {
            return this.$el[this.name]();
        }, a.update = function(a) {
            this.$el[this.name](a);
        };
    }), Q = l(N, function(a, b) {
        function c(a, b) {
            var c, d, e, f, g;
            for(c in a)f = Z[c], e = f[0], d = f[1] || c, g = this.convert(a[c], e), b.call(this, d, g, e);
        }
        a.init = function() {
            b.init.apply(this, arguments), this.current || (this.current = {}, Z.perspective && U.perspective && (this.current.perspective = U.perspective, V(this.el, this.name, this.style(this.current)), this.redraw()));
        }, a.set = function(a) {
            c.call(this, a, function(a, b) {
                this.current[a] = b;
            }), V(this.el, this.name, this.style(this.current)), this.redraw();
        }, a.transition = function(a) {
            var b = this.values(a);
            this.tween = new T({
                current: this.current,
                values: b,
                duration: this.duration,
                delay: this.delay,
                ease: this.ease
            });
            var c, d = {};
            for(c in this.current)d[c] = c in b ? b[c] : this.current[c];
            this.active = !0, this.nextStyle = this.style(d);
        }, a.fallback = function(a) {
            var b = this.values(a);
            this.tween = new T({
                current: this.current,
                values: b,
                duration: this.duration,
                delay: this.delay,
                ease: this.ease,
                update: this.update,
                context: this
            });
        }, a.update = function() {
            V(this.el, this.name, this.style(this.current));
        }, a.style = function(a) {
            var b, c = "";
            for(b in a)c += b + "(" + a[b] + ") ";
            return c;
        }, a.values = function(a) {
            var b, d = {};
            return c.call(this, a, function(a, c, e) {
                d[a] = c, void 0 === this.current[a] && (b = 0, ~a.indexOf("scale") && (b = 1), this.current[a] = this.convert(b, e));
            }), d;
        };
    }), R = l(function(b) {
        function c(a) {
            1 === n.push(a) && J(g);
        }
        function g() {
            var a, b, c, d = n.length;
            if (d) for(J(g), b = K(), a = d; a--;)c = n[a], c && c.render(b);
        }
        function i(b) {
            var c, d = a.inArray(b, n);
            d >= 0 && (c = n.slice(d + 1), n.length = d, c.length && (n = n.concat(c)));
        }
        function j(a) {
            return Math.round(a * o) / o;
        }
        function k(a, b, c) {
            return e(a[0] + c * (b[0] - a[0]), a[1] + c * (b[1] - a[1]), a[2] + c * (b[2] - a[2]));
        }
        var l = {
            ease: m.ease[1],
            from: 0,
            to: 1
        };
        b.init = function(a) {
            this.duration = a.duration || 0, this.delay = a.delay || 0;
            var b = a.ease || l.ease;
            m[b] && (b = m[b][1]), "function" != typeof b && (b = l.ease), this.ease = b, this.update = a.update || f, this.complete = a.complete || f, this.context = a.context || this, this.name = a.name;
            var c = a.from, d = a.to;
            void 0 === c && (c = l.from), void 0 === d && (d = l.to), this.unit = a.unit || "", "number" == typeof c && "number" == typeof d ? (this.begin = c, this.change = d - c) : this.format(d, c), this.value = this.begin + this.unit, this.start = K(), a.autoplay !== !1 && this.play();
        }, b.play = function() {
            this.active || (this.start || (this.start = K()), this.active = !0, c(this));
        }, b.stop = function() {
            this.active && (this.active = !1, i(this));
        }, b.render = function(a) {
            var b, c = a - this.start;
            if (this.delay) {
                if (c <= this.delay) return;
                c -= this.delay;
            }
            if (c < this.duration) {
                var d = this.ease(c, 0, 1, this.duration);
                return b = this.startRGB ? k(this.startRGB, this.endRGB, d) : j(this.begin + d * this.change), this.value = b + this.unit, void this.update.call(this.context, this.value);
            }
            b = this.endHex || this.begin + this.change, this.value = b + this.unit, this.update.call(this.context, this.value), this.complete.call(this.context), this.destroy();
        }, b.format = function(a, b) {
            if (b += "", a += "", "#" == a.charAt(0)) return this.startRGB = d(b), this.endRGB = d(a), this.endHex = a, this.begin = 0, void (this.change = 1);
            if (!this.unit) {
                var c = b.replace(r, ""), e = a.replace(r, "");
                c !== e && h("tween", b, a), this.unit = c;
            }
            b = parseFloat(b), a = parseFloat(a), this.begin = this.value = b, this.change = a - b;
        }, b.destroy = function() {
            this.stop(), this.context = null, this.ease = this.update = this.complete = f;
        };
        var n = [], o = 1e3;
    }), S = l(R, function(a) {
        a.init = function(a) {
            this.duration = a.duration || 0, this.complete = a.complete || f, this.context = a.context, this.play();
        }, a.render = function(a) {
            var b = a - this.start;
            b < this.duration || (this.complete.call(this.context), this.destroy());
        };
    }), T = l(R, function(a, b) {
        a.init = function(a) {
            this.context = a.context, this.update = a.update, this.tweens = [], this.current = a.current;
            var b, c;
            for(b in a.values)c = a.values[b], this.current[b] !== c && this.tweens.push(new R({
                name: b,
                from: this.current[b],
                to: c,
                duration: a.duration,
                delay: a.delay,
                ease: a.ease,
                autoplay: !1
            }));
            this.play();
        }, a.render = function(a) {
            var b, c, d = this.tweens.length, e = !1;
            for(b = d; b--;)c = this.tweens[b], c.context && (c.render(a), this.current[c.name] = c.value, e = !0);
            return e ? void (this.update && this.update.call(this.context)) : this.destroy();
        }, a.destroy = function() {
            if (b.destroy.call(this), this.tweens) {
                var a, c = this.tweens.length;
                for(a = c; a--;)this.tweens[a].destroy();
                this.tweens = null, this.current = null;
            }
        };
    }), U = b.config = {
        debug: !1,
        defaultUnit: "px",
        defaultAngle: "deg",
        keepInherited: !1,
        hideBackface: !1,
        perspective: "",
        fallback: !G.transition,
        agentTests: []
    };
    b.fallback = function(a) {
        if (!G.transition) return U.fallback = !0;
        U.agentTests.push("(" + a + ")");
        var b = new RegExp(U.agentTests.join("|"), "i");
        U.fallback = b.test(navigator.userAgent);
    }, b.fallback("6.0.[2-5] Safari"), b.tween = function(a) {
        return new R(a);
    }, b.delay = function(a, b, c) {
        return new S({
            complete: b,
            duration: a,
            context: c
        });
    }, a.fn.tram = function(a) {
        return b.call(null, this, a);
    };
    var V = a.style, W = a.css, X = {
        transform: G.transform && G.transform.css
    }, Y = {
        color: [
            O,
            u
        ],
        background: [
            O,
            u,
            "background-color"
        ],
        "outline-color": [
            O,
            u
        ],
        "border-color": [
            O,
            u
        ],
        "border-top-color": [
            O,
            u
        ],
        "border-right-color": [
            O,
            u
        ],
        "border-bottom-color": [
            O,
            u
        ],
        "border-left-color": [
            O,
            u
        ],
        "border-width": [
            N,
            v
        ],
        "border-top-width": [
            N,
            v
        ],
        "border-right-width": [
            N,
            v
        ],
        "border-bottom-width": [
            N,
            v
        ],
        "border-left-width": [
            N,
            v
        ],
        "border-spacing": [
            N,
            v
        ],
        "letter-spacing": [
            N,
            v
        ],
        margin: [
            N,
            v
        ],
        "margin-top": [
            N,
            v
        ],
        "margin-right": [
            N,
            v
        ],
        "margin-bottom": [
            N,
            v
        ],
        "margin-left": [
            N,
            v
        ],
        padding: [
            N,
            v
        ],
        "padding-top": [
            N,
            v
        ],
        "padding-right": [
            N,
            v
        ],
        "padding-bottom": [
            N,
            v
        ],
        "padding-left": [
            N,
            v
        ],
        "outline-width": [
            N,
            v
        ],
        opacity: [
            N,
            t
        ],
        top: [
            N,
            w
        ],
        right: [
            N,
            w
        ],
        bottom: [
            N,
            w
        ],
        left: [
            N,
            w
        ],
        "font-size": [
            N,
            w
        ],
        "text-indent": [
            N,
            w
        ],
        "word-spacing": [
            N,
            w
        ],
        width: [
            N,
            w
        ],
        "min-width": [
            N,
            w
        ],
        "max-width": [
            N,
            w
        ],
        height: [
            N,
            w
        ],
        "min-height": [
            N,
            w
        ],
        "max-height": [
            N,
            w
        ],
        "line-height": [
            N,
            y
        ],
        "scroll-top": [
            P,
            t,
            "scrollTop"
        ],
        "scroll-left": [
            P,
            t,
            "scrollLeft"
        ]
    }, Z = {};
    G.transform && (Y.transform = [
        Q
    ], Z = {
        x: [
            w,
            "translateX"
        ],
        y: [
            w,
            "translateY"
        ],
        rotate: [
            x
        ],
        rotateX: [
            x
        ],
        rotateY: [
            x
        ],
        scale: [
            t
        ],
        scaleX: [
            t
        ],
        scaleY: [
            t
        ],
        skew: [
            x
        ],
        skewX: [
            x
        ],
        skewY: [
            x
        ]
    }), G.transform && G.backface && (Z.z = [
        w,
        "translateZ"
    ], Z.rotateZ = [
        x
    ], Z.scaleZ = [
        t
    ], Z.perspective = [
        v
    ]);
    var $ = /ms/, _ = /s|\./;
    return a.tram = b;
}(window.jQuery);

//# sourceMappingURL=data:application/json;base64,

}),
5756: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
// Include tram for frame-throttling
/* globals window */ 
var $ = window.$;
var tram = __webpack_require__(5487) && $.tram;
/*!
 * Webflow._ (aka) Underscore.js 1.6.0 (custom build)
 *
 * http://underscorejs.org
 * (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Underscore may be freely distributed under the MIT license.
 * @license MIT
 */ /**
 * Webflow custom build of Underscore.js 1.6.0
 * https://github.com/jashkenas/underscore/tree/1.6.0
 *
 * _.each
 * _.map
 * _.find
 * _.filter
 * _.any
 * _.contains
 * _.delay
 * _.defer
 * _.throttle (webflow)
 * _.debounce
 * _.keys
 * _.has
 * _.now
 * _.template (webflow: upgraded to 1.13.6)
 */ module.exports = function() {
    var _ = {};
    // Current version.
    _.VERSION = '1.6.0-Webflow';
    // Establish the object that gets returned to break out of a loop iteration.
    var breaker = {};
    // Save bytes in the minified (but not gzipped) version:
    /* eslint-disable one-var */ var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;
    /* eslint-enable one-var */ // Create quick reference variables for speed access to core prototypes.
    /* eslint-disable one-var, unused-imports/no-unused-vars */ var push = ArrayProto.push, slice = ArrayProto.slice, concat = ArrayProto.concat, toString = ObjProto.toString, hasOwnProperty = ObjProto.hasOwnProperty;
    /* eslint-enable one-var, unused-imports/no-unused-vars */ // All **ECMAScript 5** native function implementations that we hope to use
    // are declared here.
    /* eslint-disable one-var, unused-imports/no-unused-vars */ var nativeForEach = ArrayProto.forEach, nativeMap = ArrayProto.map, nativeReduce = ArrayProto.reduce, nativeReduceRight = ArrayProto.reduceRight, nativeFilter = ArrayProto.filter, nativeEvery = ArrayProto.every, nativeSome = ArrayProto.some, nativeIndexOf = ArrayProto.indexOf, nativeLastIndexOf = ArrayProto.lastIndexOf, nativeIsArray = Array.isArray, nativeKeys = Object.keys, nativeBind = FuncProto.bind;
    /* eslint-enable one-var, unused-imports/no-unused-vars */ // Collection Functions
    // --------------------
    // The cornerstone, an `each` implementation, aka `forEach`.
    // Handles objects with the built-in `forEach`, arrays, and raw objects.
    // Delegates to **ECMAScript 5**'s native `forEach` if available.
    var each = _.each = _.forEach = function(obj, iterator, context) {
        /* jshint shadow:true */ if (obj == null) return obj;
        if (nativeForEach && obj.forEach === nativeForEach) {
            obj.forEach(iterator, context);
        // eslint-disable-next-line no-implicit-coercion
        } else if (obj.length === +obj.length) {
            for(var i = 0, length = obj.length; i < length; i++){
                if (iterator.call(context, obj[i], i, obj) === breaker) return;
            }
        } else {
            var keys = _.keys(obj);
            // eslint-disable-next-line no-redeclare
            for(var i = 0, length = keys.length; i < length; i++){
                if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;
            }
        }
        return obj;
    };
    // Return the results of applying the iterator to each element.
    // Delegates to **ECMAScript 5**'s native `map` if available.
    _.map = _.collect = function(obj, iterator, context) {
        var results = [];
        if (obj == null) return results;
        if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);
        each(obj, function(value, index, list) {
            results.push(iterator.call(context, value, index, list));
        });
        return results;
    };
    // Return the first value which passes a truth test. Aliased as `detect`.
    _.find = _.detect = function(obj, predicate, context) {
        var result;
        any(obj, function(value, index, list) {
            if (predicate.call(context, value, index, list)) {
                result = value;
                return true;
            }
        });
        return result;
    };
    // Return all the elements that pass a truth test.
    // Delegates to **ECMAScript 5**'s native `filter` if available.
    // Aliased as `select`.
    _.filter = _.select = function(obj, predicate, context) {
        var results = [];
        if (obj == null) return results;
        if (nativeFilter && obj.filter === nativeFilter) return obj.filter(predicate, context);
        each(obj, function(value, index, list) {
            if (predicate.call(context, value, index, list)) results.push(value);
        });
        return results;
    };
    // Determine if at least one element in the object matches a truth test.
    // Delegates to **ECMAScript 5**'s native `some` if available.
    // Aliased as `any`.
    var any = _.some = _.any = function(obj, predicate, context) {
        predicate || (predicate = _.identity);
        var result = false;
        if (obj == null) return result;
        if (nativeSome && obj.some === nativeSome) return obj.some(predicate, context);
        each(obj, function(value, index, list) {
            if (result || (result = predicate.call(context, value, index, list))) return breaker;
        });
        return !!result; // eslint-disable-line no-implicit-coercion
    };
    // Determine if the array or object contains a given value (using `===`).
    // Aliased as `include`.
    _.contains = _.include = function(obj, target) {
        if (obj == null) return false;
        if (nativeIndexOf && obj.indexOf === nativeIndexOf) // eslint-disable-next-line eqeqeq
        return obj.indexOf(target) != -1;
        return any(obj, function(value) {
            return value === target;
        });
    };
    // Function (ahem) Functions
    // --------------------
    // Delays a function for the given number of milliseconds, and then calls
    // it with the arguments supplied.
    _.delay = function(func, wait) {
        var args = slice.call(arguments, 2);
        return setTimeout(function() {
            return func.apply(null, args);
        }, wait);
    };
    // Defers a function, scheduling it to run after the current call stack has
    // cleared.
    _.defer = function(func) {
        return _.delay.apply(_, [
            func,
            1
        ].concat(slice.call(arguments, 1)));
    };
    // Returns a function, that, when invoked, will only be triggered once every
    // browser animation frame - using tram's requestAnimationFrame polyfill.
    _.throttle = function(func) {
        // eslint-disable-next-line one-var
        var wait, args, context;
        return function() {
            if (wait) return;
            wait = true;
            args = arguments;
            context = this;
            tram.frame(function() {
                wait = false;
                func.apply(context, args);
            });
        };
    };
    // Returns a function, that, as long as it continues to be invoked, will not
    // be triggered. The function will be called after it stops being called for
    // N milliseconds. If `immediate` is passed, trigger the function on the
    // leading edge, instead of the trailing.
    _.debounce = function(func, wait, immediate) {
        // eslint-disable-next-line one-var
        var timeout, args, context, timestamp, result;
        var later = function() {
            var last = _.now() - timestamp;
            if (last < wait) {
                timeout = setTimeout(later, wait - last);
            } else {
                timeout = null;
                if (!immediate) {
                    result = func.apply(context, args);
                    context = args = null;
                }
            }
        };
        return function() {
            context = this;
            args = arguments;
            timestamp = _.now();
            var callNow = immediate && !timeout;
            if (!timeout) {
                timeout = setTimeout(later, wait);
            }
            if (callNow) {
                result = func.apply(context, args);
                context = args = null;
            }
            return result;
        };
    };
    // Object Functions
    // ----------------
    // Fill in a given object with default properties.
    _.defaults = function(obj) {
        if (!_.isObject(obj)) return obj;
        for(var i = 1, length = arguments.length; i < length; i++){
            var source = arguments[i];
            for(var prop in source){
                // eslint-disable-next-line no-void
                if (obj[prop] === void 0) obj[prop] = source[prop];
            }
        }
        return obj;
    };
    // Retrieve the names of an object's properties.
    // Delegates to **ECMAScript 5**'s native `Object.keys`
    _.keys = function(obj) {
        if (!_.isObject(obj)) return [];
        if (nativeKeys) return nativeKeys(obj);
        var keys = [];
        for(var key in obj)if (_.has(obj, key)) keys.push(key);
        return keys;
    };
    // Shortcut function for checking if an object has a given property directly
    // on itself (in other words, not on a prototype).
    _.has = function(obj, key) {
        return hasOwnProperty.call(obj, key);
    };
    // Is a given variable an object?
    _.isObject = function(obj) {
        return obj === Object(obj);
    };
    // Utility Functions
    // -----------------
    // A (possibly faster) way to get the current timestamp as an integer.
    _.now = Date.now || function() {
        return new Date().getTime();
    };
    // By default, Underscore uses ERB-style template delimiters, change the
    // following template settings to use alternative delimiters.
    _.templateSettings = {
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        escape: /<%-([\s\S]+?)%>/g
    };
    // When customizing `templateSettings`, if you don't want to define an
    // interpolation, evaluation or escaping regex, we need one that is
    // guaranteed not to match.
    var noMatch = /(.)^/;
    // Certain characters need to be escaped so that they can be put into a
    // string literal.
    var escapes = {
        "'": "'",
        '\\': '\\',
        '\r': 'r',
        '\n': 'n',
        '\u2028': 'u2028',
        '\u2029': 'u2029'
    };
    var escapeRegExp = /\\|'|\r|\n|\u2028|\u2029/g;
    var escapeChar = function(match) {
        return '\\' + escapes[match];
    };
    // In order to prevent third-party code injection through
    // `_.templateSettings.variable`, we test it against the following regular
    // expression. It is intentionally a bit more liberal than just matching valid
    // identifiers, but still prevents possible loopholes through defaults or
    // destructuring assignment.
    var bareIdentifier = /^\s*(\w|\$)+\s*$/;
    // JavaScript micro-templating, similar to John Resig's implementation.
    // Underscore templating handles arbitrary delimiters, preserves whitespace,
    // and correctly escapes quotes within interpolated code.
    // NB: `oldSettings` only exists for backwards compatibility.
    _.template = function(text, settings, oldSettings) {
        if (!settings && oldSettings) settings = oldSettings;
        settings = _.defaults({}, settings, _.templateSettings);
        // Combine delimiters into one regular expression via alternation.
        var matcher = RegExp([
            (settings.escape || noMatch).source,
            (settings.interpolate || noMatch).source,
            (settings.evaluate || noMatch).source
        ].join('|') + '|$', 'g');
        // Compile the template source, escaping string literals appropriately.
        var index = 0;
        var source = "__p+='";
        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
            source += text.slice(index, offset).replace(escapeRegExp, escapeChar);
            index = offset + match.length;
            if (escape) {
                source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
            } else if (interpolate) {
                source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
            } else if (evaluate) {
                source += "';\n" + evaluate + "\n__p+='";
            }
            // Adobe VMs need the match returned to produce the correct offset.
            return match;
        });
        source += "';\n";
        var argument = settings.variable;
        if (argument) {
            // Insure against third-party code injection. (CVE-2021-23358)
            if (!bareIdentifier.test(argument)) throw new Error('variable is not a bare identifier: ' + argument);
        } else {
            // If a variable is not specified, place data values in local scope.
            source = 'with(obj||{}){\n' + source + '}\n';
            argument = 'obj';
        }
        source = "var __t,__p='',__j=Array.prototype.join," + "print=function(){__p+=__j.call(arguments,'');};\n" + source + 'return __p;\n';
        var render;
        try {
            // eslint-disable-next-line no-new-func
            render = new Function(settings.variable || 'obj', '_', source);
        } catch (e) {
            e.source = source;
            throw e;
        }
        var template = function(data) {
            return render.call(this, data, _);
        };
        // Provide the compiled source as a convenience for precompilation.
        template.source = 'function(' + argument + '){\n' + source + '}';
        return template;
    };
    // Export underscore
    return _;
}();

//# sourceMappingURL=data:application/json;base64,

}),
9461: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* globals document, window, navigator */ /**
 * Webflow: Brand pages on the subdomain
 */ 
var Webflow = __webpack_require__(3949);
Webflow.define('brand', module.exports = function($) {
    var api = {};
    var doc = document;
    var $html = $('html');
    var $body = $('body');
    var namespace = '.w-webflow-badge';
    var location = window.location;
    var isPhantom = /PhantomJS/i.test(navigator.userAgent);
    var fullScreenEvents = 'fullscreenchange webkitfullscreenchange mozfullscreenchange msfullscreenchange';
    var brandElement;
    // -----------------------------------
    // Module methods
    api.ready = function() {
        var shouldBrand = $html.attr('data-wf-status');
        var publishedDomain = $html.attr('data-wf-domain') || '';
        if (/\.webflow\.io$/i.test(publishedDomain) && location.hostname !== publishedDomain) {
            shouldBrand = true;
        }
        if (shouldBrand && !isPhantom) {
            brandElement = brandElement || createBadge();
            ensureBrand();
            setTimeout(ensureBrand, 500);
            $(doc).off(fullScreenEvents, onFullScreenChange).on(fullScreenEvents, onFullScreenChange);
        }
    };
    function onFullScreenChange() {
        var fullScreen = doc.fullScreen || doc.mozFullScreen || doc.webkitIsFullScreen || doc.msFullscreenElement || Boolean(doc.webkitFullscreenElement);
        $(brandElement).attr('style', fullScreen ? 'display: none !important;' : '');
    }
    function createBadge() {
        var $brand = $('<a class="w-webflow-badge"></a>').attr('href', 'https://webflow.com?utm_campaign=brandjs');
        var $logoArt = $('<img>').attr('src', 'https://d3e54v103j8qbb.cloudfront.net/img/webflow-badge-icon-d2.89e12c322e.svg').attr('alt', '').css({
            marginRight: '4px',
            width: '26px'
        });
        var $logoText = $('<img>').attr('src', 'https://d3e54v103j8qbb.cloudfront.net/img/webflow-badge-text-d2.c82cec3b78.svg').attr('alt', 'Made in Webflow');
        $brand.append($logoArt, $logoText);
        return $brand[0];
    }
    function ensureBrand() {
        var found = $body.children(namespace);
        var match = found.length && found.get(0) === brandElement;
        var inEditor = Webflow.env('editor');
        if (match) {
            // Remove brand when Editor is active
            if (inEditor) {
                found.remove();
            }
            // Exit early, brand is in place
            return;
        }
        // Remove any invalid brand elements
        if (found.length) {
            found.remove();
        }
        // Append the brand (unless Editor is active)
        if (!inEditor) {
            $body.append(brandElement);
        }
    }
    // Export module
    return api;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYmZsb3ctYnJhbmQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBkb2N1bWVudCwgd2luZG93LCBuYXZpZ2F0b3IgKi9cblxuLyoqXG4gKiBXZWJmbG93OiBCcmFuZCBwYWdlcyBvbiB0aGUgc3ViZG9tYWluXG4gKi9cblxudmFyIFdlYmZsb3cgPSByZXF1aXJlKCcuL3dlYmZsb3ctbGliJyk7XG5cbldlYmZsb3cuZGVmaW5lKFxuICAnYnJhbmQnLFxuICAobW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoJCkge1xuICAgIHZhciBhcGkgPSB7fTtcbiAgICB2YXIgZG9jID0gZG9jdW1lbnQ7XG4gICAgdmFyICRodG1sID0gJCgnaHRtbCcpO1xuICAgIHZhciAkYm9keSA9ICQoJ2JvZHknKTtcbiAgICB2YXIgbmFtZXNwYWNlID0gJy53LXdlYmZsb3ctYmFkZ2UnO1xuICAgIHZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcbiAgICB2YXIgaXNQaGFudG9tID0gL1BoYW50b21KUy9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgdmFyIGZ1bGxTY3JlZW5FdmVudHMgPVxuICAgICAgJ2Z1bGxzY3JlZW5jaGFuZ2Ugd2Via2l0ZnVsbHNjcmVlbmNoYW5nZSBtb3pmdWxsc2NyZWVuY2hhbmdlIG1zZnVsbHNjcmVlbmNoYW5nZSc7XG4gICAgdmFyIGJyYW5kRWxlbWVudDtcblxuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gTW9kdWxlIG1ldGhvZHNcblxuICAgIGFwaS5yZWFkeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBzaG91bGRCcmFuZCA9ICRodG1sLmF0dHIoJ2RhdGEtd2Ytc3RhdHVzJyk7XG4gICAgICB2YXIgcHVibGlzaGVkRG9tYWluID0gJGh0bWwuYXR0cignZGF0YS13Zi1kb21haW4nKSB8fCAnJztcbiAgICAgIGlmIChcbiAgICAgICAgL1xcLndlYmZsb3dcXC5pbyQvaS50ZXN0KHB1Ymxpc2hlZERvbWFpbikgJiZcbiAgICAgICAgbG9jYXRpb24uaG9zdG5hbWUgIT09IHB1Ymxpc2hlZERvbWFpblxuICAgICAgKSB7XG4gICAgICAgIHNob3VsZEJyYW5kID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGlmIChzaG91bGRCcmFuZCAmJiAhaXNQaGFudG9tKSB7XG4gICAgICAgIGJyYW5kRWxlbWVudCA9IGJyYW5kRWxlbWVudCB8fCBjcmVhdGVCYWRnZSgpO1xuICAgICAgICBlbnN1cmVCcmFuZCgpO1xuICAgICAgICBzZXRUaW1lb3V0KGVuc3VyZUJyYW5kLCA1MDApO1xuXG4gICAgICAgICQoZG9jKVxuICAgICAgICAgIC5vZmYoZnVsbFNjcmVlbkV2ZW50cywgb25GdWxsU2NyZWVuQ2hhbmdlKVxuICAgICAgICAgIC5vbihmdWxsU2NyZWVuRXZlbnRzLCBvbkZ1bGxTY3JlZW5DaGFuZ2UpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBvbkZ1bGxTY3JlZW5DaGFuZ2UoKSB7XG4gICAgICB2YXIgZnVsbFNjcmVlbiA9XG4gICAgICAgIGRvYy5mdWxsU2NyZWVuIHx8XG4gICAgICAgIGRvYy5tb3pGdWxsU2NyZWVuIHx8XG4gICAgICAgIGRvYy53ZWJraXRJc0Z1bGxTY3JlZW4gfHxcbiAgICAgICAgZG9jLm1zRnVsbHNjcmVlbkVsZW1lbnQgfHxcbiAgICAgICAgQm9vbGVhbihkb2Mud2Via2l0RnVsbHNjcmVlbkVsZW1lbnQpO1xuICAgICAgJChicmFuZEVsZW1lbnQpLmF0dHIoXG4gICAgICAgICdzdHlsZScsXG4gICAgICAgIGZ1bGxTY3JlZW4gPyAnZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OycgOiAnJ1xuICAgICAgKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVCYWRnZSgpIHtcbiAgICAgIHZhciAkYnJhbmQgPSAkKCc8YSBjbGFzcz1cInctd2ViZmxvdy1iYWRnZVwiPjwvYT4nKS5hdHRyKFxuICAgICAgICAnaHJlZicsXG4gICAgICAgICdodHRwczovL3dlYmZsb3cuY29tP3V0bV9jYW1wYWlnbj1icmFuZGpzJ1xuICAgICAgKTtcblxuICAgICAgdmFyICRsb2dvQXJ0ID0gJCgnPGltZz4nKVxuICAgICAgICAuYXR0cihcbiAgICAgICAgICAnc3JjJyxcbiAgICAgICAgICAnaHR0cHM6Ly9kM2U1NHYxMDNqOHFiYi5jbG91ZGZyb250Lm5ldC9pbWcvd2ViZmxvdy1iYWRnZS1pY29uLWQyLjg5ZTEyYzMyMmUuc3ZnJ1xuICAgICAgICApXG4gICAgICAgIC5hdHRyKCdhbHQnLCAnJylcbiAgICAgICAgLmNzcyh7XG4gICAgICAgICAgbWFyZ2luUmlnaHQ6ICc0cHgnLFxuICAgICAgICAgIHdpZHRoOiAnMjZweCcsXG4gICAgICAgIH0pO1xuXG4gICAgICB2YXIgJGxvZ29UZXh0ID0gJCgnPGltZz4nKVxuICAgICAgICAuYXR0cihcbiAgICAgICAgICAnc3JjJyxcbiAgICAgICAgICAnaHR0cHM6Ly9kM2U1NHYxMDNqOHFiYi5jbG91ZGZyb250Lm5ldC9pbWcvd2ViZmxvdy1iYWRnZS10ZXh0LWQyLmM4MmNlYzNiNzguc3ZnJ1xuICAgICAgICApXG4gICAgICAgIC5hdHRyKCdhbHQnLCAnTWFkZSBpbiBXZWJmbG93Jyk7XG5cbiAgICAgICRicmFuZC5hcHBlbmQoJGxvZ29BcnQsICRsb2dvVGV4dCk7XG4gICAgICByZXR1cm4gJGJyYW5kWzBdO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGVuc3VyZUJyYW5kKCkge1xuICAgICAgdmFyIGZvdW5kID0gJGJvZHkuY2hpbGRyZW4obmFtZXNwYWNlKTtcbiAgICAgIHZhciBtYXRjaCA9IGZvdW5kLmxlbmd0aCAmJiBmb3VuZC5nZXQoMCkgPT09IGJyYW5kRWxlbWVudDtcbiAgICAgIHZhciBpbkVkaXRvciA9IFdlYmZsb3cuZW52KCdlZGl0b3InKTtcbiAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICAvLyBSZW1vdmUgYnJhbmQgd2hlbiBFZGl0b3IgaXMgYWN0aXZlXG4gICAgICAgIGlmIChpbkVkaXRvcikge1xuICAgICAgICAgIGZvdW5kLnJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgICAgIC8vIEV4aXQgZWFybHksIGJyYW5kIGlzIGluIHBsYWNlXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIC8vIFJlbW92ZSBhbnkgaW52YWxpZCBicmFuZCBlbGVtZW50c1xuICAgICAgaWYgKGZvdW5kLmxlbmd0aCkge1xuICAgICAgICBmb3VuZC5yZW1vdmUoKTtcbiAgICAgIH1cbiAgICAgIC8vIEFwcGVuZCB0aGUgYnJhbmQgKHVubGVzcyBFZGl0b3IgaXMgYWN0aXZlKVxuICAgICAgaWYgKCFpbkVkaXRvcikge1xuICAgICAgICAkYm9keS5hcHBlbmQoYnJhbmRFbGVtZW50KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBFeHBvcnQgbW9kdWxlXG4gICAgcmV0dXJuIGFwaTtcbiAgfSlcbik7XG4iXSwibmFtZXMiOlsiV2ViZmxvdyIsInJlcXVpcmUiLCJkZWZpbmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiJCIsImFwaSIsImRvYyIsImRvY3VtZW50IiwiJGh0bWwiLCIkYm9keSIsIm5hbWVzcGFjZSIsImxvY2F0aW9uIiwid2luZG93IiwiaXNQaGFudG9tIiwidGVzdCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsImZ1bGxTY3JlZW5FdmVudHMiLCJicmFuZEVsZW1lbnQiLCJyZWFkeSIsInNob3VsZEJyYW5kIiwiYXR0ciIsInB1Ymxpc2hlZERvbWFpbiIsImhvc3RuYW1lIiwiY3JlYXRlQmFkZ2UiLCJlbnN1cmVCcmFuZCIsInNldFRpbWVvdXQiLCJvZmYiLCJvbkZ1bGxTY3JlZW5DaGFuZ2UiLCJvbiIsImZ1bGxTY3JlZW4iLCJtb3pGdWxsU2NyZWVuIiwid2Via2l0SXNGdWxsU2NyZWVuIiwibXNGdWxsc2NyZWVuRWxlbWVudCIsIkJvb2xlYW4iLCJ3ZWJraXRGdWxsc2NyZWVuRWxlbWVudCIsIiRicmFuZCIsIiRsb2dvQXJ0IiwiY3NzIiwibWFyZ2luUmlnaHQiLCJ3aWR0aCIsIiRsb2dvVGV4dCIsImFwcGVuZCIsImZvdW5kIiwiY2hpbGRyZW4iLCJtYXRjaCIsImxlbmd0aCIsImdldCIsImluRWRpdG9yIiwiZW52IiwicmVtb3ZlIl0sIm1hcHBpbmdzIjoiQUFBQSx1Q0FBdUMsR0FFdkM7O0NBRUM7QUFFRCxJQUFJQSxVQUFVQyxRQUFRO0FBRXRCRCxRQUFRRSxNQUFNLENBQ1osU0FDQ0MsT0FBT0MsT0FBTyxHQUFHLFNBQVVDLENBQUM7SUFDM0IsSUFBSUMsTUFBTSxDQUFDO0lBQ1gsSUFBSUMsTUFBTUM7SUFDVixJQUFJQyxRQUFRSixFQUFFO0lBQ2QsSUFBSUssUUFBUUwsRUFBRTtJQUNkLElBQUlNLFlBQVk7SUFDaEIsSUFBSUMsV0FBV0MsT0FBT0QsUUFBUTtJQUM5QixJQUFJRSxZQUFZLGFBQWFDLElBQUksQ0FBQ0MsVUFBVUMsU0FBUztJQUNyRCxJQUFJQyxtQkFDRjtJQUNGLElBQUlDO0lBRUosc0NBQXNDO0lBQ3RDLGlCQUFpQjtJQUVqQmIsSUFBSWMsS0FBSyxHQUFHO1FBQ1YsSUFBSUMsY0FBY1osTUFBTWEsSUFBSSxDQUFDO1FBQzdCLElBQUlDLGtCQUFrQmQsTUFBTWEsSUFBSSxDQUFDLHFCQUFxQjtRQUN0RCxJQUNFLGtCQUFrQlAsSUFBSSxDQUFDUSxvQkFDdkJYLFNBQVNZLFFBQVEsS0FBS0QsaUJBQ3RCO1lBQ0FGLGNBQWM7UUFDaEI7UUFDQSxJQUFJQSxlQUFlLENBQUNQLFdBQVc7WUFDN0JLLGVBQWVBLGdCQUFnQk07WUFDL0JDO1lBQ0FDLFdBQVdELGFBQWE7WUFFeEJyQixFQUFFRSxLQUNDcUIsR0FBRyxDQUFDVixrQkFBa0JXLG9CQUN0QkMsRUFBRSxDQUFDWixrQkFBa0JXO1FBQzFCO0lBQ0Y7SUFFQSxTQUFTQTtRQUNQLElBQUlFLGFBQ0Z4QixJQUFJd0IsVUFBVSxJQUNkeEIsSUFBSXlCLGFBQWEsSUFDakJ6QixJQUFJMEIsa0JBQWtCLElBQ3RCMUIsSUFBSTJCLG1CQUFtQixJQUN2QkMsUUFBUTVCLElBQUk2Qix1QkFBdUI7UUFDckMvQixFQUFFYyxjQUFjRyxJQUFJLENBQ2xCLFNBQ0FTLGFBQWEsOEJBQThCO0lBRS9DO0lBRUEsU0FBU047UUFDUCxJQUFJWSxTQUFTaEMsRUFBRSxtQ0FBbUNpQixJQUFJLENBQ3BELFFBQ0E7UUFHRixJQUFJZ0IsV0FBV2pDLEVBQUUsU0FDZGlCLElBQUksQ0FDSCxPQUNBLGtGQUVEQSxJQUFJLENBQUMsT0FBTyxJQUNaaUIsR0FBRyxDQUFDO1lBQ0hDLGFBQWE7WUFDYkMsT0FBTztRQUNUO1FBRUYsSUFBSUMsWUFBWXJDLEVBQUUsU0FDZmlCLElBQUksQ0FDSCxPQUNBLGtGQUVEQSxJQUFJLENBQUMsT0FBTztRQUVmZSxPQUFPTSxNQUFNLENBQUNMLFVBQVVJO1FBQ3hCLE9BQU9MLE1BQU0sQ0FBQyxFQUFFO0lBQ2xCO0lBRUEsU0FBU1g7UUFDUCxJQUFJa0IsUUFBUWxDLE1BQU1tQyxRQUFRLENBQUNsQztRQUMzQixJQUFJbUMsUUFBUUYsTUFBTUcsTUFBTSxJQUFJSCxNQUFNSSxHQUFHLENBQUMsT0FBTzdCO1FBQzdDLElBQUk4QixXQUFXakQsUUFBUWtELEdBQUcsQ0FBQztRQUMzQixJQUFJSixPQUFPO1lBQ1QscUNBQXFDO1lBQ3JDLElBQUlHLFVBQVU7Z0JBQ1pMLE1BQU1PLE1BQU07WUFDZDtZQUNBLGdDQUFnQztZQUNoQztRQUNGO1FBQ0Esb0NBQW9DO1FBQ3BDLElBQUlQLE1BQU1HLE1BQU0sRUFBRTtZQUNoQkgsTUFBTU8sTUFBTTtRQUNkO1FBQ0EsNkNBQTZDO1FBQzdDLElBQUksQ0FBQ0YsVUFBVTtZQUNidkMsTUFBTWlDLE1BQU0sQ0FBQ3hCO1FBQ2Y7SUFDRjtJQUVBLGdCQUFnQjtJQUNoQixPQUFPYjtBQUNUIn0=

}),
322: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* globals document, window, localStorage, WEBFLOW_API_HOST, WEBFLOW_DEFAULT_HOST */ /**
 * Webflow: Editor loader
 */ 
var Webflow = __webpack_require__(3949);
Webflow.define('edit', module.exports = function($, _, options) {
    options = options || {};
    // Exit early in test env or when inside an iframe
    if (Webflow.env('test') || Webflow.env('frame')) {
        // Allow test fixtures to continue
        if (!options.fixture && !inTestRunner()) {
            return {
                exit: 1
            };
        }
    }
    var api = {};
    var $win = $(window);
    var $html = $(document.documentElement);
    var location = document.location;
    var hashchange = 'hashchange';
    var loaded;
    var loadEditor = options.load || load;
    var hasLocalStorage = false;
    try {
        // Check localStorage for editor data
        hasLocalStorage = localStorage && localStorage.getItem && localStorage.getItem('WebflowEditor');
    } catch (e) {
    // SecurityError: browser storage has been disabled
    }
    if (hasLocalStorage) {
        loadEditor();
    } else if (location.search) {
        // Check url query for `edit` parameter or any url ending in `?edit`
        if (/[?&](edit)(?:[=&?]|$)/.test(location.search) || /\?edit$/.test(location.href)) {
            loadEditor();
        }
    } else {
        // Check hash fragment to support `#hash?edit`
        $win.on(hashchange, checkHash).triggerHandler(hashchange);
    }
    function checkHash() {
        if (loaded) {
            return;
        }
        // Load editor when hash contains `?edit`
        if (/\?edit/.test(location.hash)) {
            loadEditor();
        }
    }
    function load() {
        loaded = true;
        // Predefine global immediately to benefit Webflow.env
        window.WebflowEditor = true;
        $win.off(hashchange, checkHash);
        checkThirdPartyCookieSupport(function(thirdPartyCookiesSupported) {
            $.ajax({
                url: cleanSlashes("https://editor-api.webflow.com" + '/api/editor/view'),
                data: {
                    siteId: $html.attr('data-wf-site')
                },
                xhrFields: {
                    withCredentials: true
                },
                dataType: 'json',
                crossDomain: true,
                success: success(thirdPartyCookiesSupported)
            });
        });
    }
    function success(thirdPartyCookiesSupported) {
        return function(data) {
            if (!data) {
                console.error('Could not load editor data');
                return;
            }
            data.thirdPartyCookiesSupported = thirdPartyCookiesSupported;
            getScript(prefix(data.scriptPath), function() {
                window.WebflowEditor(data);
            });
        };
    }
    function getScript(url, done) {
        $.ajax({
            type: 'GET',
            url,
            dataType: 'script',
            cache: true
        }).then(done, error);
    }
    function error(jqXHR, textStatus, errorThrown) {
        console.error('Could not load editor script: ' + textStatus);
        throw errorThrown;
    }
    function prefix(url) {
        return url.indexOf('//') >= 0 ? url : cleanSlashes("https://editor-api.webflow.com" + url);
    }
    function cleanSlashes(url) {
        return url.replace(/([^:])\/\//g, '$1/');
    }
    function checkThirdPartyCookieSupport(callback) {
        var iframe = window.document.createElement('iframe');
        iframe.src = "https://webflow.com" + '/site/third-party-cookie-check.html';
        iframe.style.display = 'none';
        iframe.sandbox = 'allow-scripts allow-same-origin';
        var handleMessage = function(event) {
            if (event.data === 'WF_third_party_cookies_unsupported') {
                cleanUpCookieCheckerIframe(iframe, handleMessage);
                callback(false);
            } else if (event.data === 'WF_third_party_cookies_supported') {
                cleanUpCookieCheckerIframe(iframe, handleMessage);
                callback(true);
            }
        };
        iframe.onerror = function() {
            cleanUpCookieCheckerIframe(iframe, handleMessage);
            callback(false);
        };
        window.addEventListener('message', handleMessage, false);
        window.document.body.appendChild(iframe);
    }
    function cleanUpCookieCheckerIframe(iframe, listener) {
        window.removeEventListener('message', listener, false);
        iframe.remove();
    }
    // Export module
    return api;
});
function inTestRunner() {
    try {
        return Boolean(window.top.__Cypress__ || window.PLAYWRIGHT_TEST);
    } catch (e) {
        return false;
    }
}

//# sourceMappingURL=data:application/json;base64,

}),
2338: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* globals window, document */ /**
 * Webflow: focus-visible
 */ 
var Webflow = __webpack_require__(3949);
/*
 * This polyfill comes from https://github.com/WICG/focus-visible
 */ Webflow.define('focus-visible', module.exports = function() {
    /**
     * Applies the :focus-visible polyfill at the given scope.
     * A scope in this case is either the top-level Document or a Shadow Root.
     *
     * @param {(Document|ShadowRoot)} scope
     * @see https://github.com/WICG/focus-visible
     */ function applyFocusVisiblePolyfill(scope) {
        var hadKeyboardEvent = true;
        var hadFocusVisibleRecently = false;
        var hadFocusVisibleRecentlyTimeout = null;
        var inputTypesAllowlist = {
            text: true,
            search: true,
            url: true,
            tel: true,
            email: true,
            password: true,
            number: true,
            date: true,
            month: true,
            week: true,
            time: true,
            datetime: true,
            'datetime-local': true
        };
        /**
       * Helper function for legacy browsers and iframes which sometimes focus
       * elements like document, body, and non-interactive SVG.
       * @param {Element} el
       */ function isValidFocusTarget(el) {
            if (el && el !== document && el.nodeName !== 'HTML' && el.nodeName !== 'BODY' && 'classList' in el && 'contains' in el.classList) {
                return true;
            }
            return false;
        }
        /**
       * Computes whether the given element should automatically trigger the
       * `focus-visible` class being added, i.e. whether it should always match
       * `:focus-visible` when focused.
       * @param {Element} el
       * @return {boolean}
       */ function focusTriggersKeyboardModality(el) {
            var type = el.type;
            var tagName = el.tagName;
            if (tagName === 'INPUT' && inputTypesAllowlist[type] && !el.readOnly) {
                return true;
            }
            if (tagName === 'TEXTAREA' && !el.readOnly) {
                return true;
            }
            if (el.isContentEditable) {
                return true;
            }
            return false;
        }
        function addFocusVisibleAttribute(el) {
            if (el.getAttribute('data-wf-focus-visible')) {
                return;
            }
            el.setAttribute('data-wf-focus-visible', 'true');
        }
        function removeFocusVisibleAttribute(el) {
            if (!el.getAttribute('data-wf-focus-visible')) {
                return;
            }
            el.removeAttribute('data-wf-focus-visible');
        }
        /**
       * If the most recent user interaction was via the keyboard;
       * and the key press did not include a meta, alt/option, or control key;
       * then the modality is keyboard. Otherwise, the modality is not keyboard.
       * Apply `focus-visible` to any current active element and keep track
       * of our keyboard modality state with `hadKeyboardEvent`.
       * @param {KeyboardEvent} e
       */ function onKeyDown(e) {
            if (e.metaKey || e.altKey || e.ctrlKey) {
                return;
            }
            if (isValidFocusTarget(scope.activeElement)) {
                addFocusVisibleAttribute(scope.activeElement);
            }
            hadKeyboardEvent = true;
        }
        /**
       * If at any point a user clicks with a pointing device, ensure that we change
       * the modality away from keyboard.
       * This avoids the situation where a user presses a key on an already focused
       * element, and then clicks on a different element, focusing it with a
       * pointing device, while we still think we're in keyboard modality.
       * @param {Event} e
       */ function onPointerDown() {
            hadKeyboardEvent = false;
        }
        /**
       * On `focus`, add the `focus-visible` class to the target if:
       * - the target received focus as a result of keyboard navigation, or
       * - the event target is an element that will likely require interaction
       *   via the keyboard (e.g. a text box)
       * @param {Event} e
       */ function onFocus(e) {
            // Prevent IE from focusing the document or HTML element.
            if (!isValidFocusTarget(e.target)) {
                return;
            }
            if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {
                addFocusVisibleAttribute(e.target);
            }
        }
        /**
       * On `blur`, remove the `focus-visible` class from the target.
       * @param {Event} e
       */ function onBlur(e) {
            if (!isValidFocusTarget(e.target)) {
                return;
            }
            if (e.target.hasAttribute('data-wf-focus-visible')) {
                // To detect a tab/window switch, we look for a blur event followed
                // rapidly by a visibility change.
                // If we don't see a visibility change within 100ms, it's probably a
                // regular focus change.
                hadFocusVisibleRecently = true;
                window.clearTimeout(hadFocusVisibleRecentlyTimeout);
                hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {
                    hadFocusVisibleRecently = false;
                }, 100);
                removeFocusVisibleAttribute(e.target);
            }
        }
        /**
       * If the user changes tabs, keep track of whether or not the previously
       * focused element had .focus-visible.
       * @param {Event} e
       */ function onVisibilityChange() {
            if (document.visibilityState === 'hidden') {
                // If the tab becomes active again, the browser will handle calling focus
                // on the element (Safari actually calls it twice).
                // If this tab change caused a blur on an element with focus-visible,
                // re-apply the class when the user switches back to the tab.
                if (hadFocusVisibleRecently) {
                    hadKeyboardEvent = true;
                }
                addInitialPointerMoveListeners();
            }
        }
        /**
       * Add a group of listeners to detect usage of any pointing devices.
       * These listeners will be added when the polyfill first loads, and anytime
       * the window is blurred, so that they are active when the window regains
       * focus.
       */ function addInitialPointerMoveListeners() {
            document.addEventListener('mousemove', onInitialPointerMove);
            document.addEventListener('mousedown', onInitialPointerMove);
            document.addEventListener('mouseup', onInitialPointerMove);
            document.addEventListener('pointermove', onInitialPointerMove);
            document.addEventListener('pointerdown', onInitialPointerMove);
            document.addEventListener('pointerup', onInitialPointerMove);
            document.addEventListener('touchmove', onInitialPointerMove);
            document.addEventListener('touchstart', onInitialPointerMove);
            document.addEventListener('touchend', onInitialPointerMove);
        }
        function removeInitialPointerMoveListeners() {
            document.removeEventListener('mousemove', onInitialPointerMove);
            document.removeEventListener('mousedown', onInitialPointerMove);
            document.removeEventListener('mouseup', onInitialPointerMove);
            document.removeEventListener('pointermove', onInitialPointerMove);
            document.removeEventListener('pointerdown', onInitialPointerMove);
            document.removeEventListener('pointerup', onInitialPointerMove);
            document.removeEventListener('touchmove', onInitialPointerMove);
            document.removeEventListener('touchstart', onInitialPointerMove);
            document.removeEventListener('touchend', onInitialPointerMove);
        }
        /**
       * When the polfyill first loads, assume the user is in keyboard modality.
       * If any event is received from a pointing device (e.g. mouse, pointer,
       * touch), turn off keyboard modality.
       * This accounts for situations where focus enters the page from the URL bar.
       * @param {Event} e
       */ function onInitialPointerMove(e) {
            // Work around a Safari quirk that fires a mousemove on <html> whenever the
            // window blurs, even if you're tabbing out of the page. ¯\_(ツ)_/¯
            if (e.target.nodeName && e.target.nodeName.toLowerCase() === 'html') {
                return;
            }
            hadKeyboardEvent = false;
            removeInitialPointerMoveListeners();
        }
        // For some kinds of state, we are interested in changes at the global scope
        // only. For example, global pointer input, global key presses and global
        // visibility change should affect the state at every scope:
        document.addEventListener('keydown', onKeyDown, true);
        document.addEventListener('mousedown', onPointerDown, true);
        document.addEventListener('pointerdown', onPointerDown, true);
        document.addEventListener('touchstart', onPointerDown, true);
        document.addEventListener('visibilitychange', onVisibilityChange, true);
        addInitialPointerMoveListeners();
        // For focus and blur, we specifically care about state changes in the local
        // scope. This is because focus / blur events that originate from within a
        // shadow root are not re-dispatched from the host element if it was already
        // the active element in its own scope:
        scope.addEventListener('focus', onFocus, true);
        scope.addEventListener('blur', onBlur, true);
    }
    function ready() {
        if (typeof document !== 'undefined') {
            try {
                // check for native support; this will throw if the selector is not considered valid
                document.querySelector(':focus-visible');
            } catch (e) {
                // :focus-visible pseudo-selector is not supported natively
                applyFocusVisiblePolyfill(document);
            }
        }
    }
    // Export module
    return {
        ready
    };
});

//# sourceMappingURL=data:application/json;base64,

}),
8334: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* globals document, MouseEvent */ /**
 * Webflow: focus
 */ 
var Webflow = __webpack_require__(3949);
/*
 * Safari has a weird bug where it doesn't support :focus for links with hrefs,
 * buttons, and input[type=button|submit], so we listen for mousedown events
 * instead and force the element to emit a focus event in those cases.

 * See these webkit bugs for reference:
 * https://bugs.webkit.org/show_bug.cgi?id=22261
 * https://bugs.webkit.org/show_bug.cgi?id=229895
 */ Webflow.define('focus', module.exports = function() {
    var capturedEvents = [];
    var capturing = false;
    function captureEvent(e) {
        if (capturing) {
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
            capturedEvents.unshift(e);
        }
    }
    /*
     * The only mousedown events we care about here are ones emanating from
     * (A) anchor links with href attribute,
     * (B) non-disabled buttons,
     * (C) non-disabled textarea,
     * (D) non-disabled inputs of type "button", "reset", "checkbox", "radio", "submit"
     * (E) non-interactive elements (button, a, input, textarea, select) that have a tabindex with a numeric value
     * (F) audio elements
     * (G) video elements with controls attribute
     */ function isPolyfilledFocusEvent(e) {
        var el = e.target;
        var tag = el.tagName;
        return /^a$/i.test(tag) && el.href != null || // (A)
        /^(button|textarea)$/i.test(tag) && el.disabled !== true || // (B) (C)
        /^input$/i.test(tag) && /^(button|reset|submit|radio|checkbox)$/i.test(el.type) && !el.disabled || // (D)
        !/^(button|input|textarea|select|a)$/i.test(tag) && !Number.isNaN(Number.parseFloat(el.tabIndex)) || // (E)
        /^audio$/i.test(tag) || // (F)
        /^video$/i.test(tag) && el.controls === true // (G)
        ;
    }
    function handler(e) {
        if (isPolyfilledFocusEvent(e)) {
            // start capturing possible out-of-order mouse events
            capturing = true;
            /*
         * enqueue the focus event _after_ the current batch of events, which
         * includes any blur events. The correct order of events is:
         *
         * [this element] MOUSEDOWN               <-- this event
         * [previously active element] BLUR
         * [previously active element] FOCUSOUT
         * [this element] FOCUS                   <-- forced event
         * [this element] FOCUSIN                 <-- forced event
         * [this element] MOUSEUP                 <-- possibly captured event (it may have fired _before_ the FOCUS event)
         * [this element] CLICK                   <-- possibly captured event (it may have fired _before_ the FOCUS event)
         */ setTimeout(()=>{
                // stop capturing possible out-of-order mouse events
                capturing = false;
                // trigger focus event
                e.target.focus();
                // re-dispatch captured mouse events in order
                while(capturedEvents.length > 0){
                    var event = capturedEvents.pop();
                    event.target.dispatchEvent(new MouseEvent(event.type, event));
                }
            }, 0);
        }
    }
    function ready() {
        if (typeof document !== 'undefined' && document.body.hasAttribute('data-wf-focus-within') && Webflow.env.safari) {
            document.addEventListener('mousedown', handler, true);
            document.addEventListener('mouseup', captureEvent, true);
            document.addEventListener('click', captureEvent, true);
        }
    }
    // Export module
    return {
        ready
    };
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYmZsb3ctZm9jdXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBkb2N1bWVudCwgTW91c2VFdmVudCAqL1xuXG4vKipcbiAqIFdlYmZsb3c6IGZvY3VzXG4gKi9cblxudmFyIFdlYmZsb3cgPSByZXF1aXJlKCcuL3dlYmZsb3ctbGliJyk7XG5cbi8qXG4gKiBTYWZhcmkgaGFzIGEgd2VpcmQgYnVnIHdoZXJlIGl0IGRvZXNuJ3Qgc3VwcG9ydCA6Zm9jdXMgZm9yIGxpbmtzIHdpdGggaHJlZnMsXG4gKiBidXR0b25zLCBhbmQgaW5wdXRbdHlwZT1idXR0b258c3VibWl0XSwgc28gd2UgbGlzdGVuIGZvciBtb3VzZWRvd24gZXZlbnRzXG4gKiBpbnN0ZWFkIGFuZCBmb3JjZSB0aGUgZWxlbWVudCB0byBlbWl0IGEgZm9jdXMgZXZlbnQgaW4gdGhvc2UgY2FzZXMuXG5cbiAqIFNlZSB0aGVzZSB3ZWJraXQgYnVncyBmb3IgcmVmZXJlbmNlOlxuICogaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTIyMjYxXG4gKiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjI5ODk1XG4gKi9cbldlYmZsb3cuZGVmaW5lKFxuICAnZm9jdXMnLFxuICAobW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGNhcHR1cmVkRXZlbnRzID0gW107XG4gICAgdmFyIGNhcHR1cmluZyA9IGZhbHNlO1xuXG4gICAgZnVuY3Rpb24gY2FwdHVyZUV2ZW50KGUpIHtcbiAgICAgIGlmIChjYXB0dXJpbmcpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICBjYXB0dXJlZEV2ZW50cy51bnNoaWZ0KGUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qXG4gICAgICogVGhlIG9ubHkgbW91c2Vkb3duIGV2ZW50cyB3ZSBjYXJlIGFib3V0IGhlcmUgYXJlIG9uZXMgZW1hbmF0aW5nIGZyb21cbiAgICAgKiAoQSkgYW5jaG9yIGxpbmtzIHdpdGggaHJlZiBhdHRyaWJ1dGUsXG4gICAgICogKEIpIG5vbi1kaXNhYmxlZCBidXR0b25zLFxuICAgICAqIChDKSBub24tZGlzYWJsZWQgdGV4dGFyZWEsXG4gICAgICogKEQpIG5vbi1kaXNhYmxlZCBpbnB1dHMgb2YgdHlwZSBcImJ1dHRvblwiLCBcInJlc2V0XCIsIFwiY2hlY2tib3hcIiwgXCJyYWRpb1wiLCBcInN1Ym1pdFwiXG4gICAgICogKEUpIG5vbi1pbnRlcmFjdGl2ZSBlbGVtZW50cyAoYnV0dG9uLCBhLCBpbnB1dCwgdGV4dGFyZWEsIHNlbGVjdCkgdGhhdCBoYXZlIGEgdGFiaW5kZXggd2l0aCBhIG51bWVyaWMgdmFsdWVcbiAgICAgKiAoRikgYXVkaW8gZWxlbWVudHNcbiAgICAgKiAoRykgdmlkZW8gZWxlbWVudHMgd2l0aCBjb250cm9scyBhdHRyaWJ1dGVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc1BvbHlmaWxsZWRGb2N1c0V2ZW50KGUpIHtcbiAgICAgIHZhciBlbCA9IGUudGFyZ2V0O1xuICAgICAgdmFyIHRhZyA9IGVsLnRhZ05hbWU7XG4gICAgICByZXR1cm4gKFxuICAgICAgICAoL15hJC9pLnRlc3QodGFnKSAmJiBlbC5ocmVmICE9IG51bGwpIHx8IC8vIChBKVxuICAgICAgICAoL14oYnV0dG9ufHRleHRhcmVhKSQvaS50ZXN0KHRhZykgJiYgZWwuZGlzYWJsZWQgIT09IHRydWUpIHx8IC8vIChCKSAoQylcbiAgICAgICAgKC9eaW5wdXQkL2kudGVzdCh0YWcpICYmXG4gICAgICAgICAgL14oYnV0dG9ufHJlc2V0fHN1Ym1pdHxyYWRpb3xjaGVja2JveCkkL2kudGVzdChlbC50eXBlKSAmJlxuICAgICAgICAgICFlbC5kaXNhYmxlZCkgfHwgLy8gKEQpXG4gICAgICAgICghL14oYnV0dG9ufGlucHV0fHRleHRhcmVhfHNlbGVjdHxhKSQvaS50ZXN0KHRhZykgJiZcbiAgICAgICAgICAhTnVtYmVyLmlzTmFOKE51bWJlci5wYXJzZUZsb2F0KGVsLnRhYkluZGV4KSkpIHx8IC8vIChFKVxuICAgICAgICAvXmF1ZGlvJC9pLnRlc3QodGFnKSB8fCAvLyAoRilcbiAgICAgICAgKC9edmlkZW8kL2kudGVzdCh0YWcpICYmIGVsLmNvbnRyb2xzID09PSB0cnVlKSAvLyAoRylcbiAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlcihlKSB7XG4gICAgICBpZiAoaXNQb2x5ZmlsbGVkRm9jdXNFdmVudChlKSkge1xuICAgICAgICAvLyBzdGFydCBjYXB0dXJpbmcgcG9zc2libGUgb3V0LW9mLW9yZGVyIG1vdXNlIGV2ZW50c1xuICAgICAgICBjYXB0dXJpbmcgPSB0cnVlO1xuXG4gICAgICAgIC8qXG4gICAgICAgICAqIGVucXVldWUgdGhlIGZvY3VzIGV2ZW50IF9hZnRlcl8gdGhlIGN1cnJlbnQgYmF0Y2ggb2YgZXZlbnRzLCB3aGljaFxuICAgICAgICAgKiBpbmNsdWRlcyBhbnkgYmx1ciBldmVudHMuIFRoZSBjb3JyZWN0IG9yZGVyIG9mIGV2ZW50cyBpczpcbiAgICAgICAgICpcbiAgICAgICAgICogW3RoaXMgZWxlbWVudF0gTU9VU0VET1dOICAgICAgICAgICAgICAgPC0tIHRoaXMgZXZlbnRcbiAgICAgICAgICogW3ByZXZpb3VzbHkgYWN0aXZlIGVsZW1lbnRdIEJMVVJcbiAgICAgICAgICogW3ByZXZpb3VzbHkgYWN0aXZlIGVsZW1lbnRdIEZPQ1VTT1VUXG4gICAgICAgICAqIFt0aGlzIGVsZW1lbnRdIEZPQ1VTICAgICAgICAgICAgICAgICAgIDwtLSBmb3JjZWQgZXZlbnRcbiAgICAgICAgICogW3RoaXMgZWxlbWVudF0gRk9DVVNJTiAgICAgICAgICAgICAgICAgPC0tIGZvcmNlZCBldmVudFxuICAgICAgICAgKiBbdGhpcyBlbGVtZW50XSBNT1VTRVVQICAgICAgICAgICAgICAgICA8LS0gcG9zc2libHkgY2FwdHVyZWQgZXZlbnQgKGl0IG1heSBoYXZlIGZpcmVkIF9iZWZvcmVfIHRoZSBGT0NVUyBldmVudClcbiAgICAgICAgICogW3RoaXMgZWxlbWVudF0gQ0xJQ0sgICAgICAgICAgICAgICAgICAgPC0tIHBvc3NpYmx5IGNhcHR1cmVkIGV2ZW50IChpdCBtYXkgaGF2ZSBmaXJlZCBfYmVmb3JlXyB0aGUgRk9DVVMgZXZlbnQpXG4gICAgICAgICAqL1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAvLyBzdG9wIGNhcHR1cmluZyBwb3NzaWJsZSBvdXQtb2Ytb3JkZXIgbW91c2UgZXZlbnRzXG4gICAgICAgICAgY2FwdHVyaW5nID0gZmFsc2U7XG5cbiAgICAgICAgICAvLyB0cmlnZ2VyIGZvY3VzIGV2ZW50XG4gICAgICAgICAgZS50YXJnZXQuZm9jdXMoKTtcblxuICAgICAgICAgIC8vIHJlLWRpc3BhdGNoIGNhcHR1cmVkIG1vdXNlIGV2ZW50cyBpbiBvcmRlclxuICAgICAgICAgIHdoaWxlIChjYXB0dXJlZEV2ZW50cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB2YXIgZXZlbnQgPSBjYXB0dXJlZEV2ZW50cy5wb3AoKTtcbiAgICAgICAgICAgIGV2ZW50LnRhcmdldC5kaXNwYXRjaEV2ZW50KG5ldyBNb3VzZUV2ZW50KGV2ZW50LnR5cGUsIGV2ZW50KSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZWFkeSgpIHtcbiAgICAgIGlmIChcbiAgICAgICAgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICBkb2N1bWVudC5ib2R5Lmhhc0F0dHJpYnV0ZSgnZGF0YS13Zi1mb2N1cy13aXRoaW4nKSAmJlxuICAgICAgICBXZWJmbG93LmVudi5zYWZhcmlcbiAgICAgICkge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBoYW5kbGVyLCB0cnVlKTtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGNhcHR1cmVFdmVudCwgdHJ1ZSk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2FwdHVyZUV2ZW50LCB0cnVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBFeHBvcnQgbW9kdWxlXG4gICAgcmV0dXJuIHtyZWFkeX07XG4gIH0pXG4pO1xuIl0sIm5hbWVzIjpbIldlYmZsb3ciLCJyZXF1aXJlIiwiZGVmaW5lIiwibW9kdWxlIiwiZXhwb3J0cyIsImNhcHR1cmVkRXZlbnRzIiwiY2FwdHVyaW5nIiwiY2FwdHVyZUV2ZW50IiwiZSIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwidW5zaGlmdCIsImlzUG9seWZpbGxlZEZvY3VzRXZlbnQiLCJlbCIsInRhcmdldCIsInRhZyIsInRhZ05hbWUiLCJ0ZXN0IiwiaHJlZiIsImRpc2FibGVkIiwidHlwZSIsIk51bWJlciIsImlzTmFOIiwicGFyc2VGbG9hdCIsInRhYkluZGV4IiwiY29udHJvbHMiLCJoYW5kbGVyIiwic2V0VGltZW91dCIsImZvY3VzIiwibGVuZ3RoIiwiZXZlbnQiLCJwb3AiLCJkaXNwYXRjaEV2ZW50IiwiTW91c2VFdmVudCIsInJlYWR5IiwiZG9jdW1lbnQiLCJib2R5IiwiaGFzQXR0cmlidXRlIiwiZW52Iiwic2FmYXJpIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6IkFBQUEsZ0NBQWdDLEdBRWhDOztDQUVDO0FBRUQsSUFBSUEsVUFBVUMsUUFBUTtBQUV0Qjs7Ozs7Ozs7Q0FRQyxHQUNERCxRQUFRRSxNQUFNLENBQ1osU0FDQ0MsT0FBT0MsT0FBTyxHQUFHO0lBQ2hCLElBQUlDLGlCQUFpQixFQUFFO0lBQ3ZCLElBQUlDLFlBQVk7SUFFaEIsU0FBU0MsYUFBYUMsQ0FBQztRQUNyQixJQUFJRixXQUFXO1lBQ2JFLEVBQUVDLGNBQWM7WUFDaEJELEVBQUVFLGVBQWU7WUFDakJGLEVBQUVHLHdCQUF3QjtZQUMxQk4sZUFBZU8sT0FBTyxDQUFDSjtRQUN6QjtJQUNGO0lBRUE7Ozs7Ozs7OztLQVNDLEdBQ0QsU0FBU0ssdUJBQXVCTCxDQUFDO1FBQy9CLElBQUlNLEtBQUtOLEVBQUVPLE1BQU07UUFDakIsSUFBSUMsTUFBTUYsR0FBR0csT0FBTztRQUNwQixPQUNFLEFBQUMsT0FBT0MsSUFBSSxDQUFDRixRQUFRRixHQUFHSyxJQUFJLElBQUksUUFBUyxNQUFNO1FBQzlDLHVCQUF1QkQsSUFBSSxDQUFDRixRQUFRRixHQUFHTSxRQUFRLEtBQUssUUFBUyxVQUFVO1FBQ3ZFLFdBQVdGLElBQUksQ0FBQ0YsUUFDZiwwQ0FBMENFLElBQUksQ0FBQ0osR0FBR08sSUFBSSxLQUN0RCxDQUFDUCxHQUFHTSxRQUFRLElBQUssTUFBTTtRQUN4QixDQUFDLHNDQUFzQ0YsSUFBSSxDQUFDRixRQUMzQyxDQUFDTSxPQUFPQyxLQUFLLENBQUNELE9BQU9FLFVBQVUsQ0FBQ1YsR0FBR1csUUFBUSxNQUFPLE1BQU07UUFDMUQsV0FBV1AsSUFBSSxDQUFDRixRQUFRLE1BQU07UUFDN0IsV0FBV0UsSUFBSSxDQUFDRixRQUFRRixHQUFHWSxRQUFRLEtBQUssS0FBTSxNQUFNOztJQUV6RDtJQUVBLFNBQVNDLFFBQVFuQixDQUFDO1FBQ2hCLElBQUlLLHVCQUF1QkwsSUFBSTtZQUM3QixxREFBcUQ7WUFDckRGLFlBQVk7WUFFWjs7Ozs7Ozs7Ozs7U0FXQyxHQUNEc0IsV0FBVztnQkFDVCxvREFBb0Q7Z0JBQ3BEdEIsWUFBWTtnQkFFWixzQkFBc0I7Z0JBQ3RCRSxFQUFFTyxNQUFNLENBQUNjLEtBQUs7Z0JBRWQsNkNBQTZDO2dCQUM3QyxNQUFPeEIsZUFBZXlCLE1BQU0sR0FBRyxFQUFHO29CQUNoQyxJQUFJQyxRQUFRMUIsZUFBZTJCLEdBQUc7b0JBQzlCRCxNQUFNaEIsTUFBTSxDQUFDa0IsYUFBYSxDQUFDLElBQUlDLFdBQVdILE1BQU1WLElBQUksRUFBRVU7Z0JBQ3hEO1lBQ0YsR0FBRztRQUNMO0lBQ0Y7SUFFQSxTQUFTSTtRQUNQLElBQ0UsT0FBT0MsYUFBYSxlQUNwQkEsU0FBU0MsSUFBSSxDQUFDQyxZQUFZLENBQUMsMkJBQzNCdEMsUUFBUXVDLEdBQUcsQ0FBQ0MsTUFBTSxFQUNsQjtZQUNBSixTQUFTSyxnQkFBZ0IsQ0FBQyxhQUFhZCxTQUFTO1lBQ2hEUyxTQUFTSyxnQkFBZ0IsQ0FBQyxXQUFXbEMsY0FBYztZQUNuRDZCLFNBQVNLLGdCQUFnQixDQUFDLFNBQVNsQyxjQUFjO1FBQ25EO0lBQ0Y7SUFFQSxnQkFBZ0I7SUFDaEIsT0FBTztRQUFDNEI7SUFBSztBQUNmIn0=

}),
7199: (function (module) {
"use strict";
/* globals window */ /**
 * Webflow: IX Event triggers for other modules
 */ 
var $ = window.jQuery;
var api = {};
var eventQueue = [];
var namespace = '.w-ix';
var eventTriggers = {
    reset: function(i, el) {
        el.__wf_intro = null;
    },
    intro: function(i, el) {
        if (el.__wf_intro) {
            return;
        }
        el.__wf_intro = true;
        $(el).triggerHandler(api.types.INTRO);
    },
    outro: function(i, el) {
        if (!el.__wf_intro) {
            return;
        }
        el.__wf_intro = null;
        $(el).triggerHandler(api.types.OUTRO);
    }
};
api.triggers = {};
api.types = {
    INTRO: 'w-ix-intro' + namespace,
    OUTRO: 'w-ix-outro' + namespace
};
// Trigger any events in queue + restore trigger methods
api.init = function() {
    var count = eventQueue.length;
    for(var i = 0; i < count; i++){
        var memo = eventQueue[i];
        memo[0](0, memo[1]);
    }
    eventQueue = [];
    $.extend(api.triggers, eventTriggers);
};
// Replace all triggers with async wrapper to queue events until init
api.async = function() {
    for(var key in eventTriggers){
        var func = eventTriggers[key];
        if (!eventTriggers.hasOwnProperty(key)) {
            continue;
        }
        // Replace trigger method with async wrapper
        api.triggers[key] = function(i, el) {
            eventQueue.push([
                func,
                el
            ]);
        };
    }
};
// Default triggers to async queue
api.async();
module.exports = api;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYmZsb3ctaXgtZXZlbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbHMgd2luZG93ICovXG5cbi8qKlxuICogV2ViZmxvdzogSVggRXZlbnQgdHJpZ2dlcnMgZm9yIG90aGVyIG1vZHVsZXNcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciAkID0gd2luZG93LmpRdWVyeTtcbnZhciBhcGkgPSB7fTtcbnZhciBldmVudFF1ZXVlID0gW107XG52YXIgbmFtZXNwYWNlID0gJy53LWl4JztcblxudmFyIGV2ZW50VHJpZ2dlcnMgPSB7XG4gIHJlc2V0OiBmdW5jdGlvbiAoaSwgZWwpIHtcbiAgICBlbC5fX3dmX2ludHJvID0gbnVsbDtcbiAgfSxcbiAgaW50cm86IGZ1bmN0aW9uIChpLCBlbCkge1xuICAgIGlmIChlbC5fX3dmX2ludHJvKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGVsLl9fd2ZfaW50cm8gPSB0cnVlO1xuICAgICQoZWwpLnRyaWdnZXJIYW5kbGVyKGFwaS50eXBlcy5JTlRSTyk7XG4gIH0sXG4gIG91dHJvOiBmdW5jdGlvbiAoaSwgZWwpIHtcbiAgICBpZiAoIWVsLl9fd2ZfaW50cm8pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZWwuX193Zl9pbnRybyA9IG51bGw7XG4gICAgJChlbCkudHJpZ2dlckhhbmRsZXIoYXBpLnR5cGVzLk9VVFJPKTtcbiAgfSxcbn07XG5cbmFwaS50cmlnZ2VycyA9IHt9O1xuXG5hcGkudHlwZXMgPSB7XG4gIElOVFJPOiAndy1peC1pbnRybycgKyBuYW1lc3BhY2UsXG4gIE9VVFJPOiAndy1peC1vdXRybycgKyBuYW1lc3BhY2UsXG59O1xuXG4vLyBUcmlnZ2VyIGFueSBldmVudHMgaW4gcXVldWUgKyByZXN0b3JlIHRyaWdnZXIgbWV0aG9kc1xuYXBpLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBjb3VudCA9IGV2ZW50UXVldWUubGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICB2YXIgbWVtbyA9IGV2ZW50UXVldWVbaV07XG4gICAgbWVtb1swXSgwLCBtZW1vWzFdKTtcbiAgfVxuICBldmVudFF1ZXVlID0gW107XG4gICQuZXh0ZW5kKGFwaS50cmlnZ2VycywgZXZlbnRUcmlnZ2Vycyk7XG59O1xuXG4vLyBSZXBsYWNlIGFsbCB0cmlnZ2VycyB3aXRoIGFzeW5jIHdyYXBwZXIgdG8gcXVldWUgZXZlbnRzIHVudGlsIGluaXRcbmFwaS5hc3luYyA9IGZ1bmN0aW9uICgpIHtcbiAgZm9yICh2YXIga2V5IGluIGV2ZW50VHJpZ2dlcnMpIHtcbiAgICB2YXIgZnVuYyA9IGV2ZW50VHJpZ2dlcnNba2V5XTtcbiAgICBpZiAoIWV2ZW50VHJpZ2dlcnMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gUmVwbGFjZSB0cmlnZ2VyIG1ldGhvZCB3aXRoIGFzeW5jIHdyYXBwZXJcbiAgICBhcGkudHJpZ2dlcnNba2V5XSA9IGZ1bmN0aW9uIChpLCBlbCkge1xuICAgICAgZXZlbnRRdWV1ZS5wdXNoKFtmdW5jLCBlbF0pO1xuICAgIH07XG4gIH1cbn07XG5cbi8vIERlZmF1bHQgdHJpZ2dlcnMgdG8gYXN5bmMgcXVldWVcbmFwaS5hc3luYygpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFwaTtcbiJdLCJuYW1lcyI6WyIkIiwid2luZG93IiwialF1ZXJ5IiwiYXBpIiwiZXZlbnRRdWV1ZSIsIm5hbWVzcGFjZSIsImV2ZW50VHJpZ2dlcnMiLCJyZXNldCIsImkiLCJlbCIsIl9fd2ZfaW50cm8iLCJpbnRybyIsInRyaWdnZXJIYW5kbGVyIiwidHlwZXMiLCJJTlRSTyIsIm91dHJvIiwiT1VUUk8iLCJ0cmlnZ2VycyIsImluaXQiLCJjb3VudCIsImxlbmd0aCIsIm1lbW8iLCJleHRlbmQiLCJhc3luYyIsImtleSIsImZ1bmMiLCJoYXNPd25Qcm9wZXJ0eSIsInB1c2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxrQkFBa0IsR0FFbEI7O0NBRUMsR0FFRDtBQUVBLElBQUlBLElBQUlDLE9BQU9DLE1BQU07QUFDckIsSUFBSUMsTUFBTSxDQUFDO0FBQ1gsSUFBSUMsYUFBYSxFQUFFO0FBQ25CLElBQUlDLFlBQVk7QUFFaEIsSUFBSUMsZ0JBQWdCO0lBQ2xCQyxPQUFPLFNBQVVDLENBQUMsRUFBRUMsRUFBRTtRQUNwQkEsR0FBR0MsVUFBVSxHQUFHO0lBQ2xCO0lBQ0FDLE9BQU8sU0FBVUgsQ0FBQyxFQUFFQyxFQUFFO1FBQ3BCLElBQUlBLEdBQUdDLFVBQVUsRUFBRTtZQUNqQjtRQUNGO1FBQ0FELEdBQUdDLFVBQVUsR0FBRztRQUNoQlYsRUFBRVMsSUFBSUcsY0FBYyxDQUFDVCxJQUFJVSxLQUFLLENBQUNDLEtBQUs7SUFDdEM7SUFDQUMsT0FBTyxTQUFVUCxDQUFDLEVBQUVDLEVBQUU7UUFDcEIsSUFBSSxDQUFDQSxHQUFHQyxVQUFVLEVBQUU7WUFDbEI7UUFDRjtRQUNBRCxHQUFHQyxVQUFVLEdBQUc7UUFDaEJWLEVBQUVTLElBQUlHLGNBQWMsQ0FBQ1QsSUFBSVUsS0FBSyxDQUFDRyxLQUFLO0lBQ3RDO0FBQ0Y7QUFFQWIsSUFBSWMsUUFBUSxHQUFHLENBQUM7QUFFaEJkLElBQUlVLEtBQUssR0FBRztJQUNWQyxPQUFPLGVBQWVUO0lBQ3RCVyxPQUFPLGVBQWVYO0FBQ3hCO0FBRUEsd0RBQXdEO0FBQ3hERixJQUFJZSxJQUFJLEdBQUc7SUFDVCxJQUFJQyxRQUFRZixXQUFXZ0IsTUFBTTtJQUM3QixJQUFLLElBQUlaLElBQUksR0FBR0EsSUFBSVcsT0FBT1gsSUFBSztRQUM5QixJQUFJYSxPQUFPakIsVUFBVSxDQUFDSSxFQUFFO1FBQ3hCYSxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUdBLElBQUksQ0FBQyxFQUFFO0lBQ3BCO0lBQ0FqQixhQUFhLEVBQUU7SUFDZkosRUFBRXNCLE1BQU0sQ0FBQ25CLElBQUljLFFBQVEsRUFBRVg7QUFDekI7QUFFQSxxRUFBcUU7QUFDckVILElBQUlvQixLQUFLLEdBQUc7SUFDVixJQUFLLElBQUlDLE9BQU9sQixjQUFlO1FBQzdCLElBQUltQixPQUFPbkIsYUFBYSxDQUFDa0IsSUFBSTtRQUM3QixJQUFJLENBQUNsQixjQUFjb0IsY0FBYyxDQUFDRixNQUFNO1lBQ3RDO1FBQ0Y7UUFFQSw0Q0FBNEM7UUFDNUNyQixJQUFJYyxRQUFRLENBQUNPLElBQUksR0FBRyxTQUFVaEIsQ0FBQyxFQUFFQyxFQUFFO1lBQ2pDTCxXQUFXdUIsSUFBSSxDQUFDO2dCQUFDRjtnQkFBTWhCO2FBQUc7UUFDNUI7SUFDRjtBQUNGO0FBRUEsa0NBQWtDO0FBQ2xDTixJQUFJb0IsS0FBSztBQUVUSyxPQUFPQyxPQUFPLEdBQUcxQiJ9

}),
5134: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* globals window, document */ 
var IXEvents = __webpack_require__(7199);
function dispatchCustomEvent(element, eventName) {
    var event = document.createEvent('CustomEvent');
    event.initCustomEvent(eventName, true, true, null);
    element.dispatchEvent(event);
}
/**
 * Webflow: IX Event triggers for other modules
 */ var $ = window.jQuery;
var api = {};
var namespace = '.w-ix';
var eventTriggers = {
    reset: function(i, el) {
        IXEvents.triggers.reset(i, el);
    },
    intro: function(i, el) {
        IXEvents.triggers.intro(i, el);
        dispatchCustomEvent(el, 'COMPONENT_ACTIVE');
    },
    outro: function(i, el) {
        IXEvents.triggers.outro(i, el);
        dispatchCustomEvent(el, 'COMPONENT_INACTIVE');
    }
};
api.triggers = {};
api.types = {
    INTRO: 'w-ix-intro' + namespace,
    OUTRO: 'w-ix-outro' + namespace
};
$.extend(api.triggers, eventTriggers);
module.exports = api;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYmZsb3ctaXgyLWV2ZW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIHdpbmRvdywgZG9jdW1lbnQgKi9cblxuJ3VzZSBzdHJpY3QnO1xudmFyIElYRXZlbnRzID0gcmVxdWlyZSgnLi93ZWJmbG93LWl4LWV2ZW50cycpO1xuXG5mdW5jdGlvbiBkaXNwYXRjaEN1c3RvbUV2ZW50KGVsZW1lbnQsIGV2ZW50TmFtZSkge1xuICB2YXIgZXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnQ3VzdG9tRXZlbnQnKTtcbiAgZXZlbnQuaW5pdEN1c3RvbUV2ZW50KGV2ZW50TmFtZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCk7XG4gIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7XG59XG5cbi8qKlxuICogV2ViZmxvdzogSVggRXZlbnQgdHJpZ2dlcnMgZm9yIG90aGVyIG1vZHVsZXNcbiAqL1xuXG52YXIgJCA9IHdpbmRvdy5qUXVlcnk7XG52YXIgYXBpID0ge307XG52YXIgbmFtZXNwYWNlID0gJy53LWl4JztcblxudmFyIGV2ZW50VHJpZ2dlcnMgPSB7XG4gIHJlc2V0OiBmdW5jdGlvbiAoaSwgZWwpIHtcbiAgICBJWEV2ZW50cy50cmlnZ2Vycy5yZXNldChpLCBlbCk7XG4gIH0sXG4gIGludHJvOiBmdW5jdGlvbiAoaSwgZWwpIHtcbiAgICBJWEV2ZW50cy50cmlnZ2Vycy5pbnRybyhpLCBlbCk7XG4gICAgZGlzcGF0Y2hDdXN0b21FdmVudChlbCwgJ0NPTVBPTkVOVF9BQ1RJVkUnKTtcbiAgfSxcbiAgb3V0cm86IGZ1bmN0aW9uIChpLCBlbCkge1xuICAgIElYRXZlbnRzLnRyaWdnZXJzLm91dHJvKGksIGVsKTtcbiAgICBkaXNwYXRjaEN1c3RvbUV2ZW50KGVsLCAnQ09NUE9ORU5UX0lOQUNUSVZFJyk7XG4gIH0sXG59O1xuXG5hcGkudHJpZ2dlcnMgPSB7fTtcblxuYXBpLnR5cGVzID0ge1xuICBJTlRSTzogJ3ctaXgtaW50cm8nICsgbmFtZXNwYWNlLFxuICBPVVRSTzogJ3ctaXgtb3V0cm8nICsgbmFtZXNwYWNlLFxufTtcblxuJC5leHRlbmQoYXBpLnRyaWdnZXJzLCBldmVudFRyaWdnZXJzKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcGk7XG4iXSwibmFtZXMiOlsiSVhFdmVudHMiLCJyZXF1aXJlIiwiZGlzcGF0Y2hDdXN0b21FdmVudCIsImVsZW1lbnQiLCJldmVudE5hbWUiLCJldmVudCIsImRvY3VtZW50IiwiY3JlYXRlRXZlbnQiLCJpbml0Q3VzdG9tRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiJCIsIndpbmRvdyIsImpRdWVyeSIsImFwaSIsIm5hbWVzcGFjZSIsImV2ZW50VHJpZ2dlcnMiLCJyZXNldCIsImkiLCJlbCIsInRyaWdnZXJzIiwiaW50cm8iLCJvdXRybyIsInR5cGVzIiwiSU5UUk8iLCJPVVRSTyIsImV4dGVuZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLDRCQUE0QixHQUU1QjtBQUNBLElBQUlBLFdBQVdDLFFBQVE7QUFFdkIsU0FBU0Msb0JBQW9CQyxPQUFPLEVBQUVDLFNBQVM7SUFDN0MsSUFBSUMsUUFBUUMsU0FBU0MsV0FBVyxDQUFDO0lBQ2pDRixNQUFNRyxlQUFlLENBQUNKLFdBQVcsTUFBTSxNQUFNO0lBQzdDRCxRQUFRTSxhQUFhLENBQUNKO0FBQ3hCO0FBRUE7O0NBRUMsR0FFRCxJQUFJSyxJQUFJQyxPQUFPQyxNQUFNO0FBQ3JCLElBQUlDLE1BQU0sQ0FBQztBQUNYLElBQUlDLFlBQVk7QUFFaEIsSUFBSUMsZ0JBQWdCO0lBQ2xCQyxPQUFPLFNBQVVDLENBQUMsRUFBRUMsRUFBRTtRQUNwQmxCLFNBQVNtQixRQUFRLENBQUNILEtBQUssQ0FBQ0MsR0FBR0M7SUFDN0I7SUFDQUUsT0FBTyxTQUFVSCxDQUFDLEVBQUVDLEVBQUU7UUFDcEJsQixTQUFTbUIsUUFBUSxDQUFDQyxLQUFLLENBQUNILEdBQUdDO1FBQzNCaEIsb0JBQW9CZ0IsSUFBSTtJQUMxQjtJQUNBRyxPQUFPLFNBQVVKLENBQUMsRUFBRUMsRUFBRTtRQUNwQmxCLFNBQVNtQixRQUFRLENBQUNFLEtBQUssQ0FBQ0osR0FBR0M7UUFDM0JoQixvQkFBb0JnQixJQUFJO0lBQzFCO0FBQ0Y7QUFFQUwsSUFBSU0sUUFBUSxHQUFHLENBQUM7QUFFaEJOLElBQUlTLEtBQUssR0FBRztJQUNWQyxPQUFPLGVBQWVUO0lBQ3RCVSxPQUFPLGVBQWVWO0FBQ3hCO0FBRUFKLEVBQUVlLE1BQU0sQ0FBQ1osSUFBSU0sUUFBUSxFQUFFSjtBQUV2QlcsT0FBT0MsT0FBTyxHQUFHZCJ9

}),
941: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/**
 * Webflow: Interactions 2
 */ 
var Webflow = __webpack_require__(3949);
var ix2 = __webpack_require__(6011);
ix2.setEnv(Webflow.env);
Webflow.define('ix2', module.exports = function() {
    return ix2;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYmZsb3ctaXgyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogV2ViZmxvdzogSW50ZXJhY3Rpb25zIDJcbiAqL1xudmFyIFdlYmZsb3cgPSByZXF1aXJlKCcuL3dlYmZsb3ctbGliJyk7XG52YXIgaXgyID0gcmVxdWlyZSgnQHBhY2thZ2VzL3N5c3RlbXMvaXgyL2VuZ2luZScpO1xuXG5peDIuc2V0RW52KFdlYmZsb3cuZW52KTtcblxuV2ViZmxvdy5kZWZpbmUoXG4gICdpeDInLFxuICAobW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGl4MjtcbiAgfSlcbik7XG4iXSwibmFtZXMiOlsiV2ViZmxvdyIsInJlcXVpcmUiLCJpeDIiLCJzZXRFbnYiLCJlbnYiLCJkZWZpbmUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Q0FFQztBQUNELElBQUlBLFVBQVVDLFFBQVE7QUFDdEIsSUFBSUMsTUFBTUQsUUFBUTtBQUVsQkMsSUFBSUMsTUFBTSxDQUFDSCxRQUFRSSxHQUFHO0FBRXRCSixRQUFRSyxNQUFNLENBQ1osT0FDQ0MsT0FBT0MsT0FBTyxHQUFHO0lBQ2hCLE9BQU9MO0FBQ1QifQ==

}),
3949: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* globals window, document, navigator, WEBFLOW_ENV_TEST */ /**
 * Webflow: Core site library
 */ 
var Webflow = {};
var modules = {};
var primary = [];
var secondary = window.Webflow || [];
var $ = window.jQuery;
var $win = $(window);
var $doc = $(document);
var isFunction = $.isFunction;
var _ = Webflow._ = __webpack_require__(5756);
var tram = Webflow.tram = __webpack_require__(5487) && $.tram;
var domready = false;
var destroyed = false;
tram.config.hideBackface = false;
tram.config.keepInherited = true;
/**
 * Webflow.define - Define a named module
 * @param  {string} name
 * @param  {function} factory
 * @param  {object} [options]
 * @return {object}
 */ Webflow.define = function(name, factory, options) {
    if (modules[name]) {
        unbindModule(modules[name]);
    }
    var instance = modules[name] = factory($, _, options) || {};
    bindModule(instance);
    return instance;
};
/**
 * Webflow.require - Require a named module
 * @param  {string} name
 * @return {object}
 */ Webflow.require = function(name) {
    return modules[name];
};
function bindModule(module1) {
    // If running in Webflow app, subscribe to design/preview events
    if (Webflow.env()) {
        isFunction(module1.design) && $win.on('__wf_design', module1.design);
        isFunction(module1.preview) && $win.on('__wf_preview', module1.preview);
    }
    // Subscribe to front-end destroy event
    isFunction(module1.destroy) && $win.on('__wf_destroy', module1.destroy);
    // Look for ready method on module
    if (module1.ready && isFunction(module1.ready)) {
        addReady(module1);
    }
}
function addReady(module1) {
    // If domready has already happened, run ready method
    if (domready) {
        module1.ready();
        return;
    }
    // Otherwise add ready method to the primary queue (only once)
    if (_.contains(primary, module1.ready)) {
        return;
    }
    primary.push(module1.ready);
}
function unbindModule(module1) {
    // Unsubscribe module from window events
    isFunction(module1.design) && $win.off('__wf_design', module1.design);
    isFunction(module1.preview) && $win.off('__wf_preview', module1.preview);
    isFunction(module1.destroy) && $win.off('__wf_destroy', module1.destroy);
    // Remove ready method from primary queue
    if (module1.ready && isFunction(module1.ready)) {
        removeReady(module1);
    }
}
function removeReady(module1) {
    primary = _.filter(primary, function(readyFn) {
        return readyFn !== module1.ready;
    });
}
/**
 * Webflow.push - Add a ready handler into secondary queue
 * @param {function} ready  Callback to invoke on domready
 */ Webflow.push = function(ready) {
    // If domready has already happened, invoke handler
    if (domready) {
        isFunction(ready) && ready();
        return;
    }
    // Otherwise push into secondary queue
    secondary.push(ready);
};
/**
 * Webflow.env - Get the state of the Webflow app
 * @param {string} mode [optional]
 * @return {boolean}
 */ Webflow.env = function(mode) {
    var designFlag = window.__wf_design;
    var inApp = typeof designFlag !== 'undefined';
    if (!mode) {
        return inApp;
    }
    if (mode === 'design') {
        return inApp && designFlag;
    }
    if (mode === 'preview') {
        return inApp && !designFlag;
    }
    if (mode === 'slug') {
        return inApp && window.__wf_slug;
    }
    if (mode === 'editor') {
        return window.WebflowEditor;
    }
    if (mode === 'test') {
        return  false || window.__wf_test;
    }
    if (mode === 'frame') {
        return window !== window.top;
    }
};
// Feature detects + browser sniffs  ಠ_ಠ
var userAgent = navigator.userAgent.toLowerCase();
var touch = Webflow.env.touch = 'ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch;
var chrome = Webflow.env.chrome = /chrome/.test(userAgent) && /Google/.test(navigator.vendor) && parseInt(userAgent.match(/chrome\/(\d+)\./)[1], 10);
var ios = Webflow.env.ios = /(ipod|iphone|ipad)/.test(userAgent);
Webflow.env.safari = /safari/.test(userAgent) && !chrome && !ios;
// Maintain current touch target to prevent late clicks on touch devices
var touchTarget;
// Listen for both events to support touch/mouse hybrid devices
touch && $doc.on('touchstart mousedown', function(evt) {
    touchTarget = evt.target;
});
/**
 * Webflow.validClick - validate click target against current touch target
 * @param  {HTMLElement} clickTarget  Element being clicked
 * @return {Boolean}  True if click target is valid (always true on non-touch)
 */ Webflow.validClick = touch ? function(clickTarget) {
    return clickTarget === touchTarget || $.contains(clickTarget, touchTarget);
} : function() {
    return true;
};
/**
 * Webflow.resize, Webflow.scroll - throttled event proxies
 */ var resizeEvents = 'resize.webflow orientationchange.webflow load.webflow';
var scrollEvents = 'scroll.webflow ' + resizeEvents;
Webflow.resize = eventProxy($win, resizeEvents);
Webflow.scroll = eventProxy($win, scrollEvents);
Webflow.redraw = eventProxy();
// Create a proxy instance for throttled events
function eventProxy(target, types) {
    // Set up throttled method (using custom frame-based _.throttle)
    var handlers = [];
    var proxy = {};
    proxy.up = _.throttle(function(evt) {
        _.each(handlers, function(h) {
            h(evt);
        });
    });
    // Bind events to target
    if (target && types) {
        target.on(types, proxy.up);
    }
    /**
   * Add an event handler
   * @param  {function} handler
   */ proxy.on = function(handler) {
        if (typeof handler !== 'function') {
            return;
        }
        if (_.contains(handlers, handler)) {
            return;
        }
        handlers.push(handler);
    };
    /**
   * Remove an event handler
   * @param  {function} handler
   */ proxy.off = function(handler) {
        // If no arguments supplied, clear all handlers
        if (!arguments.length) {
            handlers = [];
            return;
        }
        // Otherwise, remove handler from the list
        handlers = _.filter(handlers, function(h) {
            return h !== handler;
        });
    };
    return proxy;
}
// Webflow.location - Wrap window.location in api
Webflow.location = function(url) {
    window.location = url;
};
if (Webflow.env()) {
    // Ignore redirects inside a Webflow design/edit environment
    Webflow.location = function() {};
}
// Webflow.ready - Call primary and secondary handlers
Webflow.ready = function() {
    domready = true;
    // Restore modules after destroy
    if (destroyed) {
        restoreModules();
    // Otherwise run primary ready methods
    } else {
        _.each(primary, callReady);
    }
    // Run secondary ready methods
    _.each(secondary, callReady);
    // Trigger resize
    Webflow.resize.up();
};
function callReady(readyFn) {
    isFunction(readyFn) && readyFn();
}
function restoreModules() {
    destroyed = false;
    _.each(modules, bindModule);
}
/**
 * Webflow.load - Add a window load handler that will run even if load event has already happened
 * @param  {function} handler
 */ var deferLoad;
Webflow.load = function(handler) {
    deferLoad.then(handler);
};
function bindLoad() {
    // Reject any previous deferred (to support destroy)
    if (deferLoad) {
        deferLoad.reject();
        $win.off('load', deferLoad.resolve);
    }
    // Create deferred and bind window load event
    deferLoad = new $.Deferred();
    $win.on('load', deferLoad.resolve);
}
// Webflow.destroy - Trigger a destroy event for all modules
Webflow.destroy = function(options) {
    options = options || {};
    destroyed = true;
    $win.triggerHandler('__wf_destroy');
    // Allow domready reset for tests
    if (options.domready != null) {
        domready = options.domready;
    }
    // Unbind modules
    _.each(modules, unbindModule);
    // Clear any proxy event handlers
    Webflow.resize.off();
    Webflow.scroll.off();
    Webflow.redraw.off();
    // Clear any queued ready methods
    primary = [];
    secondary = [];
    // If load event has not yet fired, replace the deferred
    if (deferLoad.state() === 'pending') {
        bindLoad();
    }
};
// Listen for domready
$(Webflow.ready);
// Listen for window.onload and resolve deferred
bindLoad();
// Export commonjs module
module.exports = window.Webflow = Webflow;

//# sourceMappingURL=data:application/json;base64,

}),
7624: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* globals window, document */ /**
 * Webflow: Auto-select links to current page or section
 */ 
var Webflow = __webpack_require__(3949);
Webflow.define('links', module.exports = function($, _) {
    var api = {};
    var $win = $(window);
    var designer;
    var inApp = Webflow.env();
    var location = window.location;
    var tempLink = document.createElement('a');
    var linkCurrent = 'w--current';
    var indexPage = /index\.(html|php)$/;
    var dirList = /\/$/;
    var anchors;
    var slug;
    // -----------------------------------
    // Module methods
    api.ready = api.design = api.preview = init;
    // -----------------------------------
    // Private methods
    function init() {
        designer = inApp && Webflow.env('design');
        slug = Webflow.env('slug') || location.pathname || '';
        // Reset scroll listener, init anchors
        Webflow.scroll.off(scroll);
        anchors = [];
        // Test all links for a selectable href
        var links = document.links;
        for(var i = 0; i < links.length; ++i){
            select(links[i]);
        }
        // Listen for scroll if any anchors exist
        if (anchors.length) {
            Webflow.scroll.on(scroll);
            scroll();
        }
    }
    function select(link) {
        // Ignore localized links
        if (link.getAttribute('hreflang')) {
            return;
        }
        var href = designer && link.getAttribute('href-disabled') || link.getAttribute('href');
        tempLink.href = href;
        // Ignore any hrefs with a colon to safely avoid all uri schemes
        if (href.indexOf(':') >= 0) {
            return;
        }
        var $link = $(link);
        // Check for all links with hash (eg (this-host)(/this-path)#section) to this page
        if (tempLink.hash.length > 1 && tempLink.host + tempLink.pathname === location.host + location.pathname) {
            // Ignore any hrefs with Google Translate type hash
            // Example: jQuery can't parse $('#googtrans(en|es)')
            // https://forum.webflow.com/t/dropdown-menus-not-working-on-site/87140
            if (!/^#[a-zA-Z0-9\-\_]+$/.test(tempLink.hash)) {
                return;
            }
            var $section = $(tempLink.hash);
            $section.length && anchors.push({
                link: $link,
                sec: $section,
                active: false
            });
            return;
        }
        // Ignore empty # links
        if (href === '#' || href === '') {
            return;
        }
        // Determine whether the link should be selected
        var match = !inApp && tempLink.href === location.href || href === slug || indexPage.test(href) && dirList.test(slug);
        setClass($link, linkCurrent, match);
    }
    function scroll() {
        var viewTop = $win.scrollTop();
        var viewHeight = $win.height();
        // Check each anchor for a section in view
        _.each(anchors, function(anchor) {
            // Ignore localized links
            if (anchor.link.attr('hreflang')) {
                return;
            }
            var $link = anchor.link;
            var $section = anchor.sec;
            var top = $section.offset().top;
            var height = $section.outerHeight();
            var offset = viewHeight * 0.5;
            var active = $section.is(':visible') && top + height - offset >= viewTop && top + offset <= viewTop + viewHeight;
            if (anchor.active === active) {
                return;
            }
            anchor.active = active;
            setClass($link, linkCurrent, active);
        });
    }
    function setClass($elem, className, add) {
        var exists = $elem.hasClass(className);
        if (add && exists) {
            return;
        }
        if (!add && !exists) {
            return;
        }
        add ? $elem.addClass(className) : $elem.removeClass(className);
    }
    // Export module
    return api;
});

//# sourceMappingURL=data:application/json;base64,

}),
286: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* globals window, document */ /**
 * Webflow: Smooth scroll
 */ 
var Webflow = __webpack_require__(3949);
Webflow.define('scroll', module.exports = function($) {
    /**
     * A collection of namespaced events found in this module.
     * Namespaced events encapsulate our code, and make it safer and easier
     * for designers to apply custom code overrides.
     * @see https://api.jquery.com/on/#event-names
     * @typedef {Object.<string>} NamespacedEventsCollection
     */ var NS_EVENTS = {
        WF_CLICK_EMPTY: 'click.wf-empty-link',
        WF_CLICK_SCROLL: 'click.wf-scroll'
    };
    var loc = window.location;
    var history = inIframe() ? null : window.history;
    var $win = $(window);
    var $doc = $(document);
    var $body = $(document.body);
    var animate = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) {
        window.setTimeout(fn, 15);
    };
    var rootTag = Webflow.env('editor') ? '.w-editor-body' : 'body';
    var headerSelector = 'header, ' + rootTag + ' > .header, ' + rootTag + ' > .w-nav:not([data-no-scroll])';
    var emptyHrefSelector = 'a[href="#"]';
    /**
     * Select only links whose href:
     * - contains a #
     * - is not one of our namespaced TabLink elements
     * - is not _only_ a #
     */ var localHrefSelector = 'a[href*="#"]:not(.w-tab-link):not(' + emptyHrefSelector + ')';
    var scrollTargetOutlineCSS = '.wf-force-outline-none[tabindex="-1"]:focus{outline:none;}';
    var focusStylesEl = document.createElement('style');
    focusStylesEl.appendChild(document.createTextNode(scrollTargetOutlineCSS));
    function inIframe() {
        try {
            return Boolean(window.frameElement);
        } catch (e) {
            return true;
        }
    }
    var validHash = /^#[a-zA-Z0-9][\w:.-]*$/;
    /**
     * Determine if link navigates to current page
     * @param {HTMLAnchorElement} link
     */ function linksToCurrentPage(link) {
        return validHash.test(link.hash) && link.host + link.pathname === loc.host + loc.pathname;
    }
    /**
     * Check if the designer has indicated that this page should
     * have no scroll animation, or if the end user has set
     * prefers-reduced-motion in their OS
     */ const reducedMotionMediaQuery = typeof window.matchMedia === 'function' && window.matchMedia('(prefers-reduced-motion: reduce)');
    function reducedMotionEnabled() {
        return document.body.getAttribute('data-wf-scroll-motion') === 'none' || reducedMotionMediaQuery.matches;
    }
    function setFocusable($el, action) {
        var initialTabindex;
        switch(action){
            case 'add':
                initialTabindex = $el.attr('tabindex');
                if (initialTabindex) {
                    $el.attr('data-wf-tabindex-swap', initialTabindex);
                } else {
                    $el.attr('tabindex', '-1');
                }
                break;
            case 'remove':
                initialTabindex = $el.attr('data-wf-tabindex-swap');
                if (initialTabindex) {
                    $el.attr('tabindex', initialTabindex);
                    $el.removeAttr('data-wf-tabindex-swap');
                } else {
                    $el.removeAttr('tabindex');
                }
                break;
        }
        $el.toggleClass('wf-force-outline-none', action === 'add');
    }
    /**
     * Determine if we should execute custom scroll
     */ function validateScroll(evt) {
        var target = evt.currentTarget;
        if (// Bail if in Designer
        Webflow.env('design') || // Ignore links being used by jQuery mobile
        window.$.mobile && /(?:^|\s)ui-link(?:$|\s)/.test(target.className)) {
            return;
        }
        var hash = linksToCurrentPage(target) ? target.hash : '';
        if (hash === '') return;
        var $el = $(hash);
        if (!$el.length) {
            return;
        }
        if (evt) {
            evt.preventDefault();
            evt.stopPropagation();
        }
        updateHistory(hash, evt);
        window.setTimeout(function() {
            scroll($el, function setFocus() {
                setFocusable($el, 'add');
                $el.get(0).focus({
                    preventScroll: true
                });
                setFocusable($el, 'remove');
            });
        }, evt ? 0 : 300);
    }
    function updateHistory(hash) {
        // Push new history state
        if (loc.hash !== hash && history && history.pushState && // Navigation breaks Chrome when the protocol is `file:`.
        !(Webflow.env.chrome && loc.protocol === 'file:')) {
            var oldHash = history.state && history.state.hash;
            if (oldHash !== hash) {
                history.pushState({
                    hash
                }, '', hash);
            }
        }
    }
    function scroll($targetEl, cb) {
        var start = $win.scrollTop();
        var end = calculateScrollEndPosition($targetEl);
        if (start === end) return;
        var duration = calculateScrollDuration($targetEl, start, end);
        var clock = Date.now();
        var step = function() {
            var elapsed = Date.now() - clock;
            window.scroll(0, getY(start, end, elapsed, duration));
            if (elapsed <= duration) {
                animate(step);
            } else if (typeof cb === 'function') {
                cb();
            }
        };
        animate(step);
    }
    function calculateScrollEndPosition($targetEl) {
        // If a fixed header exists, offset for the height
        var $header = $(headerSelector);
        var offsetY = $header.css('position') === 'fixed' ? $header.outerHeight() : 0;
        var end = $targetEl.offset().top - offsetY;
        // If specified, scroll so that the element ends up in the middle of the viewport
        if ($targetEl.data('scroll') === 'mid') {
            var available = $win.height() - offsetY;
            var elHeight = $targetEl.outerHeight();
            if (elHeight < available) {
                end -= Math.round((available - elHeight) / 2);
            }
        }
        return end;
    }
    function calculateScrollDuration($targetEl, start, end) {
        if (reducedMotionEnabled()) return 0;
        var mult = 1;
        // Check for custom time multiplier on the body and the scroll target
        $body.add($targetEl).each(function(_, el) {
            var time = parseFloat(el.getAttribute('data-scroll-time'));
            if (!isNaN(time) && time >= 0) {
                mult = time;
            }
        });
        return (472.143 * Math.log(Math.abs(start - end) + 125) - 2000) * mult;
    }
    function getY(start, end, elapsed, duration) {
        if (elapsed > duration) {
            return end;
        }
        return start + (end - start) * ease(elapsed / duration);
    }
    function ease(t) {
        return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
    }
    function ready() {
        var { WF_CLICK_EMPTY, WF_CLICK_SCROLL } = NS_EVENTS;
        $doc.on(WF_CLICK_SCROLL, localHrefSelector, validateScroll);
        /**
       * Prevent empty hash links from triggering scroll.
       * Legacy feature to preserve: use the default "#" link
       * to trigger an interaction, and do not want the page
       * to scroll to the top.
       */ $doc.on(WF_CLICK_EMPTY, emptyHrefSelector, function(e) {
            e.preventDefault();
        });
        document.head.insertBefore(focusStylesEl, document.head.firstChild);
    }
    // Export module
    return {
        ready
    };
});

//# sourceMappingURL=data:application/json;base64,

}),
3695: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* globals document, window */ /**
 * Webflow: Touch events
 * Supports legacy 'tap' event
 * Adds a 'swipe' event to desktop and mobile
 */ 
var Webflow = __webpack_require__(3949);
Webflow.define('touch', module.exports = function($) {
    var api = {};
    var getSelection = window.getSelection;
    // Delegate all legacy 'tap' events to 'click'
    $.event.special.tap = {
        bindType: 'click',
        delegateType: 'click'
    };
    api.init = function(el) {
        el = typeof el === 'string' ? $(el).get(0) : el;
        return el ? new Touch(el) : null;
    };
    function Touch(el) {
        var active = false;
        var useTouch = false;
        var thresholdX = Math.min(Math.round(window.innerWidth * 0.04), 40);
        var startX;
        var lastX;
        el.addEventListener('touchstart', start, false);
        el.addEventListener('touchmove', move, false);
        el.addEventListener('touchend', end, false);
        el.addEventListener('touchcancel', cancel, false);
        el.addEventListener('mousedown', start, false);
        el.addEventListener('mousemove', move, false);
        el.addEventListener('mouseup', end, false);
        el.addEventListener('mouseout', cancel, false);
        function start(evt) {
            // We don’t handle multi-touch events yet.
            var touches = evt.touches;
            if (touches && touches.length > 1) {
                return;
            }
            active = true;
            if (touches) {
                useTouch = true;
                startX = touches[0].clientX;
            } else {
                startX = evt.clientX;
            }
            lastX = startX;
        }
        function move(evt) {
            if (!active) {
                return;
            }
            if (useTouch && evt.type === 'mousemove') {
                evt.preventDefault();
                evt.stopPropagation();
                return;
            }
            var touches = evt.touches;
            var x = touches ? touches[0].clientX : evt.clientX;
            var velocityX = x - lastX;
            lastX = x;
            // Allow swipes while pointer is down, but prevent them during text selection
            if (Math.abs(velocityX) > thresholdX && getSelection && String(getSelection()) === '') {
                triggerEvent('swipe', evt, {
                    direction: velocityX > 0 ? 'right' : 'left'
                });
                cancel();
            }
        }
        function end(evt) {
            if (!active) {
                return;
            }
            active = false;
            if (useTouch && evt.type === 'mouseup') {
                evt.preventDefault();
                evt.stopPropagation();
                useTouch = false;
                return;
            }
        }
        function cancel() {
            active = false;
        }
        function destroy() {
            el.removeEventListener('touchstart', start, false);
            el.removeEventListener('touchmove', move, false);
            el.removeEventListener('touchend', end, false);
            el.removeEventListener('touchcancel', cancel, false);
            el.removeEventListener('mousedown', start, false);
            el.removeEventListener('mousemove', move, false);
            el.removeEventListener('mouseup', end, false);
            el.removeEventListener('mouseout', cancel, false);
            el = null;
        }
        // Public instance methods
        this.destroy = destroy;
    }
    // Wrap native event to supoprt preventdefault + stopPropagation
    function triggerEvent(type, evt, data) {
        var newEvent = $.Event(type, {
            originalEvent: evt
        });
        $(evt.target).trigger(newEvent, data);
    }
    // Listen for touch events on all nodes by default.
    api.instance = api.init(document);
    // Export module
    return api;
});

//# sourceMappingURL=data:application/json;base64,

}),
1655: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* globals window, document */ /**
 * Webflow: Navbar component
 */ 
var Webflow = __webpack_require__(3949);
var IXEvents = __webpack_require__(5134);
const KEY_CODES = {
    ARROW_LEFT: 37,
    ARROW_UP: 38,
    ARROW_RIGHT: 39,
    ARROW_DOWN: 40,
    ESCAPE: 27,
    SPACE: 32,
    ENTER: 13,
    HOME: 36,
    END: 35
};
Webflow.define('navbar', module.exports = function($, _) {
    var api = {};
    var tram = $.tram;
    var $win = $(window);
    var $doc = $(document);
    var debounce = _.debounce;
    var $body;
    var $navbars;
    var designer;
    var inEditor;
    var inApp = Webflow.env();
    var overlay = '<div class="w-nav-overlay" data-wf-ignore />';
    var namespace = '.w-nav';
    var navbarOpenedButton = 'w--open';
    var navbarOpenedDropdown = 'w--nav-dropdown-open';
    var navbarOpenedDropdownToggle = 'w--nav-dropdown-toggle-open';
    var navbarOpenedDropdownList = 'w--nav-dropdown-list-open';
    var navbarOpenedLink = 'w--nav-link-open';
    var ix = IXEvents.triggers;
    var menuSibling = $();
    // -----------------------------------
    // Module methods
    api.ready = api.design = api.preview = init;
    api.destroy = function() {
        menuSibling = $();
        removeListeners();
        if ($navbars && $navbars.length) {
            $navbars.each(teardown);
        }
    };
    // -----------------------------------
    // Private methods
    function init() {
        designer = inApp && Webflow.env('design');
        inEditor = Webflow.env('editor');
        $body = $(document.body);
        // Find all instances on the page
        $navbars = $doc.find(namespace);
        if (!$navbars.length) {
            return;
        }
        $navbars.each(build);
        // Wire events
        removeListeners();
        addListeners();
    }
    function removeListeners() {
        Webflow.resize.off(resizeAll);
    }
    function addListeners() {
        Webflow.resize.on(resizeAll);
    }
    function resizeAll() {
        $navbars.each(resize);
    }
    function build(i, el) {
        var $el = $(el);
        // Store state in data
        var data = $.data(el, namespace);
        if (!data) {
            data = $.data(el, namespace, {
                open: false,
                el: $el,
                config: {},
                selectedIdx: -1
            });
        }
        data.menu = $el.find('.w-nav-menu');
        data.links = data.menu.find('.w-nav-link');
        data.dropdowns = data.menu.find('.w-dropdown');
        data.dropdownToggle = data.menu.find('.w-dropdown-toggle');
        data.dropdownList = data.menu.find('.w-dropdown-list');
        data.button = $el.find('.w-nav-button');
        data.container = $el.find('.w-container');
        data.overlayContainerId = 'w-nav-overlay-' + i;
        data.outside = outside(data);
        //   If the brand links exists and is set to link to the homepage, the
        // default setting, then add an aria-label
        var navBrandLink = $el.find('.w-nav-brand');
        if (navBrandLink && navBrandLink.attr('href') === '/' && navBrandLink.attr('aria-label') == null) {
            navBrandLink.attr('aria-label', 'home');
        }
        //   VoiceOver bug, when items that disallow user selection are focused
        // VoiceOver gets confused and scrolls to the end of the page. ¯\_(ツ)_/¯
        data.button.attr('style', '-webkit-user-select: text;');
        // Add attributes to toggle element
        if (data.button.attr('aria-label') == null) {
            data.button.attr('aria-label', 'menu');
        }
        data.button.attr('role', 'button');
        data.button.attr('tabindex', '0');
        data.button.attr('aria-controls', data.overlayContainerId);
        data.button.attr('aria-haspopup', 'menu');
        data.button.attr('aria-expanded', 'false');
        // Remove old events
        data.el.off(namespace);
        data.button.off(namespace);
        data.menu.off(namespace);
        // Set config from data attributes
        configure(data);
        // Add events based on mode
        if (designer) {
            removeOverlay(data);
            data.el.on('setting' + namespace, handler(data));
        } else {
            addOverlay(data);
            data.button.on('click' + namespace, toggle(data));
            data.menu.on('click' + namespace, 'a', navigate(data));
            data.button.on('keydown' + namespace, makeToggleButtonKeyboardHandler(data));
            data.el.on('keydown' + namespace, makeLinksKeyboardHandler(data));
        }
        // Trigger initial resize
        resize(i, el);
    }
    function teardown(i, el) {
        var data = $.data(el, namespace);
        if (data) {
            removeOverlay(data);
            $.removeData(el, namespace);
        }
    }
    function removeOverlay(data) {
        if (!data.overlay) {
            return;
        }
        close(data, true);
        data.overlay.remove();
        data.overlay = null;
    }
    function addOverlay(data) {
        if (data.overlay) {
            return;
        }
        data.overlay = $(overlay).appendTo(data.el);
        data.overlay.attr('id', data.overlayContainerId);
        data.parent = data.menu.parent();
        close(data, true);
    }
    function configure(data) {
        var config = {};
        var old = data.config || {};
        // Set config options from data attributes
        var animation = config.animation = data.el.attr('data-animation') || 'default';
        config.animOver = /^over/.test(animation);
        config.animDirect = /left$/.test(animation) ? -1 : 1;
        // Re-open menu if the animation type changed
        if (old.animation !== animation) {
            data.open && _.defer(reopen, data);
        }
        config.easing = data.el.attr('data-easing') || 'ease';
        config.easing2 = data.el.attr('data-easing2') || 'ease';
        var duration = data.el.attr('data-duration');
        config.duration = duration != null ? Number(duration) : 400;
        config.docHeight = data.el.attr('data-doc-height');
        // Store config in data
        data.config = config;
    }
    function handler(data) {
        return function(evt, options) {
            options = options || {};
            var winWidth = $win.width();
            configure(data);
            options.open === true && open(data, true);
            options.open === false && close(data, true);
            // Reopen if media query changed after setting
            data.open && _.defer(function() {
                if (winWidth !== $win.width()) {
                    reopen(data);
                }
            });
        };
    }
    function makeToggleButtonKeyboardHandler(data) {
        return function(evt) {
            switch(evt.keyCode){
                case KEY_CODES.SPACE:
                case KEY_CODES.ENTER:
                    {
                        // Toggle returns a function
                        toggle(data)();
                        evt.preventDefault();
                        return evt.stopPropagation();
                    }
                case KEY_CODES.ESCAPE:
                    {
                        close(data);
                        evt.preventDefault();
                        return evt.stopPropagation();
                    }
                case KEY_CODES.ARROW_RIGHT:
                case KEY_CODES.ARROW_DOWN:
                case KEY_CODES.HOME:
                case KEY_CODES.END:
                    {
                        if (!data.open) {
                            evt.preventDefault();
                            return evt.stopPropagation();
                        }
                        if (evt.keyCode === KEY_CODES.END) {
                            data.selectedIdx = data.links.length - 1;
                        } else {
                            data.selectedIdx = 0;
                        }
                        focusSelectedLink(data);
                        evt.preventDefault();
                        return evt.stopPropagation();
                    }
            }
        };
    }
    function makeLinksKeyboardHandler(data) {
        return function(evt) {
            if (!data.open) {
                return;
            }
            // Realign selectedIdx with the menu item that is currently in focus.
            // We need this because we do not track the `Tab` key activity!
            data.selectedIdx = data.links.index(document.activeElement);
            switch(evt.keyCode){
                case KEY_CODES.HOME:
                case KEY_CODES.END:
                    {
                        if (evt.keyCode === KEY_CODES.END) {
                            data.selectedIdx = data.links.length - 1;
                        } else {
                            data.selectedIdx = 0;
                        }
                        focusSelectedLink(data);
                        evt.preventDefault();
                        return evt.stopPropagation();
                    }
                case KEY_CODES.ESCAPE:
                    {
                        close(data);
                        // Focus toggle button
                        data.button.focus();
                        evt.preventDefault();
                        return evt.stopPropagation();
                    }
                case KEY_CODES.ARROW_LEFT:
                case KEY_CODES.ARROW_UP:
                    {
                        data.selectedIdx = Math.max(-1, data.selectedIdx - 1);
                        focusSelectedLink(data);
                        evt.preventDefault();
                        return evt.stopPropagation();
                    }
                case KEY_CODES.ARROW_RIGHT:
                case KEY_CODES.ARROW_DOWN:
                    {
                        data.selectedIdx = Math.min(data.links.length - 1, data.selectedIdx + 1);
                        focusSelectedLink(data);
                        evt.preventDefault();
                        return evt.stopPropagation();
                    }
            }
        };
    }
    function focusSelectedLink(data) {
        if (data.links[data.selectedIdx]) {
            var selectedElement = data.links[data.selectedIdx];
            selectedElement.focus();
            navigate(selectedElement);
        }
    }
    function reopen(data) {
        if (!data.open) {
            return;
        }
        close(data, true);
        open(data, true);
    }
    function toggle(data) {
        // Debounce toggle to wait for accurate open state
        return debounce(function() {
            data.open ? close(data) : open(data);
        });
    }
    function navigate(data) {
        return function(evt) {
            var link = $(this);
            var href = link.attr('href');
            // Avoid late clicks on touch devices
            if (!Webflow.validClick(evt.currentTarget)) {
                evt.preventDefault();
                return;
            }
            // Close when navigating to an in-page anchor
            if (href && href.indexOf('#') === 0 && data.open) {
                close(data);
            }
        };
    }
    function outside(data) {
        // Unbind previous click handler if it exists
        if (data.outside) {
            $doc.off('click' + namespace, data.outside);
        }
        return function(evt) {
            var $target = $(evt.target);
            // Ignore clicks on Editor overlay UI
            if (inEditor && $target.closest('.w-editor-bem-EditorOverlay').length) {
                return;
            }
            // Close menu when clicked outside, debounced to wait for state
            outsideDebounced(data, $target);
        };
    }
    var outsideDebounced = debounce(function(data, $target) {
        if (!data.open) {
            return;
        }
        var menu = $target.closest('.w-nav-menu');
        if (!data.menu.is(menu)) {
            close(data);
        }
    });
    function resize(i, el) {
        var data = $.data(el, namespace);
        // Check for collapsed state based on button display
        var collapsed = data.collapsed = data.button.css('display') !== 'none';
        // Close menu if button is no longer visible (and not in designer)
        if (data.open && !collapsed && !designer) {
            close(data, true);
        }
        // Set max-width of links + dropdowns to match container
        if (data.container.length) {
            var updateEachMax = updateMax(data);
            data.links.each(updateEachMax);
            data.dropdowns.each(updateEachMax);
        }
        // If currently open, update height to match body
        if (data.open) {
            setOverlayHeight(data);
        }
    }
    var maxWidth = 'max-width';
    function updateMax(data) {
        // Set max-width of each element to match container
        var containMax = data.container.css(maxWidth);
        if (containMax === 'none') {
            containMax = '';
        }
        return function(i, link) {
            link = $(link);
            link.css(maxWidth, '');
            // Don't set the max-width if an upstream value exists
            if (link.css(maxWidth) === 'none') {
                link.css(maxWidth, containMax);
            }
        };
    }
    function addMenuOpen(i, el) {
        el.setAttribute('data-nav-menu-open', '');
    }
    function removeMenuOpen(i, el) {
        el.removeAttribute('data-nav-menu-open');
    }
    function open(data, immediate) {
        if (data.open) {
            return;
        }
        data.open = true;
        data.menu.each(addMenuOpen);
        data.links.addClass(navbarOpenedLink);
        data.dropdowns.addClass(navbarOpenedDropdown);
        data.dropdownToggle.addClass(navbarOpenedDropdownToggle);
        data.dropdownList.addClass(navbarOpenedDropdownList);
        data.button.addClass(navbarOpenedButton);
        var config = data.config;
        var animation = config.animation;
        if (animation === 'none' || !tram.support.transform || config.duration <= 0) {
            immediate = true;
        }
        var bodyHeight = setOverlayHeight(data);
        var menuHeight = data.menu.outerHeight(true);
        var menuWidth = data.menu.outerWidth(true);
        var navHeight = data.el.height();
        var navbarEl = data.el[0];
        resize(0, navbarEl);
        ix.intro(0, navbarEl);
        Webflow.redraw.up();
        // Listen for click outside events
        if (!designer) {
            $doc.on('click' + namespace, data.outside);
        }
        // No transition for immediate
        if (immediate) {
            complete();
            return;
        }
        var transConfig = 'transform ' + config.duration + 'ms ' + config.easing;
        // Add menu to overlay
        if (data.overlay) {
            menuSibling = data.menu.prev();
            data.overlay.show().append(data.menu);
        }
        // Over left/right
        if (config.animOver) {
            tram(data.menu).add(transConfig).set({
                x: config.animDirect * menuWidth,
                height: bodyHeight
            }).start({
                x: 0
            }).then(complete);
            data.overlay && data.overlay.width(menuWidth);
            return;
        }
        // Drop Down
        var offsetY = navHeight + menuHeight;
        tram(data.menu).add(transConfig).set({
            y: -offsetY
        }).start({
            y: 0
        }).then(complete);
        function complete() {
            data.button.attr('aria-expanded', 'true');
        }
    }
    function setOverlayHeight(data) {
        var config = data.config;
        var bodyHeight = config.docHeight ? $doc.height() : $body.height();
        if (config.animOver) {
            data.menu.height(bodyHeight);
        } else if (data.el.css('position') !== 'fixed') {
            bodyHeight -= data.el.outerHeight(true);
        }
        data.overlay && data.overlay.height(bodyHeight);
        return bodyHeight;
    }
    function close(data, immediate) {
        if (!data.open) {
            return;
        }
        data.open = false;
        data.button.removeClass(navbarOpenedButton);
        var config = data.config;
        if (config.animation === 'none' || !tram.support.transform || config.duration <= 0) {
            immediate = true;
        }
        ix.outro(0, data.el[0]);
        // Stop listening for click outside events
        $doc.off('click' + namespace, data.outside);
        if (immediate) {
            tram(data.menu).stop();
            complete();
            return;
        }
        var transConfig = 'transform ' + config.duration + 'ms ' + config.easing2;
        var menuHeight = data.menu.outerHeight(true);
        var menuWidth = data.menu.outerWidth(true);
        var navHeight = data.el.height();
        // Over left/right
        if (config.animOver) {
            tram(data.menu).add(transConfig).start({
                x: menuWidth * config.animDirect
            }).then(complete);
            return;
        }
        // Drop Down
        var offsetY = navHeight + menuHeight;
        tram(data.menu).add(transConfig).start({
            y: -offsetY
        }).then(complete);
        function complete() {
            data.menu.height('');
            tram(data.menu).set({
                x: 0,
                y: 0
            });
            data.menu.each(removeMenuOpen);
            data.links.removeClass(navbarOpenedLink);
            data.dropdowns.removeClass(navbarOpenedDropdown);
            data.dropdownToggle.removeClass(navbarOpenedDropdownToggle);
            data.dropdownList.removeClass(navbarOpenedDropdownList);
            if (data.overlay && data.overlay.children().length) {
                // Move menu back to parent at the original location
                menuSibling.length ? data.menu.insertAfter(menuSibling) : data.menu.prependTo(data.parent);
                data.overlay.attr('style', '').hide();
            }
            // Trigger event so other components can hook in (dropdown)
            data.el.triggerHandler('w-close');
            data.button.attr('aria-expanded', 'false');
        }
    }
    // Export module
    return api;
});

//# sourceMappingURL=data:application/json;base64,

}),
9078: (function (module, __unused_webpack_exports, __webpack_require__) {
"use strict";
/* global document window */ /**
 * Webflow: Tabs component
 */ 
var Webflow = __webpack_require__(3949);
var IXEvents = __webpack_require__(5134);
Webflow.define('tabs', module.exports = function($) {
    var api = {};
    var tram = $.tram;
    var $doc = $(document);
    var $tabs;
    var design;
    var env = Webflow.env;
    var safari = env.safari;
    var inApp = env();
    var tabAttr = 'data-w-tab';
    var paneAttr = 'data-w-pane';
    var namespace = '.w-tabs';
    var linkCurrent = 'w--current';
    var tabActive = 'w--tab-active';
    var ix = IXEvents.triggers;
    var inRedraw = false;
    // -----------------------------------
    // Module methods
    api.ready = api.design = api.preview = init;
    api.redraw = function() {
        inRedraw = true;
        init();
        inRedraw = false;
    };
    api.destroy = function() {
        $tabs = $doc.find(namespace);
        if (!$tabs.length) {
            return;
        }
        $tabs.each(resetIX);
        removeListeners();
    };
    // -----------------------------------
    // Private methods
    function init() {
        design = inApp && Webflow.env('design');
        // Find all instances on the page
        $tabs = $doc.find(namespace);
        if (!$tabs.length) {
            return;
        }
        $tabs.each(build);
        if (Webflow.env('preview') && !inRedraw) {
            $tabs.each(resetIX);
        }
        removeListeners();
        addListeners();
    }
    function removeListeners() {
        Webflow.redraw.off(api.redraw);
    }
    function addListeners() {
        Webflow.redraw.on(api.redraw);
    }
    function resetIX(i, el) {
        var data = $.data(el, namespace);
        if (!data) {
            return;
        }
        data.links && data.links.each(ix.reset);
        data.panes && data.panes.each(ix.reset);
    }
    function build(i, el) {
        var widgetHash = namespace.substr(1) + '-' + i;
        var $el = $(el);
        // Store state in data
        var data = $.data(el, namespace);
        if (!data) {
            data = $.data(el, namespace, {
                el: $el,
                config: {}
            });
        }
        data.current = null;
        data.tabIdentifier = widgetHash + '-' + tabAttr;
        data.paneIdentifier = widgetHash + '-' + paneAttr;
        data.menu = $el.children('.w-tab-menu');
        data.links = data.menu.children('.w-tab-link');
        data.content = $el.children('.w-tab-content');
        data.panes = data.content.children('.w-tab-pane');
        // Remove old events
        data.el.off(namespace);
        data.links.off(namespace);
        // This role is necessary in the ARIA spec
        data.menu.attr('role', 'tablist');
        // Set all tabs unfocusable
        data.links.attr('tabindex', '-1');
        // Set config from data attributes
        configure(data);
        // Wire up events when not in design mode
        if (!design) {
            data.links.on('click' + namespace, linkSelect(data));
            data.links.on('keydown' + namespace, handleLinkKeydown(data));
            // Trigger first intro event from current tab
            var $link = data.links.filter('.' + linkCurrent);
            var tab = $link.attr(tabAttr);
            tab && changeTab(data, {
                tab,
                immediate: true
            });
        }
    }
    function configure(data) {
        var config = {};
        // Set config options from data attributes
        config.easing = data.el.attr('data-easing') || 'ease';
        var intro = parseInt(data.el.attr('data-duration-in'), 10);
        // eslint-disable-next-line no-self-compare
        intro = config.intro = intro === intro ? intro : 0;
        var outro = parseInt(data.el.attr('data-duration-out'), 10);
        // eslint-disable-next-line no-self-compare
        outro = config.outro = outro === outro ? outro : 0;
        config.immediate = !intro && !outro;
        // Store config in data
        data.config = config;
    }
    function getActiveTabIdx(data) {
        var tab = data.current;
        return Array.prototype.findIndex.call(data.links, (t)=>{
            return t.getAttribute(tabAttr) === tab;
        }, null);
    }
    function linkSelect(data) {
        return function(evt) {
            evt.preventDefault();
            var tab = evt.currentTarget.getAttribute(tabAttr);
            tab && changeTab(data, {
                tab
            });
        };
    }
    function handleLinkKeydown(data) {
        return function(evt) {
            var currentIdx = getActiveTabIdx(data);
            var keyName = evt.key;
            var keyMap = {
                ArrowLeft: currentIdx - 1,
                ArrowUp: currentIdx - 1,
                ArrowRight: currentIdx + 1,
                ArrowDown: currentIdx + 1,
                End: data.links.length - 1,
                Home: 0
            };
            // Bail out of function if this key is not
            // involved in tab management
            if (!(keyName in keyMap)) return;
            evt.preventDefault();
            var nextIdx = keyMap[keyName];
            // go back to end of tabs if we wrap past the start
            if (nextIdx === -1) {
                nextIdx = data.links.length - 1;
            }
            // go back to start if we wrap past the last tab
            if (nextIdx === data.links.length) {
                nextIdx = 0;
            }
            var tabEl = data.links[nextIdx];
            var tab = tabEl.getAttribute(tabAttr);
            tab && changeTab(data, {
                tab
            });
        };
    }
    function changeTab(data, options) {
        options = options || {};
        var config = data.config;
        var easing = config.easing;
        var tab = options.tab;
        // Don't select the same tab twice
        if (tab === data.current) {
            return;
        }
        data.current = tab;
        /**
       * The currently active tab.
       * Will be referenced to manage focus after
       * TabLink attributes are changed
       * @type {HTMLAnchorElement}
       */ var currentTab;
        // Select the current link
        data.links.each(function(i, el) {
            var $el = $(el);
            // Add important attributes at build time.
            if (options.immediate || config.immediate) {
                // Store corresponding pane for reference.
                var pane = data.panes[i];
                // IDs are necessary for ARIA relationships,
                // so if the user did not create one, we create one
                // using our generated identifier
                if (!el.id) {
                    el.id = data.tabIdentifier + '-' + i;
                }
                if (!pane.id) {
                    pane.id = data.paneIdentifier + '-' + i;
                }
                el.href = '#' + pane.id;
                // Tab elements must take this role
                el.setAttribute('role', 'tab');
                // Tab elements must reference the unique ID of the panel
                // that they control
                el.setAttribute('aria-controls', pane.id);
                // Tab elements must report that they are not selected
                // by default
                el.setAttribute('aria-selected', 'false');
                // Panes must take on the `Tabpanel` role
                pane.setAttribute('role', 'tabpanel');
                // Elements with tabpanel role must be labelled by
                // their controlling tab
                pane.setAttribute('aria-labelledby', el.id);
            }
            if (el.getAttribute(tabAttr) === tab) {
                // This is the current tab. Store it.
                currentTab = el;
                $el.addClass(linkCurrent).removeAttr('tabindex').attr({
                    'aria-selected': 'true'
                }).each(ix.intro);
            } else if ($el.hasClass(linkCurrent)) {
                $el.removeClass(linkCurrent).attr({
                    tabindex: '-1',
                    'aria-selected': 'false'
                }).each(ix.outro);
            }
        });
        // Find the new tab panes and keep track of previous
        var targets = [];
        var previous = [];
        data.panes.each(function(i, el) {
            var $el = $(el);
            if (el.getAttribute(tabAttr) === tab) {
                targets.push(el);
            } else if ($el.hasClass(tabActive)) {
                previous.push(el);
            }
        });
        var $targets = $(targets);
        var $previous = $(previous);
        // Switch tabs immediately and bypass transitions
        if (options.immediate || config.immediate) {
            $targets.addClass(tabActive).each(ix.intro);
            $previous.removeClass(tabActive);
            // Redraw to benefit components in the hidden tab pane
            // But only if not currently in the middle of a redraw
            if (!inRedraw) {
                Webflow.redraw.up();
            }
            return;
        } else {
            // Backwards compatible hack to prevent focus from scrolling
            var x = window.scrollX;
            var y = window.scrollY;
            currentTab.focus();
            window.scrollTo(x, y);
        }
        // Fade out the currently active tab before intro
        if ($previous.length && config.outro) {
            $previous.each(ix.outro);
            tram($previous).add('opacity ' + config.outro + 'ms ' + easing, {
                fallback: safari
            }).start({
                opacity: 0
            }).then(()=>fadeIn(config, $previous, $targets));
        } else {
            // Skip the outro and play intro
            fadeIn(config, $previous, $targets);
        }
    }
    // Fade in the new target
    function fadeIn(config, $previous, $targets) {
        // Clear previous active class + styles touched by tram
        // We cannot remove the whole inline style because it could be dynamically bound
        $previous.removeClass(tabActive).css({
            opacity: '',
            transition: '',
            transform: '',
            width: '',
            height: ''
        });
        // Add active class to new target
        $targets.addClass(tabActive).each(ix.intro);
        Webflow.redraw.up();
        // Set opacity immediately if intro is zero
        if (!config.intro) {
            return tram($targets).set({
                opacity: 1
            });
        }
        // Otherwise fade in opacity
        tram($targets).set({
            opacity: 0
        }).redraw().add('opacity ' + config.intro + 'ms ' + config.easing, {
            fallback: safari
        }).start({
            opacity: 1
        });
    }
    // Export module
    return api;
});

//# sourceMappingURL=data:application/json;base64,

}),
3487: (function (__unused_webpack_module, exports) {
"use strict";
// MIT License
//
// Copyright (c) 2020 Arjun Barrett
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    strFromU8: function() {
        return strFromU8;
    },
    unzip: function() {
        return unzip;
    }
});
const ch2 = {}, wk = function(c, id, msg, transfer, cb) {
    const w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([
        c + ';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'
    ], {
        type: "text/javascript"
    }))));
    return w.onmessage = function(e) {
        const d = e.data, ed = d.$e$;
        if (ed) {
            const err = new Error(ed[0]);
            err.code = ed[1], err.stack = ed[2], cb(err, null);
        } else cb(null, d);
    }, w.postMessage(msg, transfer), w;
}, u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array, fleb = new u8([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    0,
    0,
    0,
    0
]), fdeb = new u8([
    0,
    0,
    0,
    0,
    1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    5,
    5,
    6,
    6,
    7,
    7,
    8,
    8,
    9,
    9,
    10,
    10,
    11,
    11,
    12,
    12,
    13,
    13,
    0,
    0
]), clim = new u8([
    16,
    17,
    18,
    0,
    8,
    7,
    9,
    6,
    10,
    5,
    11,
    4,
    12,
    3,
    13,
    2,
    14,
    1,
    15
]), freb = function(eb, start) {
    const b = new u16(31);
    for(var i = 0; i < 31; ++i)b[i] = start += 1 << eb[i - 1];
    const r = new u32(b[30]);
    for(i = 1; i < 30; ++i)for(let j = b[i]; j < b[i + 1]; ++j)r[j] = j - b[i] << 5 | i;
    return [
        b,
        r
    ];
}, _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];
fl[28] = 258, revfl[258] = 28;
const _b = freb(fdeb, 0), fd = _b[0], rev = new u16(32768);
for(var i = 0; i < 32768; ++i){
    let x = (43690 & i) >>> 1 | (21845 & i) << 1;
    x = (52428 & x) >>> 2 | (13107 & x) << 2, x = (61680 & x) >>> 4 | (3855 & x) << 4, rev[i] = ((65280 & x) >>> 8 | (255 & x) << 8) >>> 1;
}
const hMap = function(cd, mb, r) {
    const s = cd.length;
    let i = 0;
    const l = new u16(mb);
    for(; i < s; ++i)cd[i] && ++l[cd[i] - 1];
    const le = new u16(mb);
    for(i = 0; i < mb; ++i)le[i] = le[i - 1] + l[i - 1] << 1;
    let co;
    if (r) {
        co = new u16(1 << mb);
        const rvb = 15 - mb;
        for(i = 0; i < s; ++i)if (cd[i]) {
            const sv = i << 4 | cd[i], r_1 = mb - cd[i];
            let v = le[cd[i] - 1]++ << r_1;
            for(let m = v | (1 << r_1) - 1; v <= m; ++v)co[rev[v] >>> rvb] = sv;
        }
    } else for(co = new u16(s), i = 0; i < s; ++i)cd[i] && (co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i]);
    return co;
}, flt = new u8(288);
for(i = 0; i < 144; ++i)flt[i] = 8;
for(i = 144; i < 256; ++i)flt[i] = 9;
for(i = 256; i < 280; ++i)flt[i] = 7;
for(i = 280; i < 288; ++i)flt[i] = 8;
const fdt = new u8(32);
for(i = 0; i < 32; ++i)fdt[i] = 5;
const flrm = hMap(flt, 9, 1), fdrm = hMap(fdt, 5, 1), max = function(a) {
    let m = a[0];
    for(let i = 1; i < a.length; ++i)a[i] > m && (m = a[i]);
    return m;
}, bits = function(d, p, m) {
    const o = p / 8 | 0;
    return (d[o] | d[o + 1] << 8) >> (7 & p) & m;
}, bits16 = function(d, p) {
    const o = p / 8 | 0;
    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (7 & p);
}, shft = function(p) {
    return (p + 7) / 8 | 0;
}, slc = function(v, s, e) {
    (null == s || s < 0) && (s = 0), (null == e || e > v.length) && (e = v.length);
    const n = new (2 === v.BYTES_PER_ELEMENT ? u16 : 4 === v.BYTES_PER_ELEMENT ? u32 : u8)(e - s);
    return n.set(v.subarray(s, e)), n;
}, ec = [
    "unexpected EOF",
    "invalid block type",
    "invalid length/literal",
    "invalid distance",
    "stream finished",
    "no stream handler",
    ,
    "no callback",
    "invalid UTF-8 data",
    "extra field too long",
    "date not in range 1980-2099",
    "filename too long",
    "stream finishing",
    "invalid zip data"
];
var err = function(ind, msg, nt) {
    const e = new Error(msg || ec[ind]);
    if (e.code = ind, Error.captureStackTrace && Error.captureStackTrace(e, err), !nt) throw e;
    return e;
};
const inflt = function(dat, buf, st) {
    const sl = dat.length;
    if (!sl || st && st.f && !st.l) return buf || new u8(0);
    const noBuf = !buf || st, noSt = !st || st.i;
    st || (st = {}), buf || (buf = new u8(3 * sl));
    const cbuf = function(l) {
        const bl = buf.length;
        if (l > bl) {
            const nbuf = new u8(Math.max(2 * bl, l));
            nbuf.set(buf), buf = nbuf;
        }
    };
    let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;
    const tbts = 8 * sl;
    do {
        if (!lm) {
            final = bits(dat, pos, 1);
            const type = bits(dat, pos + 1, 3);
            if (pos += 3, !type) {
                const l = dat[(s = shft(pos) + 4) - 4] | dat[s - 3] << 8, t = s + l;
                if (t > sl) {
                    noSt && err(0);
                    break;
                }
                noBuf && cbuf(bt + l), buf.set(dat.subarray(s, t), bt), st.b = bt += l, st.p = pos = 8 * t, st.f = final;
                continue;
            }
            if (1 === type) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;
            else if (2 === type) {
                const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4, tl = hLit + bits(dat, pos + 5, 31) + 1;
                pos += 14;
                const ldt = new u8(tl), clt = new u8(19);
                for(var i = 0; i < hcLen; ++i)clt[clim[i]] = bits(dat, pos + 3 * i, 7);
                pos += 3 * hcLen;
                const clb = max(clt), clbmsk = (1 << clb) - 1, clm = hMap(clt, clb, 1);
                for(i = 0; i < tl;){
                    const r = clm[bits(dat, pos, clbmsk)];
                    var s;
                    if (pos += 15 & r, (s = r >>> 4) < 16) ldt[i++] = s;
                    else {
                        var c = 0;
                        let n = 0;
                        for(16 === s ? (n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1]) : 17 === s ? (n = 3 + bits(dat, pos, 7), pos += 3) : 18 === s && (n = 11 + bits(dat, pos, 127), pos += 7); n--;)ldt[i++] = c;
                    }
                }
                const lt = ldt.subarray(0, hLit);
                var dt = ldt.subarray(hLit);
                lbt = max(lt), dbt = max(dt), lm = hMap(lt, lbt, 1), dm = hMap(dt, dbt, 1);
            } else err(1);
            if (pos > tbts) {
                noSt && err(0);
                break;
            }
        }
        noBuf && cbuf(bt + 131072);
        const lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;
        let lpos = pos;
        for(;; lpos = pos){
            const sym = (c = lm[bits16(dat, pos) & lms]) >>> 4;
            if (pos += 15 & c, pos > tbts) {
                noSt && err(0);
                break;
            }
            if (c || err(2), sym < 256) buf[bt++] = sym;
            else {
                if (256 === sym) {
                    lpos = pos, lm = null;
                    break;
                }
                {
                    let add = sym - 254;
                    if (sym > 264) {
                        var b = fleb[i = sym - 257];
                        add = bits(dat, pos, (1 << b) - 1) + fl[i], pos += b;
                    }
                    const d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;
                    d || err(3), pos += 15 & d;
                    dt = fd[dsym];
                    if (dsym > 3) {
                        b = fdeb[dsym];
                        dt += bits16(dat, pos) & (1 << b) - 1, pos += b;
                    }
                    if (pos > tbts) {
                        noSt && err(0);
                        break;
                    }
                    noBuf && cbuf(bt + 131072);
                    const end = bt + add;
                    for(; bt < end; bt += 4)buf[bt] = buf[bt - dt], buf[bt + 1] = buf[bt + 1 - dt], buf[bt + 2] = buf[bt + 2 - dt], buf[bt + 3] = buf[bt + 3 - dt];
                    bt = end;
                }
            }
        }
        st.l = lm, st.p = lpos, st.b = bt, st.f = final, lm && (final = 1, st.m = lbt, st.d = dm, st.n = dbt);
    }while (!final);
    return bt === buf.length ? buf : slc(buf, 0, bt);
}, mrg = function(a, b) {
    const o = {};
    for(var k in a)o[k] = a[k];
    for(var k in b)o[k] = b[k];
    return o;
}, wcln = function(fn, fnStr, td) {
    const dt = fn(), st = fn.toString(), ks = st.slice(st.indexOf("[") + 1, st.lastIndexOf("]")).replace(/\s+/g, "").split(",");
    for(let i = 0; i < dt.length; ++i){
        const v = dt[i], k = ks[i];
        if ("function" == typeof v) {
            fnStr += ";" + k + "=";
            const st_1 = v.toString();
            if (v.prototype) if (-1 !== st_1.indexOf("[native code]")) {
                const spInd = st_1.indexOf(" ", 8) + 1;
                fnStr += st_1.slice(spInd, st_1.indexOf("(", spInd));
            } else {
                fnStr += st_1;
                for(const t in v.prototype)fnStr += ";" + k + ".prototype." + t + "=" + v.prototype[t].toString();
            }
            else fnStr += st_1;
        } else td[k] = v;
    }
    return [
        fnStr,
        td
    ];
}, ch = [], cbfs = function(v) {
    const tl = [];
    for(const k in v)v[k].buffer && tl.push((v[k] = new v[k].constructor(v[k])).buffer);
    return tl;
}, wrkr = function(fns, init, id, cb) {
    let _a;
    if (!ch[id]) {
        let fnStr = "", td_1 = {};
        const m = fns.length - 1;
        for(let i = 0; i < m; ++i)_a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];
        ch[id] = wcln(fns[m], fnStr, td_1);
    }
    const td = mrg({}, ch[id][1]);
    return wk(ch[id][0] + ";onmessage=function(e){for(var kz in e.data)self[kz]=e.data[kz];onmessage=" + init.toString() + "}", id, td, cbfs(td), cb);
}, bInflt = function() {
    return [
        u8,
        u16,
        u32,
        fleb,
        fdeb,
        clim,
        fl,
        fd,
        flrm,
        fdrm,
        rev,
        ec,
        hMap,
        max,
        bits,
        bits16,
        shft,
        slc,
        err,
        inflt,
        inflateSync,
        pbf,
        gu8
    ];
};
var pbf = function(msg) {
    return postMessage(msg, [
        msg.buffer
    ]);
}, gu8 = function(o) {
    return o && o.size && new u8(o.size);
};
const cbify = function(dat, opts, fns, init, id, cb) {
    var w = wrkr(fns, init, id, function(err, dat) {
        w.terminate(), cb(err, dat);
    });
    return w.postMessage([
        dat,
        opts
    ], opts.consume ? [
        dat.buffer
    ] : []), function() {
        w.terminate();
    };
}, b2 = function(d, b) {
    return d[b] | d[b + 1] << 8;
}, b4 = function(d, b) {
    return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;
};
function inflate(data, opts, cb) {
    return cb || (cb = opts, opts = {}), "function" != typeof cb && err(7), cbify(data, opts, [
        bInflt
    ], function(ev) {
        return pbf(inflateSync(ev.data[0], gu8(ev.data[1])));
    }, 1, cb);
}
function inflateSync(data, out) {
    return inflt(data, out);
}
const td = "undefined" != typeof TextDecoder && new TextDecoder, dutf8 = function(d) {
    for(let r = "", i = 0;;){
        let c = d[i++];
        const eb = (c > 127) + (c > 223) + (c > 239);
        if (i + eb > d.length) return [
            r,
            slc(d, i - 1)
        ];
        eb ? 3 === eb ? (c = ((15 & c) << 18 | (63 & d[i++]) << 12 | (63 & d[i++]) << 6 | 63 & d[i++]) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | 1023 & c)) : r += 1 & eb ? String.fromCharCode((31 & c) << 6 | 63 & d[i++]) : String.fromCharCode((15 & c) << 12 | (63 & d[i++]) << 6 | 63 & d[i++]) : r += String.fromCharCode(c);
    }
};
function strFromU8(dat, latin1) {
    if (latin1) {
        let r = "";
        for(let i = 0; i < dat.length; i += 16384)r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));
        return r;
    }
    if (td) return td.decode(dat);
    {
        const _a = dutf8(dat), out = _a[0];
        return _a[1].length && err(8), out;
    }
}
const slzh = function(d, b) {
    return b + 30 + b2(d, b + 26) + b2(d, b + 28);
}, zh = function(d, b, z) {
    const fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(2048 & b2(d, b + 8))), es = b + 46 + fnl, bs = b4(d, b + 20), _a = z && 4294967295 === bs ? z64e(d, es) : [
        bs,
        b4(d, b + 24),
        b4(d, b + 42)
    ], sc = _a[0], su = _a[1], off = _a[2];
    return [
        b2(d, b + 10),
        sc,
        su,
        fn,
        es + b2(d, b + 30) + b2(d, b + 32),
        off
    ];
}, mt = "function" == typeof queueMicrotask ? queueMicrotask : "function" == typeof setTimeout ? setTimeout : function(fn) {
    fn();
};
function unzip(data, opts, cb) {
    cb || (cb = opts, opts = {}), "function" != typeof cb && err(7);
    const term = [], tAll = function() {
        for(let i = 0; i < term.length; ++i)term[i]();
    }, files = {};
    let cbd = function(a, b) {
        mt(function() {
            cb(a, b);
        });
    };
    mt(function() {
        cbd = cb;
    });
    let e = data.length - 22;
    for(; 101010256 !== b4(data, e); --e)if (!e || data.length - e > 65558) return cbd(err(13, 0, 1), null), tAll;
    let lft = b2(data, e + 8);
    if (lft) {
        let c = lft, o = b4(data, e + 16), z = 4294967295 === o || 65535 === c;
        if (z) {
            const ze = b4(data, e - 12);
            z = 101075792 === b4(data, ze), z && (c = lft = b4(data, ze + 32), o = b4(data, ze + 48));
        }
        const fltr = opts && opts.filter, _loop_3 = function() {
            const _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);
            o = no;
            const cbl = function(e, d) {
                e ? (tAll(), cbd(e, null)) : (d && (files[fn] = d), --lft || cbd(null, files));
            };
            if (!fltr || fltr({
                name: fn,
                size: sc,
                originalSize: su,
                compression: c_1
            })) if (c_1) if (8 === c_1) {
                const infl = data.subarray(b, b + sc);
                if (sc < 32e4) try {
                    cbl(null, inflateSync(infl, new u8(su)));
                } catch (e) {
                    cbl(e, null);
                }
                else term.push(inflate(infl, {
                    size: su
                }, cbl));
            } else cbl(err(14, "unknown compression type " + c_1, 1), null);
            else cbl(null, slc(data, b, b + sc));
            else cbl(null, null);
        };
        for(let i = 0; i < c; ++i)_loop_3(i);
    } else cbd(null, {});
    return tAll;
}

//# sourceMappingURL=data:application/json;base64,

}),
7933: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/* eslint-env browser */ // Borrowed from https://github.com/reslear/dotlottie-player-core/blob/ab9ab866df3f6687111f9317189b83b66c0d19f8/src/fetch.ts#L62
//
// MIT License
//
// Copyright (c) 2022 reslear
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    fetchLottie: function() {
        return fetchLottie;
    },
    unZipDotLottie: function() {
        return unZipDotLottie;
    }
});
const _fflatemin = __webpack_require__(3487);
function parseManifest(data) {
    const manifest = JSON.parse(data);
    if (!('animations' in manifest)) {
        throw new Error('Manifest not found');
    }
    if (manifest.animations.length === 0) {
        throw new Error('No animations listed in the manifest');
    }
    return manifest;
}
function isBytesZip(bytes) {
    // lottie file is a zip file format https://en.wikipedia.org/wiki/List_of_file_signatures
    // @see https://stackoverflow.com/a/66046176
    const b = new Uint8Array(bytes, 0, 32);
    return b[0] === 80 && b[1] === 75 && b[2] === 3 && b[3] === 4;
}
async function fetchRequest(url) {
    return await fetch(new URL(url, window?.location?.href).href).then((r)=>r.arrayBuffer());
}
async function base64fromU8(data) {
    const base64url = await new Promise((resolve)=>{
        const reader = new FileReader();
        reader.readAsDataURL(new Blob([
            data
        ]));
        reader.onload = ()=>resolve(reader.result);
    });
    // @ts-expect-error - TS2322 - Type 'string | undefined' is not assignable to type 'string'.
    return base64url.split(',', 2)[1];
}
async function unZip(buffer) {
    const file = new Uint8Array(buffer);
    const lottieFile = await new Promise((resolve, reject)=>{
        (0, _fflatemin.unzip)(file, (err, unzipped)=>err ? reject(err) : resolve(unzipped));
    });
    return {
        // @ts-expect-error - TS2322 - Type 'string | Uint8Array | Uint16Array | Uint32Array' is not assignable to type 'string'.
        read: (path)=>(0, _fflatemin.strFromU8)(lottieFile[path]),
        readB64: async (path)=>await base64fromU8(lottieFile[path])
    };
}
async function prepareLottieAssets(lottieJson, dotLottie) {
    if (!('assets' in lottieJson)) {
        return lottieJson;
    }
    async function parseAsset(asset) {
        const { p } = asset;
        if (p == null) return asset;
        if (dotLottie.read(`images/${p}`) == null) return asset;
        const ext = p.split('.').pop();
        const assetB64 = await dotLottie.readB64(`images/${p}`);
        // Handles assets that are encoded directly in the JSON
        if (ext?.startsWith('data:')) {
            asset.p = ext;
            asset.e = 1;
            return asset;
        }
        switch(ext){
            case 'svg':
            case 'svg+xml':
                asset.p = `data:image/svg+xml;base64,${assetB64}`;
                break;
            case 'png':
            case 'jpg':
            case 'jpeg':
            case 'gif':
            case 'webp':
                asset.p = `data:image/${ext};base64,${assetB64}`;
                break;
            default:
                asset.p = `data:;base64,${assetB64}`;
        }
        asset.e = 1;
        return asset;
    }
    const result = await Promise.all(lottieJson.assets.map(parseAsset));
    result.map((asset, i)=>{
        lottieJson.assets[i] = asset;
    });
    return lottieJson;
}
async function unZipDotLottie(response) {
    const dotLottie = await unZip(response);
    const manifest = parseManifest(dotLottie.read('manifest.json'));
    const animations = await Promise.all(manifest.animations.map((a)=>{
        const lottieJson = JSON.parse(dotLottie.read(`animations/${a.id}.json`));
        return prepareLottieAssets(lottieJson, dotLottie);
    }));
    // @ts-expect-error - TS2322 - Type 'LottieJson | undefined' is not assignable to type 'LottieJson'.
    return animations[0];
}
async function fetchLottie(url) {
    const response = await fetchRequest(url);
    if (isBytesZip(response)) {
        return await unZipDotLottie(response);
    }
    const lottieJson = JSON.parse(new TextDecoder().decode(response));
    return lottieJson;
}

//# sourceMappingURL=data:application/json;base64,

}),
3946: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    actionListPlaybackChanged: function() {
        return actionListPlaybackChanged;
    },
    animationFrameChanged: function() {
        return animationFrameChanged;
    },
    clearRequested: function() {
        return clearRequested;
    },
    elementStateChanged: function() {
        return elementStateChanged;
    },
    eventListenerAdded: function() {
        return eventListenerAdded;
    },
    eventStateChanged: function() {
        return eventStateChanged;
    },
    instanceAdded: function() {
        return instanceAdded;
    },
    instanceRemoved: function() {
        return instanceRemoved;
    },
    instanceStarted: function() {
        return instanceStarted;
    },
    mediaQueriesDefined: function() {
        return mediaQueriesDefined;
    },
    parameterChanged: function() {
        return parameterChanged;
    },
    playbackRequested: function() {
        return playbackRequested;
    },
    previewRequested: function() {
        return previewRequested;
    },
    rawDataImported: function() {
        return rawDataImported;
    },
    sessionInitialized: function() {
        return sessionInitialized;
    },
    sessionStarted: function() {
        return sessionStarted;
    },
    sessionStopped: function() {
        return sessionStopped;
    },
    stopRequested: function() {
        return stopRequested;
    },
    testFrameRendered: function() {
        return testFrameRendered;
    },
    viewportWidthChanged: function() {
        return viewportWidthChanged;
    }
});
const _sharedconstants = __webpack_require__(7087);
const _shared = __webpack_require__(9468);
const { IX2_RAW_DATA_IMPORTED, IX2_SESSION_INITIALIZED, IX2_SESSION_STARTED, IX2_SESSION_STOPPED, IX2_PREVIEW_REQUESTED, IX2_PLAYBACK_REQUESTED, IX2_STOP_REQUESTED, IX2_CLEAR_REQUESTED, IX2_EVENT_LISTENER_ADDED, IX2_TEST_FRAME_RENDERED, IX2_EVENT_STATE_CHANGED, IX2_ANIMATION_FRAME_CHANGED, IX2_PARAMETER_CHANGED, IX2_INSTANCE_ADDED, IX2_INSTANCE_STARTED, IX2_INSTANCE_REMOVED, IX2_ELEMENT_STATE_CHANGED, IX2_ACTION_LIST_PLAYBACK_CHANGED, IX2_VIEWPORT_WIDTH_CHANGED, IX2_MEDIA_QUERIES_DEFINED } = _sharedconstants.IX2EngineActionTypes;
const { reifyState } = _shared.IX2VanillaUtils;
const rawDataImported = (rawData)=>({
        type: IX2_RAW_DATA_IMPORTED,
        payload: {
            ...reifyState(rawData)
        }
    });
const sessionInitialized = ({ hasBoundaryNodes, reducedMotion })=>({
        type: IX2_SESSION_INITIALIZED,
        payload: {
            hasBoundaryNodes,
            reducedMotion
        }
    });
const sessionStarted = ()=>({
        type: IX2_SESSION_STARTED
    });
const sessionStopped = ()=>({
        type: IX2_SESSION_STOPPED
    });
const previewRequested = ({ rawData, defer })=>({
        type: IX2_PREVIEW_REQUESTED,
        payload: {
            defer,
            rawData
        }
    });
const playbackRequested = ({ actionTypeId = _sharedconstants.ActionTypeConsts.GENERAL_START_ACTION, actionListId, actionItemId, eventId, allowEvents, immediate, testManual, verbose, rawData })=>({
        type: IX2_PLAYBACK_REQUESTED,
        payload: {
            actionTypeId,
            actionListId,
            actionItemId,
            testManual,
            eventId,
            allowEvents,
            immediate,
            verbose,
            rawData
        }
    });
const stopRequested = (actionListId)=>({
        type: IX2_STOP_REQUESTED,
        payload: {
            actionListId
        }
    });
const clearRequested = ()=>({
        type: IX2_CLEAR_REQUESTED
    });
const eventListenerAdded = (target, listenerParams)=>({
        type: IX2_EVENT_LISTENER_ADDED,
        payload: {
            target,
            listenerParams
        }
    });
const testFrameRendered = (step = 1)=>({
        type: IX2_TEST_FRAME_RENDERED,
        payload: {
            step
        }
    });
const eventStateChanged = (stateKey, newState)=>({
        type: IX2_EVENT_STATE_CHANGED,
        payload: {
            stateKey,
            newState
        }
    });
const animationFrameChanged = (now, parameters)=>({
        type: IX2_ANIMATION_FRAME_CHANGED,
        payload: {
            now,
            parameters
        }
    });
const parameterChanged = (key, value)=>({
        type: IX2_PARAMETER_CHANGED,
        payload: {
            key,
            value
        }
    });
const instanceAdded = (options)=>({
        type: IX2_INSTANCE_ADDED,
        payload: {
            ...options
        }
    });
const instanceStarted = (instanceId, time)=>({
        type: IX2_INSTANCE_STARTED,
        payload: {
            instanceId,
            time
        }
    });
const instanceRemoved = (instanceId)=>({
        type: IX2_INSTANCE_REMOVED,
        payload: {
            instanceId
        }
    });
const elementStateChanged = (elementId, actionTypeId, current, actionItem)=>({
        type: IX2_ELEMENT_STATE_CHANGED,
        payload: {
            elementId,
            actionTypeId,
            current,
            actionItem
        }
    });
const actionListPlaybackChanged = ({ actionListId, isPlaying })=>({
        type: IX2_ACTION_LIST_PLAYBACK_CHANGED,
        payload: {
            actionListId,
            isPlaying
        }
    });
const viewportWidthChanged = ({ width, mediaQueries })=>({
        type: IX2_VIEWPORT_WIDTH_CHANGED,
        payload: {
            width,
            mediaQueries
        }
    });
const mediaQueriesDefined = ()=>({
        type: IX2_MEDIA_QUERIES_DEFINED
    });

//# sourceMappingURL=data:application/json;base64,

}),
6011: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
// Array.includes needed for IE11 @packages/systems/ix2/shared-utils/quick-effects

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    actions: function() {
        return _IX2EngineActions;
    },
    destroy: function() {
        return destroy;
    },
    init: function() {
        return init;
    },
    setEnv: function() {
        return setEnv;
    },
    store: function() {
        return store;
    }
});
const _redux = __webpack_require__(9516);
const _IX2Reducer = /*#__PURE__*/ _interop_require_default(__webpack_require__(7243));
const _IX2VanillaEngine = __webpack_require__(1970);
const _IX2EngineActions = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(3946));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const store = (0, _redux.createStore)(_IX2Reducer.default);
function setEnv(env) {
    if (env()) {
        (0, _IX2VanillaEngine.observeRequests)(store);
    }
}
function init(rawData) {
    destroy();
    (0, _IX2VanillaEngine.startEngine)({
        store,
        rawData,
        allowEvents: true
    });
}
function destroy() {
    (0, _IX2VanillaEngine.stopEngine)(store);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEFycmF5LmluY2x1ZGVzIG5lZWRlZCBmb3IgSUUxMSBAcGFja2FnZXMvc3lzdGVtcy9peDIvc2hhcmVkLXV0aWxzL3F1aWNrLWVmZmVjdHNcbmltcG9ydCAnY29yZS1qcy9mZWF0dXJlcy9hcnJheS9pbmNsdWRlcyc7XG5cbmltcG9ydCB7Y3JlYXRlU3RvcmV9IGZyb20gJ3JlZHV4JztcbmltcG9ydCByZWR1Y2VyIGZyb20gJy4vcmVkdWNlcnMvSVgyUmVkdWNlcic7XG5pbXBvcnQge1xuICBzdGFydEVuZ2luZSxcbiAgc3RvcEVuZ2luZSxcbiAgb2JzZXJ2ZVJlcXVlc3RzLFxufSBmcm9tICcuL2xvZ2ljL0lYMlZhbmlsbGFFbmdpbmUnO1xuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuL2FjdGlvbnMvSVgyRW5naW5lQWN0aW9ucyc7XG5pbXBvcnQge1xuICB0eXBlIElYMlJhd0RhdGEsXG4gIHR5cGUgcmF3RGF0YUltcG9ydGVkUGF5bG9hZCxcbn0gZnJvbSAnLi9hY3Rpb25zL0lYMkVuZ2luZUFjdGlvbnMnO1xuXG5jb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKHJlZHVjZXIpO1xuXG5mdW5jdGlvbiBzZXRFbnYoZW52OiAoYXJnMT86IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpID0+IGJvb2xlYW4pIHtcbiAgaWYgKGVudigpKSB7XG4gICAgb2JzZXJ2ZVJlcXVlc3RzKHN0b3JlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0KHJhd0RhdGE6IElYMlJhd0RhdGEpIHtcbiAgZGVzdHJveSgpO1xuXG4gIHN0YXJ0RW5naW5lKHtzdG9yZSwgcmF3RGF0YSwgYWxsb3dFdmVudHM6IHRydWV9KTtcbn1cblxuZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgc3RvcEVuZ2luZShzdG9yZSk7XG59XG5cbmV4cG9ydCB7XG4gIHNldEVudixcbiAgaW5pdCxcbiAgZGVzdHJveSxcbiAgc3RvcmUsXG4gIGFjdGlvbnMsXG4gIHR5cGUgSVgyUmF3RGF0YSxcbiAgdHlwZSByYXdEYXRhSW1wb3J0ZWRQYXlsb2FkLFxufTtcbiJdLCJuYW1lcyI6WyJhY3Rpb25zIiwiZGVzdHJveSIsImluaXQiLCJzZXRFbnYiLCJzdG9yZSIsImNyZWF0ZVN0b3JlIiwicmVkdWNlciIsImVudiIsIm9ic2VydmVSZXF1ZXN0cyIsInJhd0RhdGEiLCJzdGFydEVuZ2luZSIsImFsbG93RXZlbnRzIiwic3RvcEVuZ2luZSJdLCJtYXBwaW5ncyI6IkFBQUEsa0ZBQWtGOzs7Ozs7Ozs7Ozs7SUF1Q2hGQSxPQUFPO2VBQVBBOztJQUZBQyxPQUFPO2VBQVBBOztJQURBQyxJQUFJO2VBQUpBOztJQURBQyxNQUFNO2VBQU5BOztJQUdBQyxLQUFLO2VBQUxBOzs7dUJBbkN3QjttRUFDTjtrQ0FLYjswRUFDa0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTXpCLE1BQU1BLFFBQVFDLElBQUFBLGtCQUFXLEVBQUNDLG1CQUFPO0FBRWpDLFNBQVNILE9BQU9JLEdBQWtEO0lBQ2hFLElBQUlBLE9BQU87UUFDVEMsSUFBQUEsaUNBQWUsRUFBQ0o7SUFDbEI7QUFDRjtBQUVBLFNBQVNGLEtBQUtPLE9BQW1CO0lBQy9CUjtJQUVBUyxJQUFBQSw2QkFBVyxFQUFDO1FBQUNOO1FBQU9LO1FBQVNFLGFBQWE7SUFBSTtBQUNoRDtBQUVBLFNBQVNWO0lBQ1BXLElBQUFBLDRCQUFVLEVBQUNSO0FBQ2IifQ==

}),
5012: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/* eslint-env browser */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    elementContains: function() {
        return elementContains;
    },
    getChildElements: function() {
        return getChildElements;
    },
    getClosestElement: function() {
        return getClosestElement;
    },
    getProperty: function() {
        return getProperty;
    },
    getQuerySelector: function() {
        return getQuerySelector;
    },
    getRefType: function() {
        return getRefType;
    },
    getSiblingElements: function() {
        return getSiblingElements;
    },
    getStyle: function() {
        return getStyle;
    },
    getValidDocument: function() {
        return getValidDocument;
    },
    isSiblingNode: function() {
        return isSiblingNode;
    },
    matchSelector: function() {
        return matchSelector;
    },
    queryDocument: function() {
        return queryDocument;
    },
    setStyle: function() {
        return setStyle;
    }
});
const _shared = __webpack_require__(9468);
const _sharedconstants = __webpack_require__(7087);
const { ELEMENT_MATCHES } = _shared.IX2BrowserSupport;
const { IX2_ID_DELIMITER, HTML_ELEMENT, PLAIN_OBJECT, WF_PAGE } = _sharedconstants.IX2EngineConstants;
function setStyle(element, prop, value) {
    // @ts-expect-error - TS7015 - Element implicitly has an 'any' type because index expression is not of type 'number'.
    element.style[prop] = value;
}
function getStyle(element, prop) {
    if (prop.startsWith('--')) {
        return window.getComputedStyle(document.documentElement).getPropertyValue(prop);
    }
    if (element.style instanceof CSSStyleDeclaration) {
        // @ts-expect-error - TS7015 - Element implicitly has an 'any' type because index expression is not of type 'number'.
        return element.style[prop];
    }
}
function getProperty(element, prop) {
    // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'HTMLElement'.
    return element[prop];
}
function matchSelector(selector) {
    // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'HTMLElement'.
    return (element)=>element[ELEMENT_MATCHES](selector);
}
function getQuerySelector({ id, selector }) {
    if (id) {
        let nodeId = id;
        if (id.indexOf(IX2_ID_DELIMITER) !== -1) {
            const pair = id.split(IX2_ID_DELIMITER);
            const pageId = pair[0];
            // @ts-expect-error - TS2322 - Type 'string | undefined' is not assignable to type 'string'.
            nodeId = pair[1];
            // Short circuit query if we're on the wrong page
            if (pageId !== document.documentElement.getAttribute(WF_PAGE)) {
                return null;
            }
        }
        return `[data-w-id="${nodeId}"], [data-w-id^="${nodeId}_instance"]`;
    }
    return selector;
}
function getValidDocument(pageId) {
    if (pageId == null || pageId === document.documentElement.getAttribute(WF_PAGE)) {
        return document;
    }
    return null;
}
function queryDocument(baseSelector, descendantSelector) {
    return Array.prototype.slice.call(document.querySelectorAll(descendantSelector ? baseSelector + ' ' + descendantSelector : baseSelector));
}
function elementContains(parent, child) {
    return parent.contains(child);
}
function isSiblingNode(a, b) {
    return a !== b && a.parentNode === b.parentNode;
}
function getChildElements(// @ts-expect-error - TS2315 - Type 'NodeList' is not generic.
sourceElements) {
    const childElements = [];
    for(let i = 0, { length } = sourceElements || []; i < length; i++){
        const { children } = sourceElements[i];
        const { length: childCount } = children;
        if (!childCount) {
            continue;
        }
        for(let j = 0; j < childCount; j++){
            childElements.push(children[j]);
        }
    }
    return childElements;
}
function getSiblingElements(sourceElements = []) {
    const elements = [];
    const parentCache = [];
    for(let i = 0, { length } = sourceElements; i < length; i++){
        // @ts-expect-error - TS2339 - Property 'parentNode' does not exist on type 'undefined'.
        const { parentNode } = sourceElements[i];
        if (!parentNode || !parentNode.children || !parentNode.children.length) {
            continue;
        }
        if (parentCache.indexOf(parentNode) !== -1) {
            continue;
        }
        parentCache.push(parentNode);
        let el = parentNode.firstElementChild;
        while(el != null){
            // @ts-expect-error - TS2345 - Argument of type 'any' is not assignable to parameter of type 'never'.
            if (sourceElements.indexOf(el) === -1) {
                elements.push(el);
            }
            el = el.nextElementSibling;
        }
    }
    return elements;
}
const getClosestElement = Element.prototype.closest ? (element, selector)=>{
    if (!document.documentElement.contains(element)) {
        return null;
    }
    return element.closest(selector);
} : (element, selector)=>{
    if (!document.documentElement.contains(element)) {
        return null;
    }
    let el = element;
    do {
        // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'HTMLElement'. | TS7053 - Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'HTMLElement'.
        if (el[ELEMENT_MATCHES] && el[ELEMENT_MATCHES](selector)) {
            return el;
        }
        // @ts-expect-error - TS2322 - Type 'ParentNode | null' is not assignable to type 'HTMLElement'.
        el = el.parentNode;
    }while (el != null);
    return null;
};
function getRefType(ref) {
    if (ref != null && typeof ref == 'object') {
        return ref instanceof Element ? HTML_ELEMENT : PLAIN_OBJECT;
    }
    return null;
}

//# sourceMappingURL=data:application/json;base64,

}),
1970: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/* eslint-env browser */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    observeRequests: function() {
        return observeRequests;
    },
    startActionGroup: function() {
        return startActionGroup;
    },
    startEngine: function() {
        return startEngine;
    },
    stopActionGroup: function() {
        return stopActionGroup;
    },
    stopAllActionGroups: function() {
        return stopAllActionGroups;
    },
    stopEngine: function() {
        return stopEngine;
    }
});
const _find = /*#__PURE__*/ _interop_require_default(__webpack_require__(9777));
const _get = /*#__PURE__*/ _interop_require_default(__webpack_require__(4738));
const _size = /*#__PURE__*/ _interop_require_default(__webpack_require__(4659));
const _omitBy = /*#__PURE__*/ _interop_require_default(__webpack_require__(3452));
const _isEmpty = /*#__PURE__*/ _interop_require_default(__webpack_require__(6633));
const _mapValues = /*#__PURE__*/ _interop_require_default(__webpack_require__(3729));
const _forEach = /*#__PURE__*/ _interop_require_default(__webpack_require__(2397));
const _throttle = /*#__PURE__*/ _interop_require_default(__webpack_require__(5082));
const _sharedconstants = __webpack_require__(7087);
const _shared = __webpack_require__(9468);
const _IX2EngineActions = __webpack_require__(3946);
const _IX2BrowserApi = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(5012));
const _IX2VanillaEvents = /*#__PURE__*/ _interop_require_default(__webpack_require__(8955));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const QuickEffectsIdList = Object.keys(_sharedconstants.QuickEffectIds);
const isQuickEffect = (actionTypeId)=>QuickEffectsIdList.includes(actionTypeId);
const { COLON_DELIMITER, BOUNDARY_SELECTOR, HTML_ELEMENT, RENDER_GENERAL, W_MOD_IX } = _sharedconstants.IX2EngineConstants;
const { getAffectedElements, getElementId, getDestinationValues, observeStore, getInstanceId, renderHTMLElement, clearAllStyles, getMaxDurationItemIndex, getComputedStyle, getInstanceOrigin, reduceListToGroup, shouldNamespaceEventParameter, getNamespacedParameterId, shouldAllowMediaQuery, cleanupHTMLElement, clearObjectCache, stringifyTarget, mediaQueriesEqual, shallowEqual } = _shared.IX2VanillaUtils;
const { isPluginType, createPluginInstance, getPluginDuration } = _shared.IX2VanillaPlugins;
const ua = navigator.userAgent;
const IS_MOBILE_SAFARI = ua.match(/iPad/i) || ua.match(/iPhone/);
// Keep throttled events at ~80fps to reduce reflows while maintaining render accuracy
const THROTTLED_EVENT_WAIT = 12;
function observeRequests(store) {
    observeStore({
        store,
        select: ({ ixRequest })=>ixRequest.preview,
        onChange: handlePreviewRequest
    });
    observeStore({
        store,
        select: ({ ixRequest })=>ixRequest.playback,
        onChange: handlePlaybackRequest
    });
    observeStore({
        store,
        select: ({ ixRequest })=>ixRequest.stop,
        onChange: handleStopRequest
    });
    observeStore({
        store,
        select: ({ ixRequest })=>ixRequest.clear,
        onChange: handleClearRequest
    });
}
function observeMediaQueryChange(store) {
    observeStore({
        store,
        select: ({ ixSession })=>ixSession.mediaQueryKey,
        onChange: ()=>{
            stopEngine(store);
            clearAllStyles({
                store,
                elementApi: _IX2BrowserApi
            });
            startEngine({
                store,
                allowEvents: true
            });
            dispatchPageUpdateEvent();
        }
    });
}
function observeOneRenderTick(store, onTick) {
    const unsubscribe = observeStore({
        store,
        select: ({ ixSession })=>ixSession.tick,
        // @ts-expect-error - TS7006 - Parameter 'tick' implicitly has an 'any' type.
        onChange: (tick)=>{
            onTick(tick);
            unsubscribe();
        }
    });
}
function handlePreviewRequest({ rawData, defer }, store) {
    const start = ()=>{
        startEngine({
            store,
            rawData,
            allowEvents: true
        });
        dispatchPageUpdateEvent();
    };
    defer ? setTimeout(start, 0) : start();
}
function dispatchPageUpdateEvent() {
    document.dispatchEvent(new CustomEvent('IX2_PAGE_UPDATE'));
}
function handlePlaybackRequest(playback, store) {
    const { actionTypeId, actionListId, actionItemId, eventId, allowEvents, immediate, testManual, verbose = true } = playback;
    let { rawData } = playback;
    if (actionListId && actionItemId && rawData && immediate) {
        const actionList = rawData.actionLists[actionListId];
        if (actionList) {
            rawData = reduceListToGroup({
                actionList,
                actionItemId,
                rawData
            });
        }
    }
    startEngine({
        store,
        rawData,
        allowEvents,
        testManual
    });
    if (actionListId && actionTypeId === _sharedconstants.ActionTypeConsts.GENERAL_START_ACTION || isQuickEffect(actionTypeId)) {
        // @ts-expect-error - TS2345 - Argument of type '{ store: any; actionListId: any; }' is not assignable to parameter of type '{ store: any; eventId: any; eventTarget: any; eventStateKey: any; actionListId: any; }'.
        stopActionGroup({
            store,
            actionListId
        });
        renderInitialGroup({
            store,
            actionListId,
            eventId
        });
        // @ts-expect-error - TS2345 - Argument of type '{ store: any; eventId: any; actionListId: any; immediate: any; verbose: any; }' is not assignable to parameter of type '{ store: any; eventId: any; eventTarget: any; eventStateKey: any; actionListId: any; groupIndex?: number | undefined; immediate: any; verbose: any; }'.
        const started = startActionGroup({
            store,
            eventId,
            actionListId,
            immediate,
            verbose
        });
        if (verbose && started) {
            store.dispatch((0, _IX2EngineActions.actionListPlaybackChanged)({
                actionListId,
                isPlaying: !immediate
            }));
        }
    }
}
function handleStopRequest({ actionListId }, store) {
    if (actionListId) {
        // @ts-expect-error - TS2345 - Argument of type '{ store: any; actionListId: any; }' is not assignable to parameter of type '{ store: any; eventId: any; eventTarget: any; eventStateKey: any; actionListId: any; }'.
        stopActionGroup({
            store,
            actionListId
        });
    } else {
        stopAllActionGroups({
            store
        });
    }
    stopEngine(store);
}
function handleClearRequest(state, store) {
    stopEngine(store);
    clearAllStyles({
        store,
        elementApi: _IX2BrowserApi
    });
}
function startEngine({ store, rawData, allowEvents, testManual }) {
    const { ixSession } = store.getState();
    if (rawData) {
        store.dispatch((0, _IX2EngineActions.rawDataImported)(rawData));
    }
    if (!ixSession.active) {
        store.dispatch((0, _IX2EngineActions.sessionInitialized)({
            hasBoundaryNodes: Boolean(document.querySelector(BOUNDARY_SELECTOR)),
            reducedMotion: document.body.hasAttribute('data-wf-ix-vacation') && window.matchMedia('(prefers-reduced-motion)').matches
        }));
        if (allowEvents) {
            bindEvents(store);
            addDocumentClass();
            if (store.getState().ixSession.hasDefinedMediaQueries) {
                observeMediaQueryChange(store);
            }
        }
        store.dispatch((0, _IX2EngineActions.sessionStarted)());
        startRenderLoop(store, testManual);
    }
}
function addDocumentClass() {
    const { documentElement } = document;
    if (documentElement.className.indexOf(W_MOD_IX) === -1) {
        documentElement.className += ` ${W_MOD_IX}`;
    }
}
function startRenderLoop(store, testManual) {
    const handleFrame = (now)=>{
        const { ixSession, ixParameters } = store.getState();
        if (ixSession.active) {
            store.dispatch((0, _IX2EngineActions.animationFrameChanged)(now, ixParameters));
            if (testManual) {
                observeOneRenderTick(store, handleFrame);
            } else {
                requestAnimationFrame(handleFrame);
            }
        }
    };
    handleFrame(window.performance.now());
}
function stopEngine(store) {
    const { ixSession } = store.getState();
    if (ixSession.active) {
        const { eventListeners } = ixSession;
        eventListeners.forEach(clearEventListener);
        clearObjectCache();
        store.dispatch((0, _IX2EngineActions.sessionStopped)());
    }
}
// @ts-expect-error - TS7031 - Binding element 'target' implicitly has an 'any' type. | TS7031 - Binding element 'listenerParams' implicitly has an 'any' type.
function clearEventListener({ target, listenerParams }) {
    // eslint-disable-next-line prefer-spread
    target.removeEventListener.apply(target, listenerParams);
}
function createGroupInstances({ // @ts-expect-error - TS7031 - Binding element 'store' implicitly has an 'any' type.
store, // @ts-expect-error - TS7031 - Binding element 'eventStateKey' implicitly has an 'any' type.
eventStateKey, // @ts-expect-error - TS7031 - Binding element 'eventTarget' implicitly has an 'any' type.
eventTarget, // @ts-expect-error - TS7031 - Binding element 'eventId' implicitly has an 'any' type.
eventId, // @ts-expect-error - TS7031 - Binding element 'eventConfig' implicitly has an 'any' type.
eventConfig, // @ts-expect-error - TS7031 - Binding element 'actionListId' implicitly has an 'any' type.
actionListId, // @ts-expect-error - TS7031 - Binding element 'parameterGroup' implicitly has an 'any' type.
parameterGroup, // @ts-expect-error - TS7031 - Binding element 'smoothing' implicitly has an 'any' type.
smoothing, // @ts-expect-error - TS7031 - Binding element 'restingValue' implicitly has an 'any' type.
restingValue }) {
    const { ixData, ixSession } = store.getState();
    const { events } = ixData;
    const event = events[eventId];
    const { eventTypeId } = event;
    const targetCache = {};
    const instanceActionGroups = {};
    const instanceConfigs = [];
    const { continuousActionGroups } = parameterGroup;
    let { id: parameterId } = parameterGroup;
    if (shouldNamespaceEventParameter(eventTypeId, eventConfig)) {
        parameterId = getNamespacedParameterId(eventStateKey, parameterId);
    }
    // Limit affected elements when event target is within a boundary node
    const eventElementRoot = ixSession.hasBoundaryNodes && eventTarget ? _IX2BrowserApi.getClosestElement(eventTarget, BOUNDARY_SELECTOR) : null;
    // @ts-expect-error - TS7006 - Parameter 'actionGroup' implicitly has an 'any' type.
    continuousActionGroups.forEach((actionGroup)=>{
        const { keyframe, actionItems } = actionGroup;
        // @ts-expect-error - TS7006 - Parameter 'actionItem' implicitly has an 'any' type.
        actionItems.forEach((actionItem)=>{
            const { actionTypeId } = actionItem;
            const { target } = actionItem.config;
            if (!target) {
                return;
            }
            const elementRoot = target.boundaryMode ? eventElementRoot : null;
            const key = stringifyTarget(target) + COLON_DELIMITER + actionTypeId;
            instanceActionGroups[key] = appendActionItem(instanceActionGroups[key], keyframe, actionItem);
            if (!targetCache[key]) {
                targetCache[key] = true;
                const { config } = actionItem;
                getAffectedElements({
                    config,
                    event,
                    eventTarget,
                    elementRoot,
                    elementApi: _IX2BrowserApi
                }).forEach((element)=>{
                    instanceConfigs.push({
                        element,
                        key
                    });
                });
            }
        });
    });
    instanceConfigs.forEach(({ element, key })=>{
        const actionGroups = instanceActionGroups[key];
        const actionItem = (0, _get.default)(actionGroups, `[0].actionItems[0]`, {});
        const { actionTypeId } = actionItem;
        const shouldUsePlugin = // If it's targeted by class, don't query the element by pluginElementId
        actionTypeId === _sharedconstants.ActionTypeConsts.PLUGIN_RIVE ? (actionItem.config?.target?.selectorGuids || []).length === 0 : isPluginType(actionTypeId);
        const pluginInstance = shouldUsePlugin ? createPluginInstance(actionTypeId)?.(element, actionItem) : null;
        const destination = getDestinationValues({
            element,
            actionItem,
            elementApi: _IX2BrowserApi
        }, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-expect-error
        pluginInstance);
        createInstance({
            store,
            element,
            eventId,
            actionListId,
            actionItem,
            destination,
            continuous: true,
            parameterId,
            actionGroups,
            smoothing,
            restingValue,
            pluginInstance
        });
    });
}
function appendActionItem(actionGroups = [], keyframe, actionItem) {
    const newActionGroups = [
        ...actionGroups
    ];
    let groupIndex;
    newActionGroups.some((group, index)=>{
        // @ts-expect-error - TS2339 - Property 'keyframe' does not exist on type 'never'.
        if (group.keyframe === keyframe) {
            groupIndex = index;
            return true;
        }
        return false;
    });
    if (groupIndex == null) {
        groupIndex = newActionGroups.length;
        // @ts-expect-error - TS2345 - Argument of type '{ keyframe: any; actionItems: never[]; }' is not assignable to parameter of type 'never'.
        newActionGroups.push({
            keyframe,
            actionItems: []
        });
    }
    // @ts-expect-error - TS2339 - Property 'actionItems' does not exist on type 'never'.
    newActionGroups[groupIndex].actionItems.push(actionItem);
    return newActionGroups;
}
function bindEvents(store) {
    const { ixData } = store.getState();
    const { eventTypeMap } = ixData;
    updateViewportWidth(store);
    (0, _forEach.default)(eventTypeMap, (events, key)=>{
        // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ SLIDER_ACTIVE: { handler: (options: any, state: any) => any; types: string; }; SLIDER_INACTIVE: { handler: (options: any, state: any) => any; types: string; }; DROPDOWN_OPEN: { handler: (options: any, state: any) => any; types: string; }; ... 21 more ...; PAGE_START: { ...; }; }'.
        const logic = _IX2VanillaEvents.default[key];
        if (!logic) {
            console.warn(`IX2 event type not configured: ${key}`);
            return;
        }
        bindEventType({
            // @ts-expect-error - TS7031 - Binding element 'logic' implicitly has an 'any' type.
            logic,
            store,
            events
        });
    });
    const { ixSession } = store.getState();
    if (ixSession.eventListeners.length) {
        bindResizeEvents(store);
    }
}
const WINDOW_RESIZE_EVENTS = [
    'resize',
    'orientationchange'
];
function bindResizeEvents(store) {
    const handleResize = ()=>{
        updateViewportWidth(store);
    };
    WINDOW_RESIZE_EVENTS.forEach((type)=>{
        window.addEventListener(type, handleResize);
        store.dispatch((0, _IX2EngineActions.eventListenerAdded)(window, [
            type,
            handleResize
        ]));
    });
    handleResize();
}
function updateViewportWidth(store) {
    const { ixSession, ixData } = store.getState();
    const width = window.innerWidth;
    if (width !== ixSession.viewportWidth) {
        const { mediaQueries } = ixData;
        store.dispatch((0, _IX2EngineActions.viewportWidthChanged)({
            width,
            mediaQueries
        }));
    }
}
const mapFoundValues = (object, iteratee)=>(0, _omitBy.default)((0, _mapValues.default)(object, iteratee), _isEmpty.default);
const forEachEventTarget = (eventTargets, eventCallback)=>{
    (0, _forEach.default)(eventTargets, (elements, eventId)=>{
        // @ts-expect-error - TS7006 - Parameter 'element' implicitly has an 'any' type. | TS7006 - Parameter 'index' implicitly has an 'any' type.
        elements.forEach((element, index)=>{
            const eventStateKey = eventId + COLON_DELIMITER + index;
            eventCallback(element, eventId, eventStateKey);
        });
    });
};
const getAffectedForEvent = (event)=>{
    const config = {
        target: event.target,
        targets: event.targets
    };
    return getAffectedElements({
        config,
        elementApi: _IX2BrowserApi
    });
};
// @ts-expect-error - TS7031 - Binding element 'logic' implicitly has an 'any' type. | TS7031 - Binding element 'store' implicitly has an 'any' type. | TS7031 - Binding element 'events' implicitly has an 'any' type.
function bindEventType({ logic, store, events }) {
    injectBehaviorCSSFixes(events);
    const { types: eventTypes, handler: eventHandler } = logic;
    const { ixData } = store.getState();
    const { actionLists } = ixData;
    const eventTargets = mapFoundValues(events, getAffectedForEvent);
    if (!(0, _size.default)(eventTargets)) {
        return;
    }
    (0, _forEach.default)(eventTargets, (elements, key)=>{
        const event = events[key];
        const { action: eventAction, id: eventId, mediaQueries = ixData.mediaQueryKeys } = event;
        const { actionListId } = eventAction.config;
        if (!mediaQueriesEqual(mediaQueries, ixData.mediaQueryKeys)) {
            store.dispatch((0, _IX2EngineActions.mediaQueriesDefined)());
        }
        if (eventAction.actionTypeId === _sharedconstants.ActionTypeConsts.GENERAL_CONTINUOUS_ACTION) {
            const configs = Array.isArray(event.config) ? event.config : [
                event.config
            ];
            // @ts-expect-error - TS7006 - Parameter 'eventConfig' implicitly has an 'any' type.
            configs.forEach((eventConfig)=>{
                const { continuousParameterGroupId } = eventConfig;
                const paramGroups = (0, _get.default)(actionLists, `${actionListId}.continuousParameterGroups`, []);
                const parameterGroup = (0, _find.default)(paramGroups, ({ id })=>id === continuousParameterGroupId);
                const smoothing = (eventConfig.smoothing || 0) / 100;
                const restingValue = (eventConfig.restingState || 0) / 100;
                if (!parameterGroup) {
                    return;
                }
                elements.forEach((eventTarget, index)=>{
                    const eventStateKey = eventId + COLON_DELIMITER + index;
                    createGroupInstances({
                        store,
                        eventStateKey,
                        eventTarget,
                        eventId,
                        eventConfig,
                        actionListId,
                        parameterGroup,
                        smoothing,
                        restingValue
                    });
                });
            });
        }
        if (eventAction.actionTypeId === _sharedconstants.ActionTypeConsts.GENERAL_START_ACTION || isQuickEffect(eventAction.actionTypeId)) {
            renderInitialGroup({
                store,
                actionListId,
                eventId
            });
        }
    });
    const handleEvent = (nativeEvent)=>{
        const { ixSession } = store.getState();
        forEachEventTarget(eventTargets, (element, eventId, eventStateKey)=>{
            const event = events[eventId];
            const oldState = ixSession.eventState[eventStateKey];
            const { action: eventAction, mediaQueries = ixData.mediaQueryKeys } = event;
            // Bypass event handler if current media query is not listed in event config
            if (!shouldAllowMediaQuery(mediaQueries, ixSession.mediaQueryKey)) {
                return;
            }
            const handleEventWithConfig = (eventConfig = {})=>{
                const newState = eventHandler({
                    store,
                    element,
                    event,
                    eventConfig,
                    nativeEvent,
                    eventStateKey
                }, oldState);
                if (!shallowEqual(newState, oldState)) {
                    store.dispatch((0, _IX2EngineActions.eventStateChanged)(eventStateKey, newState));
                }
            };
            if (eventAction.actionTypeId === _sharedconstants.ActionTypeConsts.GENERAL_CONTINUOUS_ACTION) {
                const configs = Array.isArray(event.config) ? event.config : [
                    event.config
                ];
                configs.forEach(handleEventWithConfig);
            } else {
                handleEventWithConfig();
            }
        });
    };
    const handleEventThrottled = (0, _throttle.default)(handleEvent, THROTTLED_EVENT_WAIT);
    const addListeners = ({ target = document, // @ts-expect-error - TS7031 - Binding element 'types' implicitly has an 'any' type.
    types, // @ts-expect-error - TS7031 - Binding element 'shouldThrottle' implicitly has an 'any' type.
    throttle: shouldThrottle })=>{
        types.split(' ').filter(Boolean)// @ts-expect-error - TS7006 - Parameter 'type' implicitly has an 'any' type.
        .forEach((type)=>{
            const handlerFunc = shouldThrottle ? handleEventThrottled : handleEvent;
            target.addEventListener(type, handlerFunc);
            store.dispatch((0, _IX2EngineActions.eventListenerAdded)(target, [
                type,
                handlerFunc
            ]));
        });
    };
    if (Array.isArray(eventTypes)) {
        eventTypes.forEach(addListeners);
    } else if (typeof eventTypes === 'string') {
        addListeners(logic);
    }
}
/**
 * Injects CSS into the document to fix behavior issues across
 * different devices.
 */ function injectBehaviorCSSFixes(events) {
    if (!IS_MOBILE_SAFARI) {
        return;
    }
    const injectedSelectors = {};
    let cssText = '';
    for(const eventId in events){
        const { eventTypeId, target } = events[eventId];
        const selector = _IX2BrowserApi.getQuerySelector(target);
        // @ts-expect-error - TS2538 - Type 'null' cannot be used as an index type.
        if (injectedSelectors[selector]) {
            continue;
        }
        // add a "cursor: pointer" style rule to ensure that CLICK events get fired for IOS devices
        if (eventTypeId === _sharedconstants.EventTypeConsts.MOUSE_CLICK || eventTypeId === _sharedconstants.EventTypeConsts.MOUSE_SECOND_CLICK) {
            // @ts-expect-error - TS2538 - Type 'null' cannot be used as an index type.
            injectedSelectors[selector] = true;
            cssText += selector + '{' + 'cursor: pointer;' + 'touch-action: manipulation;' + '}';
        }
    }
    if (cssText) {
        const style = document.createElement('style');
        style.textContent = cssText;
        document.body.appendChild(style);
    }
}
function renderInitialGroup({ store, actionListId, eventId }) {
    const { ixData, ixSession } = store.getState();
    const { actionLists, events } = ixData;
    // @ts-expect-error - TS18048 - 'events' is possibly 'undefined'.
    const event = events[eventId];
    // @ts-expect-error - TS18048 - 'actionLists' is possibly 'undefined'.
    const actionList = actionLists[actionListId];
    // @ts-expect-error - Property 'useFirstGroupAsInitialState' does not exist on type 'ActionListType'.
    if (actionList && actionList.useFirstGroupAsInitialState) {
        const initialStateItems = (0, _get.default)(actionList, 'actionItemGroups[0].actionItems', []);
        // Bypass initial state render if current media query is not listed in event config
        const mediaQueries = (0, _get.default)(event, 'mediaQueries', ixData.mediaQueryKeys);
        if (!shouldAllowMediaQuery(mediaQueries, ixSession.mediaQueryKey)) {
            return;
        }
        initialStateItems.forEach((actionItem)=>{
            const { config: itemConfig, actionTypeId } = actionItem;
            const config = // When useEventTarget is explicitly true, use event target/targets to query elements
            // However, skip this condition when objectId is defined
            // @ts-expect-error - Property 'target' does not exist on type 'never'.
            itemConfig?.target?.useEventTarget === true && // @ts-expect-error - Property 'target' does not exist on type 'never'.
            itemConfig?.target?.objectId == null ? {
                target: event.target,
                targets: event.targets
            } : itemConfig;
            const itemElements = getAffectedElements({
                config,
                event,
                elementApi: _IX2BrowserApi
            });
            const shouldUsePlugin = isPluginType(actionTypeId);
            itemElements.forEach((element)=>{
                const pluginInstance = shouldUsePlugin ? createPluginInstance(actionTypeId)?.(element, actionItem) : null;
                createInstance({
                    destination: getDestinationValues({
                        element,
                        actionItem,
                        elementApi: _IX2BrowserApi
                    }, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                    // @ts-expect-error
                    pluginInstance),
                    immediate: true,
                    store,
                    element,
                    eventId,
                    actionItem,
                    actionListId,
                    pluginInstance
                });
            });
        });
    }
}
function stopAllActionGroups({ store }) {
    const { ixInstances } = store.getState();
    (0, _forEach.default)(ixInstances, (instance)=>{
        if (!instance.continuous) {
            const { actionListId, verbose } = instance;
            removeInstance(instance, store);
            if (verbose) {
                store.dispatch((0, _IX2EngineActions.actionListPlaybackChanged)({
                    actionListId,
                    isPlaying: false
                }));
            }
        }
    });
}
function stopActionGroup({ // @ts-expect-error - TS7031 - Binding element 'store' implicitly has an 'any' type.
store, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-expect-error
eventId, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-expect-error
eventTarget, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-expect-error
eventStateKey, // @ts-expect-error - TS7031 - Binding element 'actionListId' implicitly has an 'any' type.
actionListId }) {
    const { ixInstances, ixSession } = store.getState();
    // Check for element boundary before stopping engine instances
    const eventElementRoot = ixSession.hasBoundaryNodes && eventTarget ? _IX2BrowserApi.getClosestElement(eventTarget, BOUNDARY_SELECTOR) : null;
    (0, _forEach.default)(ixInstances, (instance)=>{
        const boundaryMode = (0, _get.default)(instance, 'actionItem.config.target.boundaryMode');
        // Validate event key if eventStateKey was provided, otherwise default to true
        const validEventKey = eventStateKey ? instance.eventStateKey === eventStateKey : true;
        // Remove engine instances that match the required ids
        if (instance.actionListId === actionListId && instance.eventId === eventId && validEventKey) {
            // Avoid removal when root boundary does not contain instance element
            if (eventElementRoot && boundaryMode && !_IX2BrowserApi.elementContains(eventElementRoot, instance.element)) {
                return;
            }
            removeInstance(instance, store);
            if (instance.verbose) {
                store.dispatch((0, _IX2EngineActions.actionListPlaybackChanged)({
                    actionListId,
                    isPlaying: false
                }));
            }
        }
    });
}
function startActionGroup({ // @ts-expect-error - TS7031 - Binding element 'store' implicitly has an 'any' type.
store, // @ts-expect-error - TS7031 - Binding element 'eventId' implicitly has an 'any' type.
eventId, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-expect-error
eventTarget, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-expect-error
eventStateKey, // @ts-expect-error - TS7031 - Binding element 'actionListId' implicitly has an 'any' type.
actionListId, groupIndex = 0, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-expect-error
immediate, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-expect-error
verbose }) {
    const { ixData, ixSession } = store.getState();
    const { events } = ixData;
    const event = events[eventId] || {};
    const { mediaQueries = ixData.mediaQueryKeys } = event;
    const actionList = (0, _get.default)(ixData, `actionLists.${actionListId}`, {});
    const { actionItemGroups, useFirstGroupAsInitialState } = actionList;
    // Abort playback if no action groups
    if (!actionItemGroups || !actionItemGroups.length) {
        return false;
    }
    // Reset to first group when event loop is configured
    if (groupIndex >= actionItemGroups.length && (0, _get.default)(event, 'config.loop')) {
        groupIndex = 0;
    }
    // Skip initial state group during action list playback, as it should already be applied
    if (groupIndex === 0 && useFirstGroupAsInitialState) {
        groupIndex++;
    }
    // Identify first animated group and apply the initial QuickEffect delay
    const isFirstGroup = groupIndex === 0 || groupIndex === 1 && useFirstGroupAsInitialState;
    const instanceDelay = isFirstGroup && isQuickEffect(event.action?.actionTypeId) ? event.config.delay : undefined;
    // Abort playback if no action items exist at group index
    const actionItems = (0, _get.default)(actionItemGroups, [
        groupIndex,
        'actionItems'
    ], []);
    if (!actionItems.length) {
        return false;
    }
    // Abort playback if current media query is not listed in event config
    if (!shouldAllowMediaQuery(mediaQueries, ixSession.mediaQueryKey)) {
        return false;
    }
    // Limit affected elements when event target is within a boundary node
    const eventElementRoot = ixSession.hasBoundaryNodes && eventTarget ? _IX2BrowserApi.getClosestElement(eventTarget, BOUNDARY_SELECTOR) : null;
    const carrierIndex = getMaxDurationItemIndex(actionItems);
    let groupStartResult = false;
    // @ts-expect-error - TS7006 - Parameter 'actionItem' implicitly has an 'any' type. | TS7006 - Parameter 'actionIndex' implicitly has an 'any' type.
    actionItems.forEach((actionItem, actionIndex)=>{
        const { config, actionTypeId } = actionItem;
        const shouldUsePlugin = isPluginType(actionTypeId);
        const { target } = config;
        if (!target) {
            return;
        }
        const elementRoot = target.boundaryMode ? eventElementRoot : null;
        const elements = getAffectedElements({
            config,
            event,
            eventTarget,
            elementRoot,
            elementApi: _IX2BrowserApi
        });
        elements.forEach((element, elementIndex)=>{
            const pluginInstance = shouldUsePlugin ? createPluginInstance(actionTypeId)?.(element, actionItem) : null;
            const pluginDuration = shouldUsePlugin ? getPluginDuration(actionTypeId)(element, actionItem) : null;
            groupStartResult = true;
            const isCarrier = carrierIndex === actionIndex && elementIndex === 0;
            const computedStyle = getComputedStyle({
                element,
                actionItem
            });
            const destination = getDestinationValues({
                element,
                actionItem,
                elementApi: _IX2BrowserApi
            }, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-expect-error
            pluginInstance);
            createInstance({
                store,
                element,
                actionItem,
                eventId,
                eventTarget,
                eventStateKey,
                actionListId,
                groupIndex,
                isCarrier,
                computedStyle,
                destination,
                immediate,
                verbose,
                pluginInstance,
                pluginDuration,
                instanceDelay
            });
        });
    });
    return groupStartResult;
}
// @ts-expect-error - TS7006 - Parameter 'options' implicitly has an 'any' type.
function createInstance(options) {
    const { store, computedStyle, ...rest } = options;
    const { element, actionItem, immediate, pluginInstance, continuous, restingValue, eventId } = rest;
    const autoStart = !continuous;
    const instanceId = getInstanceId();
    const { ixElements, ixSession, ixData } = store.getState();
    const elementId = getElementId(ixElements, element);
    const { refState } = ixElements[elementId] || {};
    const refType = _IX2BrowserApi.getRefType(element);
    const skipMotion = // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ readonly TRANSFORM_MOVE: true; readonly TRANSFORM_SCALE: true; readonly TRANSFORM_ROTATE: true; readonly TRANSFORM_SKEW: true; readonly STYLE_SIZE: true; readonly STYLE_FILTER: true; readonly STYLE_FONT_VARIATION: true; }'.
    ixSession.reducedMotion && _sharedconstants.ReducedMotionTypes[actionItem.actionTypeId];
    let skipToValue;
    if (skipMotion && continuous) {
        switch(ixData.events[eventId]?.eventTypeId){
            case _sharedconstants.EventTypeConsts.MOUSE_MOVE:
            case _sharedconstants.EventTypeConsts.MOUSE_MOVE_IN_VIEWPORT:
                skipToValue = restingValue;
                break;
            default:
                skipToValue = 0.5;
                break;
        }
    }
    const origin = getInstanceOrigin(element, refState, computedStyle, actionItem, _IX2BrowserApi, // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-expect-error
    pluginInstance);
    store.dispatch((0, _IX2EngineActions.instanceAdded)({
        instanceId,
        elementId,
        origin,
        refType,
        skipMotion,
        skipToValue,
        ...rest
    }));
    dispatchCustomEvent(document.body, 'ix2-animation-started', instanceId);
    if (immediate) {
        renderImmediateInstance(store, instanceId);
        return;
    }
    observeStore({
        store,
        // @ts-expect-error - TS7031 - Binding element 'ixInstances' implicitly has an 'any' type.
        select: ({ ixInstances })=>ixInstances[instanceId],
        onChange: handleInstanceChange
    });
    if (autoStart) {
        store.dispatch((0, _IX2EngineActions.instanceStarted)(instanceId, ixSession.tick));
    }
}
function removeInstance(instance, store) {
    dispatchCustomEvent(document.body, 'ix2-animation-stopping', {
        instanceId: instance.id,
        state: store.getState()
    });
    const { elementId, actionItem } = instance;
    const { ixElements } = store.getState();
    const { ref, refType } = ixElements[elementId] || {};
    if (refType === HTML_ELEMENT) {
        cleanupHTMLElement(ref, actionItem, _IX2BrowserApi);
    }
    store.dispatch((0, _IX2EngineActions.instanceRemoved)(instance.id));
}
function dispatchCustomEvent(element, eventName, detail) {
    const event = document.createEvent('CustomEvent');
    event.initCustomEvent(eventName, true, true, detail);
    // @ts-expect-error - TS18047 - 'element' is possibly 'null'.
    element.dispatchEvent(event);
}
function renderImmediateInstance(store, instanceId) {
    const { ixParameters } = store.getState();
    store.dispatch((0, _IX2EngineActions.instanceStarted)(instanceId, 0));
    store.dispatch((0, _IX2EngineActions.animationFrameChanged)(performance.now(), ixParameters));
    const { ixInstances } = store.getState();
    handleInstanceChange(ixInstances[instanceId], store);
}
function handleInstanceChange(instance, store) {
    const { active, continuous, complete, elementId, actionItem, actionTypeId, renderType, current, groupIndex, eventId, eventTarget, eventStateKey, actionListId, isCarrier, styleProp, verbose, pluginInstance } = instance;
    // Bypass render if current media query is not listed in event config
    const { ixData, ixSession } = store.getState();
    const { events } = ixData;
    const event = events && events[eventId] ? events[eventId] : {};
    // @ts-expect-error - TS2339 -  Property 'mediaQueries' does not exist on type '{} | undefined'.
    const { mediaQueries = ixData.mediaQueryKeys } = event;
    if (!shouldAllowMediaQuery(mediaQueries, ixSession.mediaQueryKey)) {
        return;
    }
    if (continuous || active || complete) {
        if (current || renderType === RENDER_GENERAL && complete) {
            // Render current values to ref state and grab latest
            store.dispatch((0, _IX2EngineActions.elementStateChanged)(elementId, actionTypeId, current, actionItem));
            const { ixElements } = store.getState();
            const { ref, refType, refState } = ixElements[elementId] || {};
            const actionState = refState && refState[actionTypeId];
            // Render HTML and plugin elements
            if (refType === HTML_ELEMENT || isPluginType(actionTypeId)) {
                renderHTMLElement(ref, refState, actionState, eventId, actionItem, styleProp, _IX2BrowserApi, renderType, pluginInstance);
            }
        }
        if (complete) {
            if (isCarrier) {
                // @ts-expect-error - TS2345 - Argument of type '{ store: any; eventId: any; eventTarget: any; eventStateKey: any; actionListId: any; groupIndex: any; verbose: any; }' is not assignable to parameter of type '{ store: any; eventId: any; eventTarget: any; eventStateKey: any; actionListId: any; groupIndex?: number | undefined; immediate: any; verbose: any; }'.
                const started = startActionGroup({
                    store,
                    eventId,
                    eventTarget,
                    eventStateKey,
                    actionListId,
                    groupIndex: groupIndex + 1,
                    verbose
                });
                if (verbose && !started) {
                    store.dispatch((0, _IX2EngineActions.actionListPlaybackChanged)({
                        actionListId,
                        isPlaying: false
                    }));
                }
            }
            removeInstance(instance, store);
        }
    }
}

//# sourceMappingURL=data:application/json;base64,

}),
8955: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/* eslint-env browser */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
const _flow = /*#__PURE__*/ _interop_require_default(__webpack_require__(5801));
const _get = /*#__PURE__*/ _interop_require_default(__webpack_require__(4738));
const _clamp = /*#__PURE__*/ _interop_require_default(__webpack_require__(3789));
const _sharedconstants = __webpack_require__(7087);
const _IX2VanillaEngine = __webpack_require__(1970);
const _IX2EngineActions = __webpack_require__(3946);
const _shared = __webpack_require__(9468);
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const { MOUSE_CLICK, MOUSE_SECOND_CLICK, MOUSE_DOWN, MOUSE_UP, MOUSE_OVER, MOUSE_OUT, DROPDOWN_CLOSE, DROPDOWN_OPEN, SLIDER_ACTIVE, SLIDER_INACTIVE, TAB_ACTIVE, TAB_INACTIVE, NAVBAR_CLOSE, NAVBAR_OPEN, MOUSE_MOVE, PAGE_SCROLL_DOWN, SCROLL_INTO_VIEW, SCROLL_OUT_OF_VIEW, PAGE_SCROLL_UP, SCROLLING_IN_VIEW, PAGE_FINISH, ECOMMERCE_CART_CLOSE, ECOMMERCE_CART_OPEN, PAGE_START, PAGE_SCROLL } = _sharedconstants.EventTypeConsts;
const COMPONENT_ACTIVE = 'COMPONENT_ACTIVE';
const COMPONENT_INACTIVE = 'COMPONENT_INACTIVE';
const { COLON_DELIMITER } = _sharedconstants.IX2EngineConstants;
const { getNamespacedParameterId } = _shared.IX2VanillaUtils;
const composableFilter = (predicate)=>(options)=>{
        if (typeof options === 'object' && predicate(options)) {
            return true;
        }
        return options;
    };
const isElement = composableFilter(({ element, nativeEvent })=>{
    return element === nativeEvent.target;
});
const containsElement = composableFilter(({ element, nativeEvent })=>{
    return element.contains(nativeEvent.target);
});
const isOrContainsElement = (0, _flow.default)([
    isElement,
    containsElement
]);
const getAutoStopEvent = (store, autoStopEventId)=>{
    if (autoStopEventId) {
        const { ixData } = store.getState();
        const { events } = ixData;
        const eventToStop = events[autoStopEventId];
        // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ readonly PAGE_START: "PAGE_START"; readonly PAGE_FINISH: "PAGE_FINISH"; }'.
        if (eventToStop && !AUTO_STOP_DISABLED_EVENTS[eventToStop.eventTypeId]) {
            return eventToStop;
        }
    }
    return null;
};
// @ts-expect-error - TS7031 - Binding element 'store' implicitly has an 'any' type. | TS7031 - Binding element 'event' implicitly has an 'any' type.
const hasAutoStopEvent = ({ store, event })=>{
    const { action: eventAction } = event;
    const { autoStopEventId } = eventAction.config;
    return Boolean(getAutoStopEvent(store, autoStopEventId));
};
// @ts-expect-error - TS7031 - Binding element 'store' implicitly has an 'any' type. | TS7031 - Binding element 'event' implicitly has an 'any' type. | TS7031 - Binding element 'element' implicitly has an 'any' type. | TS7031 - Binding element 'eventStateKey' implicitly has an 'any' type. | TS7006 - Parameter 'state' implicitly has an 'any' type.
const actionGroupCreator = ({ store, event, element, eventStateKey }, state)=>{
    const { action: eventAction, id: eventId } = event;
    const { actionListId, autoStopEventId } = eventAction.config;
    const eventToStop = getAutoStopEvent(store, autoStopEventId);
    if (eventToStop) {
        (0, _IX2VanillaEngine.stopActionGroup)({
            store,
            eventId: autoStopEventId,
            eventTarget: element,
            eventStateKey: autoStopEventId + COLON_DELIMITER + eventStateKey.split(COLON_DELIMITER)[1],
            actionListId: (0, _get.default)(eventToStop, 'action.config.actionListId')
        });
    }
    (0, _IX2VanillaEngine.stopActionGroup)({
        store,
        eventId,
        eventTarget: element,
        eventStateKey,
        actionListId
    });
    // @ts-expect-error - TS2345 - Argument of type '{ store: any; eventId: any; eventTarget: any; eventStateKey: any; actionListId: any; }' is not assignable to parameter of type '{ store: any; eventId: any; eventTarget: any; eventStateKey: any; actionListId: any; groupIndex?: number | undefined; immediate: any; verbose: any; }'.
    (0, _IX2VanillaEngine.startActionGroup)({
        store,
        eventId,
        eventTarget: element,
        eventStateKey,
        actionListId
    });
    return state;
};
// @ts-expect-error - TS7006 - Parameter 'filter' implicitly has an 'any' type. | TS7006 - Parameter 'handler' implicitly has an 'any' type.
const withFilter = (filter, handler)=>(options, state)=>filter(options, state) === true ? handler(options, state) : state;
const baseActionGroupOptions = {
    handler: withFilter(isOrContainsElement, actionGroupCreator)
};
const baseActivityActionGroupOptions = {
    ...baseActionGroupOptions,
    types: [
        COMPONENT_ACTIVE,
        COMPONENT_INACTIVE
    ].join(' ')
};
const SCROLL_EVENT_TYPES = [
    {
        target: window,
        types: 'resize orientationchange',
        throttle: true
    },
    {
        target: document,
        types: 'scroll wheel readystatechange IX2_PAGE_UPDATE',
        throttle: true
    }
];
const MOUSE_OVER_OUT_TYPES = 'mouseover mouseout';
const baseScrollActionGroupOptions = {
    types: SCROLL_EVENT_TYPES
};
const AUTO_STOP_DISABLED_EVENTS = {
    PAGE_START,
    PAGE_FINISH
};
const getDocumentState = (()=>{
    const supportOffset = window.pageXOffset !== undefined;
    const isCSS1Compat = document.compatMode === 'CSS1Compat';
    const rootElement = isCSS1Compat ? document.documentElement : document.body;
    return ()=>({
            scrollLeft: supportOffset ? window.pageXOffset : rootElement.scrollLeft,
            scrollTop: supportOffset ? window.pageYOffset : rootElement.scrollTop,
            // required to remove elasticity in Safari scrolling.
            stiffScrollTop: (0, _clamp.default)(supportOffset ? window.pageYOffset : rootElement.scrollTop, 0, rootElement.scrollHeight - window.innerHeight),
            scrollWidth: rootElement.scrollWidth,
            scrollHeight: rootElement.scrollHeight,
            clientWidth: rootElement.clientWidth,
            clientHeight: rootElement.clientHeight,
            innerWidth: window.innerWidth,
            innerHeight: window.innerHeight
        });
})();
const areBoxesIntersecting = (a, b)=>!(a.left > b.right || a.right < b.left || a.top > b.bottom || a.bottom < b.top);
// @ts-expect-error - TS7031 - Binding element 'element' implicitly has an 'any' type. | TS7031 - Binding element 'nativeEvent' implicitly has an 'any' type.
const isElementHovered = ({ element, nativeEvent })=>{
    const { type, target, relatedTarget } = nativeEvent;
    const containsTarget = element.contains(target);
    if (type === 'mouseover' && containsTarget) {
        return true;
    }
    const containsRelated = element.contains(relatedTarget);
    if (type === 'mouseout' && containsTarget && containsRelated) {
        return true;
    }
    return false;
};
const isElementVisible = (options)=>{
    const { element, event: { config } } = options;
    const { clientWidth, clientHeight } = getDocumentState();
    const scrollOffsetValue = config.scrollOffsetValue;
    const scrollOffsetUnit = config.scrollOffsetUnit;
    const isPX = scrollOffsetUnit === 'PX';
    const offsetPadding = isPX ? scrollOffsetValue : clientHeight * (scrollOffsetValue || 0) / 100;
    return areBoxesIntersecting(element.getBoundingClientRect(), {
        left: 0,
        top: offsetPadding,
        right: clientWidth,
        bottom: clientHeight - offsetPadding
    });
};
const whenComponentActiveChange = // @ts-expect-error - TS7006 - Parameter 'handler' implicitly has an 'any' type.
(handler)=>(options, oldState)=>{
        const { type } = options.nativeEvent;
        // prettier-ignore
        const isActive = [
            COMPONENT_ACTIVE,
            COMPONENT_INACTIVE
        ].indexOf(type) !== -1 ? type === COMPONENT_ACTIVE : oldState.isActive;
        const newState = {
            ...oldState,
            isActive
        };
        if (!oldState || newState.isActive !== oldState.isActive) {
            return handler(options, newState) || newState;
        }
        return newState;
    };
const whenElementHoverChange = (handler)=>(options, oldState)=>{
        const newState = {
            elementHovered: isElementHovered(options)
        };
        if (oldState ? newState.elementHovered !== oldState.elementHovered : newState.elementHovered) {
            // @ts-expect-error - TS1345 - An expression of type 'void' cannot be tested for truthiness.
            return handler(options, newState) || newState;
        }
        return newState;
    };
const whenElementVisibiltyChange = (handler)=>(options, oldState)=>{
        const newState = {
            ...oldState,
            elementVisible: isElementVisible(options)
        };
        if (oldState ? newState.elementVisible !== oldState.elementVisible : newState.elementVisible) {
            return handler(options, newState) || newState;
        }
        return newState;
    };
const whenScrollDirectionChange = // @ts-expect-error - TS7006 - Parameter 'handler' implicitly has an 'any' type.
(handler)=>(options, oldState = {})=>{
        const { stiffScrollTop: scrollTop, scrollHeight, innerHeight } = getDocumentState();
        const { event: { config, eventTypeId } } = options;
        const { scrollOffsetValue, scrollOffsetUnit } = config;
        const isPX = scrollOffsetUnit === 'PX';
        const scrollHeightBounds = scrollHeight - innerHeight;
        // percent top since innerHeight may change for mobile devices which also changes the scrollTop value.
        const percentTop = Number((scrollTop / scrollHeightBounds).toFixed(2));
        // no state change
        // @ts-expect-error - TS2339 - Property 'percentTop' does not exist on type '{}'.
        if (oldState && oldState.percentTop === percentTop) {
            return oldState;
        }
        const scrollTopPadding = (isPX ? scrollOffsetValue : innerHeight * (scrollOffsetValue || 0) / 100) / scrollHeightBounds;
        let scrollingDown;
        let scrollDirectionChanged;
        let anchorTop = 0;
        if (oldState) {
            // @ts-expect-error - TS2339 - Property 'percentTop' does not exist on type '{}'.
            scrollingDown = percentTop > oldState.percentTop;
            // @ts-expect-error - TS2339 - Property 'scrollingDown' does not exist on type '{}'.
            scrollDirectionChanged = oldState.scrollingDown !== scrollingDown;
            // @ts-expect-error - TS2339 - Property 'anchorTop' does not exist on type '{}'.
            anchorTop = scrollDirectionChanged ? percentTop : oldState.anchorTop;
        }
        const inBounds = eventTypeId === PAGE_SCROLL_DOWN ? percentTop >= anchorTop + scrollTopPadding : percentTop <= anchorTop - scrollTopPadding;
        const newState = {
            ...oldState,
            percentTop,
            inBounds,
            anchorTop,
            scrollingDown
        };
        if (oldState && inBounds && // @ts-expect-error - TS2339 - Property 'inBounds' does not exist on type '{}'.
        (scrollDirectionChanged || newState.inBounds !== oldState.inBounds)) {
            return handler(options, newState) || newState;
        }
        return newState;
    };
const pointIntersects = (point, rect)=>point.left > rect.left && point.left < rect.right && point.top > rect.top && point.top < rect.bottom;
const whenPageLoadFinish = (handler)=>(options, oldState)=>{
        const newState = {
            finished: document.readyState === 'complete'
        };
        if (newState.finished && !(oldState && oldState.finshed)) {
            // @ts-expect-error - TS2554 - Expected 2 arguments, but got 1.
            handler(options);
        }
        return newState;
    };
const whenPageLoadStart = (handler)=>(options, oldState)=>{
        const newState = {
            started: true
        };
        if (!oldState) {
            // @ts-expect-error - TS2554 - Expected 2 arguments, but got 1.
            handler(options);
        }
        return newState;
    };
const whenClickCountChange = (handler)=>(options, oldState = {
        clickCount: 0
    })=>{
        const newState = {
            clickCount: oldState.clickCount % 2 + 1
        };
        if (newState.clickCount !== oldState.clickCount) {
            // @ts-expect-error - TS1345 - An expression of type 'void' cannot be tested for truthiness.
            return handler(options, newState) || newState;
        }
        return newState;
    };
const getComponentActiveOptions = (allowNestedChildrenEvents = true)=>({
        ...baseActivityActionGroupOptions,
        handler: withFilter(allowNestedChildrenEvents ? isOrContainsElement : isElement, // @ts-expect-error - TS7006 - Parameter 'options' implicitly has an 'any' type. | TS7006 - Parameter 'state' implicitly has an 'any' type.
        whenComponentActiveChange((options, state)=>{
            return state.isActive ? baseActionGroupOptions.handler(options, state) : state;
        }))
    });
const getComponentInactiveOptions = (allowNestedChildrenEvents = true)=>({
        ...baseActivityActionGroupOptions,
        handler: withFilter(allowNestedChildrenEvents ? isOrContainsElement : isElement, // @ts-expect-error - TS7006 - Parameter 'options' implicitly has an 'any' type. | TS7006 - Parameter 'state' implicitly has an 'any' type.
        whenComponentActiveChange((options, state)=>{
            return !state.isActive ? baseActionGroupOptions.handler(options, state) : state;
        }))
    });
const scrollIntoOutOfViewOptions = {
    ...baseScrollActionGroupOptions,
    handler: whenElementVisibiltyChange((options, state)=>{
        const { elementVisible } = state;
        const { event, store } = options;
        const { ixData } = store.getState();
        const { events } = ixData;
        // trigger the handler only once if only one of SCROLL_INTO or SCROLL_OUT_OF event types
        // are registered.
        if (!events[event.action.config.autoStopEventId] && state.triggered) {
            return state;
        }
        if (event.eventTypeId === SCROLL_INTO_VIEW === elementVisible) {
            // @ts-expect-error - TS2554 - Expected 2 arguments, but got 1.
            actionGroupCreator(options);
            return {
                ...state,
                triggered: true
            };
        } else {
            return state;
        }
    })
};
const MOUSE_OUT_ROUND_THRESHOLD = 0.05;
const _default = {
    [SLIDER_ACTIVE]: getComponentActiveOptions(),
    [SLIDER_INACTIVE]: getComponentInactiveOptions(),
    [DROPDOWN_OPEN]: getComponentActiveOptions(),
    [DROPDOWN_CLOSE]: getComponentInactiveOptions(),
    // navbar elements may contain nested components in the menu. To prevent activity misfires, only listed for activity
    // events where the target is the navbar element, and ignore children that dispatch activitiy events.
    [NAVBAR_OPEN]: getComponentActiveOptions(false),
    [NAVBAR_CLOSE]: getComponentInactiveOptions(false),
    [TAB_ACTIVE]: getComponentActiveOptions(),
    [TAB_INACTIVE]: getComponentInactiveOptions(),
    [ECOMMERCE_CART_OPEN]: {
        types: 'ecommerce-cart-open',
        handler: withFilter(isOrContainsElement, actionGroupCreator)
    },
    [ECOMMERCE_CART_CLOSE]: {
        types: 'ecommerce-cart-close',
        handler: withFilter(isOrContainsElement, actionGroupCreator)
    },
    [MOUSE_CLICK]: {
        types: 'click',
        handler: withFilter(isOrContainsElement, whenClickCountChange((options, { clickCount })=>{
            if (hasAutoStopEvent(options)) {
                // @ts-expect-error - TS2554 - Expected 2 arguments, but got 1.
                clickCount === 1 && actionGroupCreator(options);
            } else {
                // @ts-expect-error - TS2554 - Expected 2 arguments, but got 1.
                actionGroupCreator(options);
            }
        }))
    },
    [MOUSE_SECOND_CLICK]: {
        types: 'click',
        handler: withFilter(isOrContainsElement, whenClickCountChange((options, { clickCount })=>{
            if (clickCount === 2) {
                // @ts-expect-error - TS2554 - Expected 2 arguments, but got 1.
                actionGroupCreator(options);
            }
        }))
    },
    [MOUSE_DOWN]: {
        ...baseActionGroupOptions,
        types: 'mousedown'
    },
    [MOUSE_UP]: {
        ...baseActionGroupOptions,
        types: 'mouseup'
    },
    [MOUSE_OVER]: {
        types: MOUSE_OVER_OUT_TYPES,
        handler: withFilter(isOrContainsElement, whenElementHoverChange((options, state)=>{
            if (state.elementHovered) {
                // @ts-expect-error - TS2554 - Expected 2 arguments, but got 1.
                actionGroupCreator(options);
            }
        }))
    },
    [MOUSE_OUT]: {
        types: MOUSE_OVER_OUT_TYPES,
        handler: withFilter(isOrContainsElement, whenElementHoverChange((options, state)=>{
            if (!state.elementHovered) {
                // @ts-expect-error - TS2554 - Expected 2 arguments, but got 1.
                actionGroupCreator(options);
            }
        }))
    },
    [MOUSE_MOVE]: {
        types: 'mousemove mouseout scroll',
        handler: (// eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-expect-error
        { store, element, eventConfig, nativeEvent, eventStateKey }, state = {
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0
        })=>{
            const { basedOn, selectedAxis, continuousParameterGroupId, reverse, restingState = 0 } = eventConfig;
            const { clientX = state.clientX, clientY = state.clientY, pageX = state.pageX, pageY = state.pageY } = nativeEvent;
            const isXAxis = selectedAxis === 'X_AXIS';
            const isMouseOut = nativeEvent.type === 'mouseout';
            let value = restingState / 100;
            let namespacedParameterId = continuousParameterGroupId;
            let elementHovered = false;
            switch(basedOn){
                case _sharedconstants.EventBasedOn.VIEWPORT:
                    {
                        value = isXAxis ? Math.min(clientX, window.innerWidth) / window.innerWidth : Math.min(clientY, window.innerHeight) / window.innerHeight;
                        break;
                    }
                // @ts-expect-error - TS2339 - Property 'PAGE' does not exist on type '{ readonly ELEMENT: "ELEMENT"; readonly VIEWPORT: "VIEWPORT"; }'.
                case _sharedconstants.EventBasedOn.PAGE:
                    {
                        const { scrollLeft, scrollTop, scrollWidth, scrollHeight } = getDocumentState();
                        value = isXAxis ? Math.min(scrollLeft + pageX, scrollWidth) / scrollWidth : Math.min(scrollTop + pageY, scrollHeight) / scrollHeight;
                        break;
                    }
                case _sharedconstants.EventBasedOn.ELEMENT:
                default:
                    {
                        namespacedParameterId = getNamespacedParameterId(eventStateKey, continuousParameterGroupId);
                        const isMouseEvent = nativeEvent.type.indexOf('mouse') === 0;
                        // Use isOrContainsElement for mouse events since they are fired from the target
                        if (isMouseEvent && isOrContainsElement({
                            element,
                            nativeEvent
                        }) !== true) {
                            break;
                        }
                        const rect = element.getBoundingClientRect();
                        const { left, top, width, height } = rect;
                        // Otherwise we'll need to calculate the mouse position from the previous handler state
                        // against the target element's rect
                        if (!isMouseEvent && !pointIntersects({
                            left: clientX,
                            top: clientY
                        }, rect)) {
                            break;
                        }
                        elementHovered = true;
                        value = isXAxis ? (clientX - left) / width : (clientY - top) / height;
                        break;
                    }
            }
            // cover case where the event is a mouse out, but the value is not quite at 100%
            if (isMouseOut && (value > 1 - MOUSE_OUT_ROUND_THRESHOLD || value < MOUSE_OUT_ROUND_THRESHOLD)) {
                value = Math.round(value);
            }
            // Only update based on element if the mouse is moving over or has just left the element
            if (basedOn !== _sharedconstants.EventBasedOn.ELEMENT || elementHovered || // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-expect-error
            elementHovered !== state.elementHovered) {
                value = reverse ? 1 - value : value;
                store.dispatch((0, _IX2EngineActions.parameterChanged)(namespacedParameterId, value));
            }
            return {
                elementHovered,
                clientX,
                clientY,
                pageX,
                pageY
            };
        }
    },
    [PAGE_SCROLL]: {
        types: SCROLL_EVENT_TYPES,
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-expect-error
        handler: ({ store, eventConfig })=>{
            const { continuousParameterGroupId, reverse } = eventConfig;
            const { scrollTop, scrollHeight, clientHeight } = getDocumentState();
            let value = scrollTop / (scrollHeight - clientHeight);
            value = reverse ? 1 - value : value;
            store.dispatch((0, _IX2EngineActions.parameterChanged)(continuousParameterGroupId, value));
        }
    },
    [SCROLLING_IN_VIEW]: {
        types: SCROLL_EVENT_TYPES,
        handler: (// eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-expect-error
        { element, store, eventConfig, eventStateKey }, state = {
            scrollPercent: 0
        })=>{
            const { scrollLeft, scrollTop, scrollWidth, scrollHeight, clientHeight: visibleHeight } = getDocumentState();
            const { basedOn, selectedAxis, continuousParameterGroupId, startsEntering, startsExiting, addEndOffset, addStartOffset, addOffsetValue = 0, endOffsetValue = 0 } = eventConfig;
            const isXAxis = selectedAxis === 'X_AXIS';
            if (basedOn === _sharedconstants.EventBasedOn.VIEWPORT) {
                const value = isXAxis ? scrollLeft / scrollWidth : scrollTop / scrollHeight;
                if (value !== state.scrollPercent) {
                    store.dispatch((0, _IX2EngineActions.parameterChanged)(continuousParameterGroupId, value));
                }
                return {
                    scrollPercent: value
                };
            } else {
                const namespacedParameterId = getNamespacedParameterId(eventStateKey, continuousParameterGroupId);
                const elementRect = element.getBoundingClientRect();
                let offsetStartPerc = (addStartOffset ? addOffsetValue : 0) / 100;
                let offsetEndPerc = (addEndOffset ? endOffsetValue : 0) / 100;
                // flip the offset percentages depending on start / exit type
                offsetStartPerc = startsEntering ? offsetStartPerc : 1 - offsetStartPerc;
                offsetEndPerc = startsExiting ? offsetEndPerc : 1 - offsetEndPerc;
                const offsetElementTop = elementRect.top + Math.min(elementRect.height * offsetStartPerc, visibleHeight);
                const offsetElementBottom = elementRect.top + elementRect.height * offsetEndPerc;
                const offsetHeight = offsetElementBottom - offsetElementTop;
                const fixedScrollHeight = Math.min(visibleHeight + offsetHeight, scrollHeight);
                const fixedScrollTop = Math.min(Math.max(0, visibleHeight - offsetElementTop), fixedScrollHeight);
                const fixedScrollPerc = fixedScrollTop / fixedScrollHeight;
                if (fixedScrollPerc !== state.scrollPercent) {
                    store.dispatch((0, _IX2EngineActions.parameterChanged)(namespacedParameterId, fixedScrollPerc));
                }
                return {
                    scrollPercent: fixedScrollPerc
                };
            }
        }
    },
    [SCROLL_INTO_VIEW]: scrollIntoOutOfViewOptions,
    [SCROLL_OUT_OF_VIEW]: scrollIntoOutOfViewOptions,
    [PAGE_SCROLL_DOWN]: {
        ...baseScrollActionGroupOptions,
        // @ts-expect-error - TS7006 - Parameter 'options' implicitly has an 'any' type. | TS7006 - Parameter 'state' implicitly has an 'any' type.
        handler: whenScrollDirectionChange((options, state)=>{
            if (state.scrollingDown) {
                // @ts-expect-error - TS2554 - Expected 2 arguments, but got 1.
                actionGroupCreator(options);
            }
        })
    },
    [PAGE_SCROLL_UP]: {
        ...baseScrollActionGroupOptions,
        // @ts-expect-error - TS7006 - Parameter 'options' implicitly has an 'any' type. | TS7006 - Parameter 'state' implicitly has an 'any' type.
        handler: whenScrollDirectionChange((options, state)=>{
            if (!state.scrollingDown) {
                // @ts-expect-error - TS2554 - Expected 2 arguments, but got 1.
                actionGroupCreator(options);
            }
        })
    },
    [PAGE_FINISH]: {
        types: 'readystatechange IX2_PAGE_UPDATE',
        handler: withFilter(isElement, whenPageLoadFinish(actionGroupCreator))
    },
    [PAGE_START]: {
        types: 'readystatechange IX2_PAGE_UPDATE',
        handler: withFilter(isElement, whenPageLoadStart(actionGroupCreator))
    }
};

//# sourceMappingURL=data:application/json;base64,

}),
4609: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "ixData", ({
    enumerable: true,
    get: function() {
        return ixData;
    }
}));
const _sharedconstants = __webpack_require__(7087);
const { IX2_RAW_DATA_IMPORTED } = _sharedconstants.IX2EngineActionTypes;
const ixData = (state = Object.freeze({}), action)=>{
    switch(action.type){
        case IX2_RAW_DATA_IMPORTED:
            {
                return action.payload.ixData || Object.freeze({});
            }
        default:
            {
                return state;
            }
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMkRhdGFSZWR1Y2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SVgyRW5naW5lQWN0aW9uVHlwZXN9IGZyb20gJ0BwYWNrYWdlcy9zeXN0ZW1zL2l4Mi9zaGFyZWQtY29uc3RhbnRzJztcbmltcG9ydCB7cmF3RGF0YUltcG9ydGVkUGF5bG9hZH0gZnJvbSAnLi4vYWN0aW9ucy9JWDJFbmdpbmVBY3Rpb25zJztcbmNvbnN0IHtJWDJfUkFXX0RBVEFfSU1QT1JURUR9ID0gSVgyRW5naW5lQWN0aW9uVHlwZXM7XG5cbnR5cGUgaXhEYXRhUmVkdWNlckFjdGlvbiA9IHtcbiAgdHlwZTogdHlwZW9mIElYMl9SQVdfREFUQV9JTVBPUlRFRDtcbiAgcGF5bG9hZDogcmF3RGF0YUltcG9ydGVkUGF5bG9hZDtcbn07XG5cbmV4cG9ydCB0eXBlIGl4RGF0YVJlZHVjZXJTdGF0ZSA9IHJhd0RhdGFJbXBvcnRlZFBheWxvYWRbJ2l4RGF0YSddO1xuXG5leHBvcnQgY29uc3QgaXhEYXRhID0gKFxuICBzdGF0ZTogaXhEYXRhUmVkdWNlclN0YXRlID0gT2JqZWN0LmZyZWV6ZShcbiAgICB7fVxuICApIGFzIHJhd0RhdGFJbXBvcnRlZFBheWxvYWRbJ2l4RGF0YSddLFxuICBhY3Rpb246IGl4RGF0YVJlZHVjZXJBY3Rpb25cbikgPT4ge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBJWDJfUkFXX0RBVEFfSU1QT1JURUQ6IHtcbiAgICAgIHJldHVybiBhY3Rpb24ucGF5bG9hZC5peERhdGEgfHwgT2JqZWN0LmZyZWV6ZSh7fSk7XG4gICAgfVxuICAgIGRlZmF1bHQ6IHtcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG4gIH1cbn07XG4iXSwibmFtZXMiOlsiaXhEYXRhIiwiSVgyX1JBV19EQVRBX0lNUE9SVEVEIiwiSVgyRW5naW5lQWN0aW9uVHlwZXMiLCJzdGF0ZSIsIk9iamVjdCIsImZyZWV6ZSIsImFjdGlvbiIsInR5cGUiLCJwYXlsb2FkIl0sIm1hcHBpbmdzIjoiOzs7OytCQVdhQTs7O2VBQUFBOzs7aUNBWHNCO0FBRW5DLE1BQU0sRUFBQ0MscUJBQXFCLEVBQUMsR0FBR0MscUNBQW9CO0FBUzdDLE1BQU1GLFNBQVMsQ0FDcEJHLFFBQTRCQyxPQUFPQyxNQUFNLENBQ3ZDLENBQUMsRUFDa0MsRUFDckNDO0lBRUEsT0FBUUEsT0FBT0MsSUFBSTtRQUNqQixLQUFLTjtZQUF1QjtnQkFDMUIsT0FBT0ssT0FBT0UsT0FBTyxDQUFDUixNQUFNLElBQUlJLE9BQU9DLE1BQU0sQ0FBQyxDQUFDO1lBQ2pEO1FBQ0E7WUFBUztnQkFDUCxPQUFPRjtZQUNUO0lBQ0Y7QUFDRiJ9

}),
7718: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/* eslint-env browser */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "ixInstances", ({
    enumerable: true,
    get: function() {
        return ixInstances;
    }
}));
const _sharedconstants = __webpack_require__(7087);
const _shared = __webpack_require__(9468);
const _timm = __webpack_require__(1185);
const { IX2_RAW_DATA_IMPORTED, IX2_SESSION_STOPPED, IX2_INSTANCE_ADDED, IX2_INSTANCE_STARTED, IX2_INSTANCE_REMOVED, IX2_ANIMATION_FRAME_CHANGED } = _sharedconstants.IX2EngineActionTypes;
const { optimizeFloat, applyEasing, createBezierEasing } = _shared.IX2EasingUtils;
const { RENDER_GENERAL } = _sharedconstants.IX2EngineConstants;
const { getItemConfigByKey, getRenderType, getStyleProp } = _shared.IX2VanillaUtils;
const continuousInstance = (state, action)=>{
    const { position: lastPosition, parameterId, actionGroups, destinationKeys, smoothing, restingValue, actionTypeId, customEasingFn, skipMotion, skipToValue } = state;
    const { parameters } = action.payload;
    let velocity = Math.max(1 - smoothing, 0.01);
    let paramValue = parameters[parameterId];
    if (paramValue == null) {
        velocity = 1;
        paramValue = restingValue;
    }
    const nextPosition = Math.max(paramValue, 0) || 0;
    const positionDiff = optimizeFloat(nextPosition - lastPosition);
    const position = skipMotion ? skipToValue : optimizeFloat(lastPosition + positionDiff * velocity);
    const keyframePosition = position * 100;
    if (position === lastPosition && state.current) {
        return state;
    }
    let fromActionItem;
    let toActionItem;
    let positionOffset;
    let positionRange;
    for(let i = 0, { length } = actionGroups; i < length; i++){
        const { keyframe, actionItems } = actionGroups[i];
        if (i === 0) {
            fromActionItem = actionItems[0];
        }
        if (keyframePosition >= keyframe) {
            fromActionItem = actionItems[0];
            const nextGroup = actionGroups[i + 1];
            const hasNextItem = nextGroup && keyframePosition !== keyframe;
            toActionItem = hasNextItem ? nextGroup.actionItems[0] : null;
            if (hasNextItem) {
                positionOffset = keyframe / 100;
                positionRange = (nextGroup.keyframe - keyframe) / 100;
            }
        }
    }
    const current = {};
    if (fromActionItem && !toActionItem) {
        for(let i = 0, { length } = destinationKeys; i < length; i++){
            const key = destinationKeys[i];
            current[key] = getItemConfigByKey(actionTypeId, key, fromActionItem.config);
        }
    } else if (fromActionItem && toActionItem && positionOffset !== undefined && positionRange !== undefined) {
        const localPosition = (position - positionOffset) / positionRange;
        const easing = fromActionItem.config.easing;
        const eased = applyEasing(easing, localPosition, customEasingFn);
        for(let i = 0, { length } = destinationKeys; i < length; i++){
            const key = destinationKeys[i];
            const fromVal = getItemConfigByKey(actionTypeId, key, fromActionItem.config);
            const toVal = getItemConfigByKey(actionTypeId, key, toActionItem.config);
            const diff = toVal - fromVal;
            const value = diff * eased + fromVal;
            current[key] = value;
        }
    }
    return (0, _timm.merge)(state, {
        position,
        current
    });
};
const timedInstance = (state, action)=>{
    const { active, origin, start, immediate, renderType, verbose, actionItem, destination, destinationKeys, pluginDuration, instanceDelay, customEasingFn, skipMotion } = state;
    const easing = actionItem.config.easing;
    let { duration, delay } = actionItem.config;
    if (pluginDuration != null) {
        duration = pluginDuration;
    }
    delay = instanceDelay != null ? instanceDelay : delay;
    if (renderType === RENDER_GENERAL) {
        duration = 0;
    } else if (immediate || skipMotion) {
        duration = delay = 0;
    }
    const { now } = action.payload;
    if (active && origin) {
        const delta = now - (start + delay);
        if (verbose) {
            const verboseDelta = now - start;
            const verboseDuration = duration + delay;
            const verbosePosition = optimizeFloat(Math.min(Math.max(0, verboseDelta / verboseDuration), 1));
            state = (0, _timm.set)(state, 'verboseTimeElapsed', verboseDuration * verbosePosition);
        }
        if (delta < 0) {
            return state;
        }
        const position = optimizeFloat(Math.min(Math.max(0, delta / duration), 1));
        const eased = applyEasing(easing, position, customEasingFn);
        const newProps = {};
        let current = null;
        if (destinationKeys.length) {
            // @ts-expect-error - TS2347 - Untyped function calls may not accept type arguments. | TS7006 - Parameter 'result' implicitly has an 'any' type. | TS7006 - Parameter 'key' implicitly has an 'any' type.
            current = destinationKeys.reduce((result, key)=>{
                const destValue = destination[key];
                const originVal = parseFloat(origin[key]) || 0;
                const diff = parseFloat(destValue) - originVal;
                const value = diff * eased + originVal;
                result[key] = value;
                return result;
            }, {});
        }
        newProps.current = current;
        newProps.position = position;
        if (position === 1) {
            newProps.active = false;
            newProps.complete = true;
        }
        return (0, _timm.merge)(state, newProps);
    }
    return state;
};
const ixInstances = (state = Object.freeze({}), action)=>{
    switch(action.type){
        case IX2_RAW_DATA_IMPORTED:
            {
                return action.payload.ixInstances || Object.freeze({});
            }
        case IX2_SESSION_STOPPED:
            {
                return Object.freeze({});
            }
        case IX2_INSTANCE_ADDED:
            {
                const { instanceId, elementId, actionItem, eventId, eventTarget, eventStateKey, actionListId, groupIndex, isCarrier, origin, destination, immediate, verbose, continuous, parameterId, actionGroups, smoothing, restingValue, pluginInstance, pluginDuration, instanceDelay, skipMotion, skipToValue } = action.payload;
                const { actionTypeId } = actionItem;
                const renderType = getRenderType(actionTypeId);
                const styleProp = getStyleProp(renderType, actionTypeId);
                const destinationKeys = Object.keys(destination).filter((key)=>// Skip null destination values
                    destination[key] != null && // Skip string destination values
                    typeof destination[key] !== 'string');
                const { easing } = actionItem.config;
                return (0, _timm.set)(state, instanceId, {
                    id: instanceId,
                    elementId,
                    active: false,
                    position: 0,
                    start: 0,
                    origin,
                    destination,
                    destinationKeys,
                    immediate,
                    verbose,
                    current: null,
                    actionItem,
                    actionTypeId,
                    eventId,
                    eventTarget,
                    eventStateKey,
                    actionListId,
                    groupIndex,
                    renderType,
                    isCarrier,
                    styleProp,
                    continuous,
                    parameterId,
                    actionGroups,
                    smoothing,
                    restingValue,
                    pluginInstance,
                    pluginDuration,
                    instanceDelay,
                    skipMotion,
                    skipToValue,
                    customEasingFn: Array.isArray(easing) && easing.length === 4 ? createBezierEasing(easing) : undefined
                });
            }
        case IX2_INSTANCE_STARTED:
            {
                const { instanceId, time } = action.payload;
                return (0, _timm.mergeIn)(state, [
                    instanceId
                ], {
                    active: true,
                    complete: false,
                    start: time
                });
            }
        case IX2_INSTANCE_REMOVED:
            {
                const { instanceId } = action.payload;
                if (!state[instanceId]) {
                    return state;
                }
                const newState = {};
                const keys = Object.keys(state);
                const { length } = keys;
                for(let i = 0; i < length; i++){
                    const key = keys[i];
                    if (key !== instanceId) {
                        // @ts-expect-error - TS2538 - Type 'undefined' cannot be used as an index type. | TS2538 - Type 'undefined' cannot be used as an index type.
                        newState[key] = state[key];
                    }
                }
                return newState;
            }
        case IX2_ANIMATION_FRAME_CHANGED:
            {
                let newState = state;
                const keys = Object.keys(state);
                const { length } = keys;
                for(let i = 0; i < length; i++){
                    const key = keys[i];
                    // @ts-expect-error - TS2538 - Type 'undefined' cannot be used as an index type.
                    const instance = state[key];
                    const reducer = instance.continuous ? continuousInstance : timedInstance;
                    // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'Key'.
                    newState = (0, _timm.set)(newState, key, reducer(instance, action));
                }
                return newState;
            }
        default:
            {
                return state;
            }
    }
};

//# sourceMappingURL=data:application/json;base64,

}),
1540: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "ixParameters", ({
    enumerable: true,
    get: function() {
        return ixParameters;
    }
}));
const _sharedconstants = __webpack_require__(7087);
const { IX2_RAW_DATA_IMPORTED, IX2_SESSION_STOPPED, IX2_PARAMETER_CHANGED } = _sharedconstants.IX2EngineActionTypes;
const ixParameters = (state = {}, action)=>{
    switch(action.type){
        case IX2_RAW_DATA_IMPORTED:
            {
                return(// @ts-expect-error - Further investigation is needed as looks like IX2_RAW_DATA_IMPORTED is never triggered with ixParameters
                action.payload.ixParameters || {});
            }
        case IX2_SESSION_STOPPED:
            {
                return {};
            }
        case IX2_PARAMETER_CHANGED:
            {
                const { key, value } = action.payload;
                state[key] = value;
                return state;
            }
        default:
            {
                return state;
            }
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMlBhcmFtZXRlcnNSZWR1Y2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SVgyRW5naW5lQWN0aW9uVHlwZXN9IGZyb20gJ0BwYWNrYWdlcy9zeXN0ZW1zL2l4Mi9zaGFyZWQtY29uc3RhbnRzJztcbmltcG9ydCB7cmF3RGF0YUltcG9ydGVkUGF5bG9hZH0gZnJvbSAnLi4vYWN0aW9ucy9JWDJFbmdpbmVBY3Rpb25zJztcbmNvbnN0IHtJWDJfUkFXX0RBVEFfSU1QT1JURUQsIElYMl9TRVNTSU9OX1NUT1BQRUQsIElYMl9QQVJBTUVURVJfQ0hBTkdFRH0gPVxuICBJWDJFbmdpbmVBY3Rpb25UeXBlcztcblxudHlwZSBpeFBhcmFtZXRlcnNBY3Rpb24gPVxuICB8IHtcbiAgICAgIHR5cGU6IHR5cGVvZiBJWDJfUkFXX0RBVEFfSU1QT1JURUQ7XG4gICAgICBwYXlsb2FkOiByYXdEYXRhSW1wb3J0ZWRQYXlsb2FkO1xuICAgIH1cbiAgfCB7XG4gICAgICB0eXBlOiB0eXBlb2YgSVgyX1NFU1NJT05fU1RPUFBFRDtcbiAgICB9XG4gIHwge1xuICAgICAgdHlwZTogdHlwZW9mIElYMl9QQVJBTUVURVJfQ0hBTkdFRDtcbiAgICAgIHBheWxvYWQ6IHtrZXk6IHN0cmluZzsgdmFsdWU6IG51bWJlcn07XG4gICAgfTtcblxudHlwZSBpeFBhcmFtZXRlcnNSZWR1Y2VyU3RhdGUgPSBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+O1xuXG4vLyBwcmV0dGllci1pZ25vcmVcbmV4cG9ydCBjb25zdCBpeFBhcmFtZXRlcnMgPSAoXG4gIHN0YXRlOiBpeFBhcmFtZXRlcnNSZWR1Y2VyU3RhdGUgPSB7LyptdXRhYmxlIGZsYXQgc3RhdGUqL30sXG4gIGFjdGlvbjogaXhQYXJhbWV0ZXJzQWN0aW9uXG4pOiBpeFBhcmFtZXRlcnNSZWR1Y2VyU3RhdGUgPT4ge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBJWDJfUkFXX0RBVEFfSU1QT1JURUQ6IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSBGdXJ0aGVyIGludmVzdGlnYXRpb24gaXMgbmVlZGVkIGFzIGxvb2tzIGxpa2UgSVgyX1JBV19EQVRBX0lNUE9SVEVEIGlzIG5ldmVyIHRyaWdnZXJlZCB3aXRoIGl4UGFyYW1ldGVyc1xuICAgICAgICBhY3Rpb24ucGF5bG9hZC5peFBhcmFtZXRlcnMgfHwgey8qbXV0YWJsZSBmbGF0IHN0YXRlKi99XG4gICAgICApO1xuICAgIH1cbiAgICBjYXNlIElYMl9TRVNTSU9OX1NUT1BQRUQ6IHtcbiAgICAgIHJldHVybiB7LyptdXRhYmxlIGZsYXQgc3RhdGUqL307XG4gICAgfVxuICAgIGNhc2UgSVgyX1BBUkFNRVRFUl9DSEFOR0VEOiB7XG4gICAgICBjb25zdCB7a2V5LCB2YWx1ZX0gPSBhY3Rpb24ucGF5bG9hZDtcbiAgICAgIHN0YXRlW2tleV0gPSB2YWx1ZTtcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJpeFBhcmFtZXRlcnMiLCJJWDJfUkFXX0RBVEFfSU1QT1JURUQiLCJJWDJfU0VTU0lPTl9TVE9QUEVEIiwiSVgyX1BBUkFNRVRFUl9DSEFOR0VEIiwiSVgyRW5naW5lQWN0aW9uVHlwZXMiLCJzdGF0ZSIsImFjdGlvbiIsInR5cGUiLCJwYXlsb2FkIiwia2V5IiwidmFsdWUiXSwibWFwcGluZ3MiOiI7Ozs7K0JBcUJhQTs7O2VBQUFBOzs7aUNBckJzQjtBQUVuQyxNQUFNLEVBQUNDLHFCQUFxQixFQUFFQyxtQkFBbUIsRUFBRUMscUJBQXFCLEVBQUMsR0FDdkVDLHFDQUFvQjtBQWtCZixNQUFNSixlQUFlLENBQzFCSyxRQUFrQyxDQUF1QixDQUFDLEVBQzFEQztJQUVBLE9BQVFBLE9BQU9DLElBQUk7UUFDakIsS0FBS047WUFBdUI7Z0JBQzFCLE9BQ0UsOEhBQThIO2dCQUM5SEssT0FBT0UsT0FBTyxDQUFDUixZQUFZLElBQUksQ0FBdUI7WUFFMUQ7UUFDQSxLQUFLRTtZQUFxQjtnQkFDeEIsT0FBTyxDQUF1QjtZQUNoQztRQUNBLEtBQUtDO1lBQXVCO2dCQUMxQixNQUFNLEVBQUNNLEdBQUcsRUFBRUMsS0FBSyxFQUFDLEdBQUdKLE9BQU9FLE9BQU87Z0JBQ25DSCxLQUFLLENBQUNJLElBQUksR0FBR0M7Z0JBQ2IsT0FBT0w7WUFDVDtRQUNBO1lBQVM7Z0JBQ1AsT0FBT0E7WUFDVDtJQUNGO0FBQ0YifQ==

}),
7243: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
const _redux = __webpack_require__(9516);
const _IX2DataReducer = __webpack_require__(4609);
const _IX2RequestReducer = __webpack_require__(628);
const _IX2SessionReducer = __webpack_require__(5862);
const _shared = __webpack_require__(9468);
const _IX2InstancesReducer = __webpack_require__(7718);
const _IX2ParametersReducer = __webpack_require__(1540);
const { ixElements } = _shared.IX2ElementsReducer;
const _default = (0, _redux.combineReducers)({
    ixData: _IX2DataReducer.ixData,
    ixRequest: _IX2RequestReducer.ixRequest,
    ixSession: _IX2SessionReducer.ixSession,
    ixElements,
    ixInstances: _IX2InstancesReducer.ixInstances,
    ixParameters: _IX2ParametersReducer.ixParameters
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMlJlZHVjZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtTdG9yZSwgY29tYmluZVJlZHVjZXJzLCB0eXBlIFJlZHVjZXJ9IGZyb20gJ3JlZHV4JztcblxuaW1wb3J0IHtpeERhdGEsIHR5cGUgaXhEYXRhUmVkdWNlclN0YXRlfSBmcm9tICcuL0lYMkRhdGFSZWR1Y2VyJztcbmltcG9ydCB7aXhSZXF1ZXN0fSBmcm9tICcuL0lYMlJlcXVlc3RSZWR1Y2VyJztcbmltcG9ydCB7aXhTZXNzaW9ufSBmcm9tICcuL0lYMlNlc3Npb25SZWR1Y2VyJztcbmltcG9ydCB7SVgyRWxlbWVudHNSZWR1Y2VyfSBmcm9tICdAcGFja2FnZXMvc3lzdGVtcy9peDIvc2hhcmVkJztcbmNvbnN0IHtpeEVsZW1lbnRzfSA9IElYMkVsZW1lbnRzUmVkdWNlcjtcbmltcG9ydCB7aXhJbnN0YW5jZXN9IGZyb20gJy4vSVgySW5zdGFuY2VzUmVkdWNlcic7XG5pbXBvcnQge2l4UGFyYW1ldGVyc30gZnJvbSAnLi9JWDJQYXJhbWV0ZXJzUmVkdWNlcic7XG5cbmV4cG9ydCB0eXBlIElYMkVuZ2luZVJlZHVjZXJTdGF0ZVNoYXBlID0ge1xuICBpeERhdGE6IFJldHVyblR5cGU8dHlwZW9mIGl4RGF0YT47XG4gIGl4UGFyYW1ldGVyczogUmV0dXJuVHlwZTx0eXBlb2YgaXhQYXJhbWV0ZXJzPjtcbiAgaXhTZXNzaW9uOiBSZXR1cm5UeXBlPHR5cGVvZiBpeFNlc3Npb24+O1xuICBpeEVsZW1lbnRzOiBSZXR1cm5UeXBlPHR5cGVvZiBpeEVsZW1lbnRzPjtcbiAgaXhJbnN0YW5jZXM6IFJldHVyblR5cGU8dHlwZW9mIGl4SW5zdGFuY2VzPjtcbiAgaXhSZXF1ZXN0OiBSZXR1cm5UeXBlPHR5cGVvZiBpeFJlcXVlc3Q+O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29tYmluZVJlZHVjZXJzPElYMkVuZ2luZVJlZHVjZXJTdGF0ZVNoYXBlPih7XG4gIGl4RGF0YTogaXhEYXRhIGFzIFJlZHVjZXI8aXhEYXRhUmVkdWNlclN0YXRlPixcbiAgaXhSZXF1ZXN0LFxuICBpeFNlc3Npb24sXG4gIGl4RWxlbWVudHMsXG4gIGl4SW5zdGFuY2VzLFxuICBpeFBhcmFtZXRlcnMsXG59KTtcblxuZXhwb3J0IHR5cGUgSVgyRW5naW5lUmVkdWNlclN0b3JlID0gU3RvcmU8SVgyRW5naW5lUmVkdWNlclN0YXRlU2hhcGU+O1xuIl0sIm5hbWVzIjpbIml4RWxlbWVudHMiLCJJWDJFbGVtZW50c1JlZHVjZXIiLCJjb21iaW5lUmVkdWNlcnMiLCJpeERhdGEiLCJpeFJlcXVlc3QiLCJpeFNlc3Npb24iLCJpeEluc3RhbmNlcyIsIml4UGFyYW1ldGVycyJdLCJtYXBwaW5ncyI6Ijs7OzsrQkFtQkE7OztlQUFBOzs7dUJBbkJtRDtnQ0FFTDttQ0FDdEI7bUNBQ0E7d0JBQ1M7cUNBRVA7c0NBQ0M7QUFGM0IsTUFBTSxFQUFDQSxVQUFVLEVBQUMsR0FBR0MsMEJBQWtCO01BYXZDLFdBQWVDLElBQUFBLHNCQUFlLEVBQTZCO0lBQ3pEQyxRQUFRQSxzQkFBTTtJQUNkQyxXQUFBQSw0QkFBUztJQUNUQyxXQUFBQSw0QkFBUztJQUNUTDtJQUNBTSxhQUFBQSxnQ0FBVztJQUNYQyxjQUFBQSxrQ0FBWTtBQUNkIn0=

}),
628: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "ixRequest", ({
    enumerable: true,
    get: function() {
        return ixRequest;
    }
}));
const _sharedconstants = __webpack_require__(7087);
const _timm = __webpack_require__(1185);
const { IX2_PREVIEW_REQUESTED, IX2_PLAYBACK_REQUESTED, IX2_STOP_REQUESTED, IX2_CLEAR_REQUESTED } = _sharedconstants.IX2EngineActionTypes;
const initialState = {
    preview: {},
    playback: {},
    stop: {},
    clear: {}
};
const stateKeys = Object.create(null, {
    [IX2_PREVIEW_REQUESTED]: {
        value: 'preview'
    },
    [IX2_PLAYBACK_REQUESTED]: {
        value: 'playback'
    },
    [IX2_STOP_REQUESTED]: {
        value: 'stop'
    },
    [IX2_CLEAR_REQUESTED]: {
        value: 'clear'
    }
});
const ixRequest = (state = initialState, action)=>{
    if (action.type in stateKeys) {
        const key = [
            stateKeys[action.type]
        ];
        return (0, _timm.setIn)(state, [
            key
        ], {
            ...action.payload
        });
    }
    return state;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMlJlcXVlc3RSZWR1Y2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SVgyRW5naW5lQWN0aW9uVHlwZXN9IGZyb20gJ0BwYWNrYWdlcy9zeXN0ZW1zL2l4Mi9zaGFyZWQtY29uc3RhbnRzJztcbmNvbnN0IHtcbiAgSVgyX1BSRVZJRVdfUkVRVUVTVEVELFxuICBJWDJfUExBWUJBQ0tfUkVRVUVTVEVELFxuICBJWDJfU1RPUF9SRVFVRVNURUQsXG4gIElYMl9DTEVBUl9SRVFVRVNURUQsXG59ID0gSVgyRW5naW5lQWN0aW9uVHlwZXM7XG5pbXBvcnQge3NldElufSBmcm9tICd0aW1tJztcbmltcG9ydCB7XG4gIHBsYXliYWNrUmVxdWVzdGVkUGF5bG9hZCxcbiAgcHJldmlld1JlcXVlc3RlZFBheWxvYWQsXG4gIHN0b3BSZXF1ZXN0ZWRQYXlsb2FkLFxufSBmcm9tICcuLi9hY3Rpb25zL0lYMkVuZ2luZUFjdGlvbnMnO1xuXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7XG4gIHByZXZpZXc6IHt9IGFzIHByZXZpZXdSZXF1ZXN0ZWRQYXlsb2FkLFxuICBwbGF5YmFjazoge30gYXMgcGxheWJhY2tSZXF1ZXN0ZWRQYXlsb2FkLFxuICBzdG9wOiB7fSBhcyBzdG9wUmVxdWVzdGVkUGF5bG9hZCxcbiAgY2xlYXI6IHt9LFxufTtcblxuY29uc3Qgc3RhdGVLZXlzID0gT2JqZWN0LmNyZWF0ZShudWxsLCB7XG4gIFtJWDJfUFJFVklFV19SRVFVRVNURURdOiB7dmFsdWU6ICdwcmV2aWV3J30sXG4gIFtJWDJfUExBWUJBQ0tfUkVRVUVTVEVEXToge3ZhbHVlOiAncGxheWJhY2snfSxcbiAgW0lYMl9TVE9QX1JFUVVFU1RFRF06IHt2YWx1ZTogJ3N0b3AnfSxcbiAgW0lYMl9DTEVBUl9SRVFVRVNURURdOiB7dmFsdWU6ICdjbGVhcid9LFxufSk7XG5cbnR5cGUgaXhSZXF1ZXN0U3RhdGUgPSB7XG4gIHByZXZpZXc6IHByZXZpZXdSZXF1ZXN0ZWRQYXlsb2FkO1xuICBwbGF5YmFjazogcGxheWJhY2tSZXF1ZXN0ZWRQYXlsb2FkO1xuICBzdG9wOiBzdG9wUmVxdWVzdGVkUGF5bG9hZDtcbiAgY2xlYXI6IFJlY29yZDxuZXZlciwgbmV2ZXI+O1xufTtcblxudHlwZSBpeFJlcXVlc3RBY3Rpb24gPVxuICB8IHtcbiAgICAgIHR5cGU6IHR5cGVvZiBJWDJfUFJFVklFV19SRVFVRVNURUQ7XG4gICAgICBwYXlsb2FkOiBwcmV2aWV3UmVxdWVzdGVkUGF5bG9hZDtcbiAgICB9XG4gIHwge1xuICAgICAgdHlwZTogdHlwZW9mIElYMl9QTEFZQkFDS19SRVFVRVNURUQ7XG4gICAgICBwYXlsb2FkOiBwbGF5YmFja1JlcXVlc3RlZFBheWxvYWQ7XG4gICAgfVxuICB8IHtcbiAgICAgIHR5cGU6IHR5cGVvZiBJWDJfU1RPUF9SRVFVRVNURUQ7XG4gICAgICBwYXlsb2FkOiBzdG9wUmVxdWVzdGVkUGF5bG9hZDtcbiAgICB9XG4gIHwge1xuICAgICAgdHlwZTogdHlwZW9mIElYMl9DTEVBUl9SRVFVRVNURUQ7XG4gICAgICBwYXlsb2FkPzogbmV2ZXI7XG4gICAgfTtcblxuZXhwb3J0IGNvbnN0IGl4UmVxdWVzdCA9IChcbiAgc3RhdGU6IGl4UmVxdWVzdFN0YXRlID0gaW5pdGlhbFN0YXRlLFxuICBhY3Rpb246IGl4UmVxdWVzdEFjdGlvblxuKTogaXhSZXF1ZXN0U3RhdGUgPT4ge1xuICBpZiAoYWN0aW9uLnR5cGUgaW4gc3RhdGVLZXlzKSB7XG4gICAgY29uc3Qga2V5ID0gW3N0YXRlS2V5c1thY3Rpb24udHlwZV1dIGFzIGFueTtcbiAgICByZXR1cm4gc2V0SW4oc3RhdGUsIFtrZXldLCB7Li4uYWN0aW9uLnBheWxvYWR9KTtcbiAgfVxuICByZXR1cm4gc3RhdGU7XG59O1xuIl0sIm5hbWVzIjpbIml4UmVxdWVzdCIsIklYMl9QUkVWSUVXX1JFUVVFU1RFRCIsIklYMl9QTEFZQkFDS19SRVFVRVNURUQiLCJJWDJfU1RPUF9SRVFVRVNURUQiLCJJWDJfQ0xFQVJfUkVRVUVTVEVEIiwiSVgyRW5naW5lQWN0aW9uVHlwZXMiLCJpbml0aWFsU3RhdGUiLCJwcmV2aWV3IiwicGxheWJhY2siLCJzdG9wIiwiY2xlYXIiLCJzdGF0ZUtleXMiLCJPYmplY3QiLCJjcmVhdGUiLCJ2YWx1ZSIsInN0YXRlIiwiYWN0aW9uIiwidHlwZSIsImtleSIsInNldEluIiwicGF5bG9hZCJdLCJtYXBwaW5ncyI6Ijs7OzsrQkFxRGFBOzs7ZUFBQUE7OztpQ0FyRHNCO3NCQU9mO0FBTnBCLE1BQU0sRUFDSkMscUJBQXFCLEVBQ3JCQyxzQkFBc0IsRUFDdEJDLGtCQUFrQixFQUNsQkMsbUJBQW1CLEVBQ3BCLEdBQUdDLHFDQUFvQjtBQVF4QixNQUFNQyxlQUFlO0lBQ25CQyxTQUFTLENBQUM7SUFDVkMsVUFBVSxDQUFDO0lBQ1hDLE1BQU0sQ0FBQztJQUNQQyxPQUFPLENBQUM7QUFDVjtBQUVBLE1BQU1DLFlBQVlDLE9BQU9DLE1BQU0sQ0FBQyxNQUFNO0lBQ3BDLENBQUNaLHNCQUFzQixFQUFFO1FBQUNhLE9BQU87SUFBUztJQUMxQyxDQUFDWix1QkFBdUIsRUFBRTtRQUFDWSxPQUFPO0lBQVU7SUFDNUMsQ0FBQ1gsbUJBQW1CLEVBQUU7UUFBQ1csT0FBTztJQUFNO0lBQ3BDLENBQUNWLG9CQUFvQixFQUFFO1FBQUNVLE9BQU87SUFBTztBQUN4QztBQTJCTyxNQUFNZCxZQUFZLENBQ3ZCZSxRQUF3QlQsWUFBWSxFQUNwQ1U7SUFFQSxJQUFJQSxPQUFPQyxJQUFJLElBQUlOLFdBQVc7UUFDNUIsTUFBTU8sTUFBTTtZQUFDUCxTQUFTLENBQUNLLE9BQU9DLElBQUksQ0FBQztTQUFDO1FBQ3BDLE9BQU9FLElBQUFBLFdBQUssRUFBQ0osT0FBTztZQUFDRztTQUFJLEVBQUU7WUFBQyxHQUFHRixPQUFPSSxPQUFPO1FBQUE7SUFDL0M7SUFDQSxPQUFPTDtBQUNUIn0=

}),
5862: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "ixSession", ({
    enumerable: true,
    get: function() {
        return ixSession;
    }
}));
const _sharedconstants = __webpack_require__(7087);
const _timm = __webpack_require__(1185);
const { IX2_SESSION_INITIALIZED, IX2_SESSION_STARTED, IX2_TEST_FRAME_RENDERED, IX2_SESSION_STOPPED, IX2_EVENT_LISTENER_ADDED, IX2_EVENT_STATE_CHANGED, IX2_ANIMATION_FRAME_CHANGED, IX2_ACTION_LIST_PLAYBACK_CHANGED, IX2_VIEWPORT_WIDTH_CHANGED, IX2_MEDIA_QUERIES_DEFINED } = _sharedconstants.IX2EngineActionTypes;
const initialState = {
    active: false,
    tick: 0,
    eventListeners: [],
    eventState: {},
    playbackState: {},
    viewportWidth: 0,
    mediaQueryKey: null,
    hasBoundaryNodes: false,
    hasDefinedMediaQueries: false,
    reducedMotion: false
};
const TEST_FRAME_STEPS_SIZE = 20;
const ixSession = (state = initialState, action)=>{
    switch(action.type){
        case IX2_SESSION_INITIALIZED:
            {
                const { hasBoundaryNodes, reducedMotion } = action.payload;
                return (0, _timm.merge)(state, {
                    hasBoundaryNodes,
                    reducedMotion
                });
            }
        case IX2_SESSION_STARTED:
            {
                return (0, _timm.set)(state, 'active', true);
            }
        case IX2_TEST_FRAME_RENDERED:
            {
                const { payload: { step = TEST_FRAME_STEPS_SIZE } } = action;
                return (0, _timm.set)(state, 'tick', state.tick + step);
            }
        case IX2_SESSION_STOPPED:
            {
                return initialState;
            }
        case IX2_ANIMATION_FRAME_CHANGED:
            {
                const { payload: { now } } = action;
                return (0, _timm.set)(state, 'tick', now);
            }
        case IX2_EVENT_LISTENER_ADDED:
            {
                const eventListeners = (0, _timm.addLast)(state.eventListeners, action.payload);
                return (0, _timm.set)(state, 'eventListeners', eventListeners);
            }
        case IX2_EVENT_STATE_CHANGED:
            {
                const { stateKey, newState } = action.payload;
                return (0, _timm.setIn)(state, [
                    'eventState',
                    stateKey
                ], newState);
            }
        case IX2_ACTION_LIST_PLAYBACK_CHANGED:
            {
                const { actionListId, isPlaying } = action.payload;
                return (0, _timm.setIn)(state, [
                    'playbackState',
                    actionListId
                ], isPlaying);
            }
        case IX2_VIEWPORT_WIDTH_CHANGED:
            {
                const { width, mediaQueries } = action.payload;
                const mediaQueryCount = mediaQueries.length;
                let mediaQueryKey = null;
                for(let i = 0; i < mediaQueryCount; i++){
                    const { key, min, max } = mediaQueries[i];
                    if (width >= min && width <= max) {
                        mediaQueryKey = key;
                        break;
                    }
                }
                return (0, _timm.merge)(state, {
                    viewportWidth: width,
                    mediaQueryKey
                });
            }
        case IX2_MEDIA_QUERIES_DEFINED:
            {
                return (0, _timm.set)(state, 'hasDefinedMediaQueries', true);
            }
        default:
            {
                return state;
            }
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMlNlc3Npb25SZWR1Y2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SVgyRW5naW5lQWN0aW9uVHlwZXN9IGZyb20gJ0BwYWNrYWdlcy9zeXN0ZW1zL2l4Mi9zaGFyZWQtY29uc3RhbnRzJztcbmNvbnN0IHtcbiAgSVgyX1NFU1NJT05fSU5JVElBTElaRUQsXG4gIElYMl9TRVNTSU9OX1NUQVJURUQsXG4gIElYMl9URVNUX0ZSQU1FX1JFTkRFUkVELFxuICBJWDJfU0VTU0lPTl9TVE9QUEVELFxuICBJWDJfRVZFTlRfTElTVEVORVJfQURERUQsXG4gIElYMl9FVkVOVF9TVEFURV9DSEFOR0VELFxuICBJWDJfQU5JTUFUSU9OX0ZSQU1FX0NIQU5HRUQsXG4gIElYMl9BQ1RJT05fTElTVF9QTEFZQkFDS19DSEFOR0VELFxuICBJWDJfVklFV1BPUlRfV0lEVEhfQ0hBTkdFRCxcbiAgSVgyX01FRElBX1FVRVJJRVNfREVGSU5FRCxcbn0gPSBJWDJFbmdpbmVBY3Rpb25UeXBlcztcbmltcG9ydCB7c2V0LCBzZXRJbiwgYWRkTGFzdCwgbWVyZ2V9IGZyb20gJ3RpbW0nO1xuaW1wb3J0IHtcbiAgYWN0aW9uTGlzdFBsYXliYWNrQ2hhbmdlZFBheWxvYWQsXG4gIGFuaW1hdGlvbkZyYW1lQ2hhbmdlZFBheWxvYWQsXG4gIGV2ZW50TGlzdGVuZXJBZGRlZFBheWxvYWQsXG4gIGV2ZW50U3RhdGVDaGFuZ2VkUGF5bG9hZCxcbiAgc2Vzc2lvbkluaXRpYWxpemVkUGF5bG9hZCxcbiAgdGVzdEZyYW1lUmVuZGVyZWRQYXlsb2FkLFxuICB2aWV3cG9ydFdpZHRoQ2hhbmdlZFBheWxvYWQsXG59IGZyb20gJy4uL2FjdGlvbnMvSVgyRW5naW5lQWN0aW9ucyc7XG5cbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgYWN0aXZlOiBmYWxzZSxcbiAgdGljazogMCxcbiAgZXZlbnRMaXN0ZW5lcnM6IFtdLFxuICBldmVudFN0YXRlOiB7fSxcbiAgcGxheWJhY2tTdGF0ZToge30sXG4gIHZpZXdwb3J0V2lkdGg6IDAsXG4gIG1lZGlhUXVlcnlLZXk6IG51bGwsXG4gIGhhc0JvdW5kYXJ5Tm9kZXM6IGZhbHNlLFxuICBoYXNEZWZpbmVkTWVkaWFRdWVyaWVzOiBmYWxzZSxcbiAgcmVkdWNlZE1vdGlvbjogZmFsc2UsXG59O1xuXG5jb25zdCBURVNUX0ZSQU1FX1NURVBTX1NJWkUgPSAyMDtcblxudHlwZSBpeFNlc3Npb25SZWR1Y2VyU3RhdGUgPSB7XG4gIGFjdGl2ZTogYm9vbGVhbjtcbiAgdGljazogbnVtYmVyO1xuICBldmVudExpc3RlbmVyczogYW55W107XG4gIGV2ZW50U3RhdGU6IFJlY29yZDxzdHJpbmcsIGFueT47XG4gIHBsYXliYWNrU3RhdGU6IFJlY29yZDxzdHJpbmcsIGFueT47XG4gIHZpZXdwb3J0V2lkdGg6IG51bWJlcjtcbiAgbWVkaWFRdWVyeUtleTogbnVsbDtcbiAgaGFzQm91bmRhcnlOb2RlczogYm9vbGVhbjtcbiAgaGFzRGVmaW5lZE1lZGlhUXVlcmllczogYm9vbGVhbjtcbiAgcmVkdWNlZE1vdGlvbjogYm9vbGVhbjtcbn07XG5cbnR5cGUgaXhTZXNzaW9uUmVkdWNlckFjdGlvbiA9XG4gIHwge1xuICAgICAgdHlwZTogdHlwZW9mIElYMl9TRVNTSU9OX0lOSVRJQUxJWkVEO1xuICAgICAgcGF5bG9hZDogc2Vzc2lvbkluaXRpYWxpemVkUGF5bG9hZDtcbiAgICB9XG4gIHwge1xuICAgICAgdHlwZTogdHlwZW9mIElYMl9TRVNTSU9OX1NUQVJURUQ7XG4gICAgfVxuICB8IHtcbiAgICAgIHR5cGU6IHR5cGVvZiBJWDJfVEVTVF9GUkFNRV9SRU5ERVJFRDtcbiAgICAgIHBheWxvYWQ6IHRlc3RGcmFtZVJlbmRlcmVkUGF5bG9hZDtcbiAgICB9XG4gIHwge1xuICAgICAgdHlwZTogdHlwZW9mIElYMl9TRVNTSU9OX1NUT1BQRUQ7XG4gICAgfVxuICB8IHtcbiAgICAgIHR5cGU6IHR5cGVvZiBJWDJfQU5JTUFUSU9OX0ZSQU1FX0NIQU5HRUQ7XG4gICAgICBwYXlsb2FkOiBhbmltYXRpb25GcmFtZUNoYW5nZWRQYXlsb2FkO1xuICAgIH1cbiAgfCB7XG4gICAgICB0eXBlOiB0eXBlb2YgSVgyX0VWRU5UX0xJU1RFTkVSX0FEREVEO1xuICAgICAgcGF5bG9hZDogZXZlbnRMaXN0ZW5lckFkZGVkUGF5bG9hZDtcbiAgICB9XG4gIHwge1xuICAgICAgdHlwZTogdHlwZW9mIElYMl9FVkVOVF9TVEFURV9DSEFOR0VEO1xuICAgICAgcGF5bG9hZDogZXZlbnRTdGF0ZUNoYW5nZWRQYXlsb2FkO1xuICAgIH1cbiAgfCB7XG4gICAgICB0eXBlOiB0eXBlb2YgSVgyX0FDVElPTl9MSVNUX1BMQVlCQUNLX0NIQU5HRUQ7XG4gICAgICBwYXlsb2FkOiBhY3Rpb25MaXN0UGxheWJhY2tDaGFuZ2VkUGF5bG9hZDtcbiAgICB9XG4gIHwge1xuICAgICAgdHlwZTogdHlwZW9mIElYMl9WSUVXUE9SVF9XSURUSF9DSEFOR0VEO1xuICAgICAgcGF5bG9hZDogdmlld3BvcnRXaWR0aENoYW5nZWRQYXlsb2FkO1xuICAgIH1cbiAgfCB7XG4gICAgICB0eXBlOiB0eXBlb2YgSVgyX01FRElBX1FVRVJJRVNfREVGSU5FRDtcbiAgICB9O1xuXG5leHBvcnQgY29uc3QgaXhTZXNzaW9uID0gKFxuICBzdGF0ZTogaXhTZXNzaW9uUmVkdWNlclN0YXRlID0gaW5pdGlhbFN0YXRlLFxuICBhY3Rpb246IGl4U2Vzc2lvblJlZHVjZXJBY3Rpb25cbik6IGl4U2Vzc2lvblJlZHVjZXJTdGF0ZSA9PiB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIElYMl9TRVNTSU9OX0lOSVRJQUxJWkVEOiB7XG4gICAgICBjb25zdCB7aGFzQm91bmRhcnlOb2RlcywgcmVkdWNlZE1vdGlvbn0gPSBhY3Rpb24ucGF5bG9hZDtcbiAgICAgIHJldHVybiBtZXJnZShzdGF0ZSwge1xuICAgICAgICBoYXNCb3VuZGFyeU5vZGVzLFxuICAgICAgICByZWR1Y2VkTW90aW9uLFxuICAgICAgfSkgYXMgaXhTZXNzaW9uUmVkdWNlclN0YXRlO1xuICAgIH1cbiAgICBjYXNlIElYMl9TRVNTSU9OX1NUQVJURUQ6IHtcbiAgICAgIHJldHVybiBzZXQoc3RhdGUsICdhY3RpdmUnLCB0cnVlKTtcbiAgICB9XG4gICAgY2FzZSBJWDJfVEVTVF9GUkFNRV9SRU5ERVJFRDoge1xuICAgICAgY29uc3Qge1xuICAgICAgICBwYXlsb2FkOiB7c3RlcCA9IFRFU1RfRlJBTUVfU1RFUFNfU0laRX0sXG4gICAgICB9ID0gYWN0aW9uO1xuICAgICAgcmV0dXJuIHNldChzdGF0ZSwgJ3RpY2snLCBzdGF0ZS50aWNrICsgc3RlcCk7XG4gICAgfVxuICAgIGNhc2UgSVgyX1NFU1NJT05fU1RPUFBFRDoge1xuICAgICAgcmV0dXJuIGluaXRpYWxTdGF0ZTtcbiAgICB9XG4gICAgY2FzZSBJWDJfQU5JTUFUSU9OX0ZSQU1FX0NIQU5HRUQ6IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgcGF5bG9hZDoge25vd30sXG4gICAgICB9ID0gYWN0aW9uO1xuICAgICAgcmV0dXJuIHNldChzdGF0ZSwgJ3RpY2snLCBub3cpO1xuICAgIH1cbiAgICBjYXNlIElYMl9FVkVOVF9MSVNURU5FUl9BRERFRDoge1xuICAgICAgY29uc3QgZXZlbnRMaXN0ZW5lcnMgPSBhZGRMYXN0KHN0YXRlLmV2ZW50TGlzdGVuZXJzLCBhY3Rpb24ucGF5bG9hZCk7XG4gICAgICByZXR1cm4gc2V0KHN0YXRlLCAnZXZlbnRMaXN0ZW5lcnMnLCBldmVudExpc3RlbmVycyk7XG4gICAgfVxuICAgIGNhc2UgSVgyX0VWRU5UX1NUQVRFX0NIQU5HRUQ6IHtcbiAgICAgIGNvbnN0IHtzdGF0ZUtleSwgbmV3U3RhdGV9ID0gYWN0aW9uLnBheWxvYWQ7XG4gICAgICByZXR1cm4gc2V0SW4oc3RhdGUsIFsnZXZlbnRTdGF0ZScsIHN0YXRlS2V5XSwgbmV3U3RhdGUpO1xuICAgIH1cbiAgICBjYXNlIElYMl9BQ1RJT05fTElTVF9QTEFZQkFDS19DSEFOR0VEOiB7XG4gICAgICBjb25zdCB7YWN0aW9uTGlzdElkLCBpc1BsYXlpbmd9ID0gYWN0aW9uLnBheWxvYWQ7XG4gICAgICByZXR1cm4gc2V0SW4oc3RhdGUsIFsncGxheWJhY2tTdGF0ZScsIGFjdGlvbkxpc3RJZF0sIGlzUGxheWluZyk7XG4gICAgfVxuICAgIGNhc2UgSVgyX1ZJRVdQT1JUX1dJRFRIX0NIQU5HRUQ6IHtcbiAgICAgIGNvbnN0IHt3aWR0aCwgbWVkaWFRdWVyaWVzfSA9IGFjdGlvbi5wYXlsb2FkO1xuICAgICAgY29uc3QgbWVkaWFRdWVyeUNvdW50ID0gbWVkaWFRdWVyaWVzLmxlbmd0aDtcbiAgICAgIGxldCBtZWRpYVF1ZXJ5S2V5ID0gbnVsbDtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWVkaWFRdWVyeUNvdW50OyBpKyspIHtcbiAgICAgICAgY29uc3Qge2tleSwgbWluLCBtYXh9ID0gbWVkaWFRdWVyaWVzW2ldO1xuICAgICAgICBpZiAod2lkdGggPj0gbWluICYmIHdpZHRoIDw9IG1heCkge1xuICAgICAgICAgIG1lZGlhUXVlcnlLZXkgPSBrZXk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBtZXJnZShzdGF0ZSwge1xuICAgICAgICB2aWV3cG9ydFdpZHRoOiB3aWR0aCxcbiAgICAgICAgbWVkaWFRdWVyeUtleSxcbiAgICAgIH0pIGFzIGl4U2Vzc2lvblJlZHVjZXJTdGF0ZTtcbiAgICB9XG4gICAgY2FzZSBJWDJfTUVESUFfUVVFUklFU19ERUZJTkVEOiB7XG4gICAgICByZXR1cm4gc2V0KHN0YXRlLCAnaGFzRGVmaW5lZE1lZGlhUXVlcmllcycsIHRydWUpO1xuICAgIH1cbiAgICBkZWZhdWx0OiB7XG4gICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxuICB9XG59O1xuIl0sIm5hbWVzIjpbIml4U2Vzc2lvbiIsIklYMl9TRVNTSU9OX0lOSVRJQUxJWkVEIiwiSVgyX1NFU1NJT05fU1RBUlRFRCIsIklYMl9URVNUX0ZSQU1FX1JFTkRFUkVEIiwiSVgyX1NFU1NJT05fU1RPUFBFRCIsIklYMl9FVkVOVF9MSVNURU5FUl9BRERFRCIsIklYMl9FVkVOVF9TVEFURV9DSEFOR0VEIiwiSVgyX0FOSU1BVElPTl9GUkFNRV9DSEFOR0VEIiwiSVgyX0FDVElPTl9MSVNUX1BMQVlCQUNLX0NIQU5HRUQiLCJJWDJfVklFV1BPUlRfV0lEVEhfQ0hBTkdFRCIsIklYMl9NRURJQV9RVUVSSUVTX0RFRklORUQiLCJJWDJFbmdpbmVBY3Rpb25UeXBlcyIsImluaXRpYWxTdGF0ZSIsImFjdGl2ZSIsInRpY2siLCJldmVudExpc3RlbmVycyIsImV2ZW50U3RhdGUiLCJwbGF5YmFja1N0YXRlIiwidmlld3BvcnRXaWR0aCIsIm1lZGlhUXVlcnlLZXkiLCJoYXNCb3VuZGFyeU5vZGVzIiwiaGFzRGVmaW5lZE1lZGlhUXVlcmllcyIsInJlZHVjZWRNb3Rpb24iLCJURVNUX0ZSQU1FX1NURVBTX1NJWkUiLCJzdGF0ZSIsImFjdGlvbiIsInR5cGUiLCJwYXlsb2FkIiwibWVyZ2UiLCJzZXQiLCJzdGVwIiwibm93IiwiYWRkTGFzdCIsInN0YXRlS2V5IiwibmV3U3RhdGUiLCJzZXRJbiIsImFjdGlvbkxpc3RJZCIsImlzUGxheWluZyIsIndpZHRoIiwibWVkaWFRdWVyaWVzIiwibWVkaWFRdWVyeUNvdW50IiwibGVuZ3RoIiwiaSIsImtleSIsIm1pbiIsIm1heCJdLCJtYXBwaW5ncyI6Ijs7OzsrQkEyRmFBOzs7ZUFBQUE7OztpQ0EzRnNCO3NCQWFNO0FBWnpDLE1BQU0sRUFDSkMsdUJBQXVCLEVBQ3ZCQyxtQkFBbUIsRUFDbkJDLHVCQUF1QixFQUN2QkMsbUJBQW1CLEVBQ25CQyx3QkFBd0IsRUFDeEJDLHVCQUF1QixFQUN2QkMsMkJBQTJCLEVBQzNCQyxnQ0FBZ0MsRUFDaENDLDBCQUEwQixFQUMxQkMseUJBQXlCLEVBQzFCLEdBQUdDLHFDQUFvQjtBQVl4QixNQUFNQyxlQUFlO0lBQ25CQyxRQUFRO0lBQ1JDLE1BQU07SUFDTkMsZ0JBQWdCLEVBQUU7SUFDbEJDLFlBQVksQ0FBQztJQUNiQyxlQUFlLENBQUM7SUFDaEJDLGVBQWU7SUFDZkMsZUFBZTtJQUNmQyxrQkFBa0I7SUFDbEJDLHdCQUF3QjtJQUN4QkMsZUFBZTtBQUNqQjtBQUVBLE1BQU1DLHdCQUF3QjtBQXNEdkIsTUFBTXZCLFlBQVksQ0FDdkJ3QixRQUErQlosWUFBWSxFQUMzQ2E7SUFFQSxPQUFRQSxPQUFPQyxJQUFJO1FBQ2pCLEtBQUt6QjtZQUF5QjtnQkFDNUIsTUFBTSxFQUFDbUIsZ0JBQWdCLEVBQUVFLGFBQWEsRUFBQyxHQUFHRyxPQUFPRSxPQUFPO2dCQUN4RCxPQUFPQyxJQUFBQSxXQUFLLEVBQUNKLE9BQU87b0JBQ2xCSjtvQkFDQUU7Z0JBQ0Y7WUFDRjtRQUNBLEtBQUtwQjtZQUFxQjtnQkFDeEIsT0FBTzJCLElBQUFBLFNBQUcsRUFBQ0wsT0FBTyxVQUFVO1lBQzlCO1FBQ0EsS0FBS3JCO1lBQXlCO2dCQUM1QixNQUFNLEVBQ0p3QixTQUFTLEVBQUNHLE9BQU9QLHFCQUFxQixFQUFDLEVBQ3hDLEdBQUdFO2dCQUNKLE9BQU9JLElBQUFBLFNBQUcsRUFBQ0wsT0FBTyxRQUFRQSxNQUFNVixJQUFJLEdBQUdnQjtZQUN6QztRQUNBLEtBQUsxQjtZQUFxQjtnQkFDeEIsT0FBT1E7WUFDVDtRQUNBLEtBQUtMO1lBQTZCO2dCQUNoQyxNQUFNLEVBQ0pvQixTQUFTLEVBQUNJLEdBQUcsRUFBQyxFQUNmLEdBQUdOO2dCQUNKLE9BQU9JLElBQUFBLFNBQUcsRUFBQ0wsT0FBTyxRQUFRTztZQUM1QjtRQUNBLEtBQUsxQjtZQUEwQjtnQkFDN0IsTUFBTVUsaUJBQWlCaUIsSUFBQUEsYUFBTyxFQUFDUixNQUFNVCxjQUFjLEVBQUVVLE9BQU9FLE9BQU87Z0JBQ25FLE9BQU9FLElBQUFBLFNBQUcsRUFBQ0wsT0FBTyxrQkFBa0JUO1lBQ3RDO1FBQ0EsS0FBS1Q7WUFBeUI7Z0JBQzVCLE1BQU0sRUFBQzJCLFFBQVEsRUFBRUMsUUFBUSxFQUFDLEdBQUdULE9BQU9FLE9BQU87Z0JBQzNDLE9BQU9RLElBQUFBLFdBQUssRUFBQ1gsT0FBTztvQkFBQztvQkFBY1M7aUJBQVMsRUFBRUM7WUFDaEQ7UUFDQSxLQUFLMUI7WUFBa0M7Z0JBQ3JDLE1BQU0sRUFBQzRCLFlBQVksRUFBRUMsU0FBUyxFQUFDLEdBQUdaLE9BQU9FLE9BQU87Z0JBQ2hELE9BQU9RLElBQUFBLFdBQUssRUFBQ1gsT0FBTztvQkFBQztvQkFBaUJZO2lCQUFhLEVBQUVDO1lBQ3ZEO1FBQ0EsS0FBSzVCO1lBQTRCO2dCQUMvQixNQUFNLEVBQUM2QixLQUFLLEVBQUVDLFlBQVksRUFBQyxHQUFHZCxPQUFPRSxPQUFPO2dCQUM1QyxNQUFNYSxrQkFBa0JELGFBQWFFLE1BQU07Z0JBQzNDLElBQUl0QixnQkFBZ0I7Z0JBQ3BCLElBQUssSUFBSXVCLElBQUksR0FBR0EsSUFBSUYsaUJBQWlCRSxJQUFLO29CQUN4QyxNQUFNLEVBQUNDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUMsR0FBR04sWUFBWSxDQUFDRyxFQUFFO29CQUN2QyxJQUFJSixTQUFTTSxPQUFPTixTQUFTTyxLQUFLO3dCQUNoQzFCLGdCQUFnQndCO3dCQUNoQjtvQkFDRjtnQkFDRjtnQkFDQSxPQUFPZixJQUFBQSxXQUFLLEVBQUNKLE9BQU87b0JBQ2xCTixlQUFlb0I7b0JBQ2ZuQjtnQkFDRjtZQUNGO1FBQ0EsS0FBS1Q7WUFBMkI7Z0JBQzlCLE9BQU9tQixJQUFBQSxTQUFHLEVBQUNMLE9BQU8sMEJBQTBCO1lBQzlDO1FBQ0E7WUFBUztnQkFDUCxPQUFPQTtZQUNUO0lBQ0Y7QUFDRiJ9

}),
7377: (function (__unused_webpack_module, exports) {
"use strict";
/* eslint-env browser */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    clearPlugin: function() {
        return clearPlugin;
    },
    createPluginInstance: function() {
        return createPluginInstance;
    },
    getPluginConfig: function() {
        return getPluginConfig;
    },
    getPluginDestination: function() {
        return getPluginDestination;
    },
    getPluginDuration: function() {
        return getPluginDuration;
    },
    getPluginOrigin: function() {
        return getPluginOrigin;
    },
    renderPlugin: function() {
        return renderPlugin;
    }
});
const getPluginConfig = (actionItemConfig)=>{
    return actionItemConfig.value;
};
const getPluginDuration = (element, actionItem)=>{
    if (actionItem.config.duration !== 'auto') {
        return null;
    }
    const duration = parseFloat(element.getAttribute('data-duration'));
    if (duration > 0) {
        return duration * 1000;
    }
    return parseFloat(element.getAttribute('data-default-duration')) * 1000;
};
const getPluginOrigin = (refState)=>{
    return refState || {
        value: 0
    };
};
const getPluginDestination = (actionItemConfig)=>{
    return {
        value: actionItemConfig.value
    };
};
const createPluginInstance = (element)=>{
    const lottie = window.Webflow.require('lottie');
    if (!lottie) return null;
    const instance = lottie.createInstance(element);
    instance.stop();
    instance.setSubframe(true);
    return instance;
};
const renderPlugin = (pluginInstance, refState, actionItem)=>{
    if (!pluginInstance) {
        return;
    }
    const percent = refState[actionItem.actionTypeId].value / 100;
    pluginInstance.goToFrame(pluginInstance.frames * percent);
};
const clearPlugin = (element)=>{
    const lottie = window.Webflow.require('lottie');
    if (lottie) {
        lottie.createInstance(element).stop();
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMkxvdHRpZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZW52IGJyb3dzZXIgKi9cblxuZXhwb3J0IGNvbnN0IGdldFBsdWdpbkNvbmZpZyA9IChhY3Rpb25JdGVtQ29uZmlnKSA9PiB7XG4gIHJldHVybiBhY3Rpb25JdGVtQ29uZmlnLnZhbHVlO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFBsdWdpbkR1cmF0aW9uID0gKGVsZW1lbnQsIGFjdGlvbkl0ZW0pID0+IHtcbiAgaWYgKGFjdGlvbkl0ZW0uY29uZmlnLmR1cmF0aW9uICE9PSAnYXV0bycpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0IGR1cmF0aW9uID0gcGFyc2VGbG9hdChlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1kdXJhdGlvbicpKTtcblxuICBpZiAoZHVyYXRpb24gPiAwKSB7XG4gICAgcmV0dXJuIGR1cmF0aW9uICogMTAwMDtcbiAgfVxuXG4gIHJldHVybiBwYXJzZUZsb2F0KGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWRlZmF1bHQtZHVyYXRpb24nKSkgKiAxMDAwO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFBsdWdpbk9yaWdpbiA9IChyZWZTdGF0ZSkgPT4ge1xuICByZXR1cm4gcmVmU3RhdGUgfHwge3ZhbHVlOiAwfTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRQbHVnaW5EZXN0aW5hdGlvbiA9IChhY3Rpb25JdGVtQ29uZmlnKSA9PiB7XG4gIHJldHVybiB7dmFsdWU6IGFjdGlvbkl0ZW1Db25maWcudmFsdWV9O1xufTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVBsdWdpbkluc3RhbmNlID0gKGVsZW1lbnQpID0+IHtcbiAgY29uc3QgbG90dGllID0gd2luZG93LldlYmZsb3cucmVxdWlyZSgnbG90dGllJyk7XG4gIGlmICghbG90dGllKSByZXR1cm4gbnVsbDtcbiAgY29uc3QgaW5zdGFuY2UgPSBsb3R0aWUuY3JlYXRlSW5zdGFuY2UoZWxlbWVudCk7XG4gIGluc3RhbmNlLnN0b3AoKTtcbiAgaW5zdGFuY2Uuc2V0U3ViZnJhbWUodHJ1ZSk7XG4gIHJldHVybiBpbnN0YW5jZTtcbn07XG5cbmV4cG9ydCBjb25zdCByZW5kZXJQbHVnaW4gPSAocGx1Z2luSW5zdGFuY2UsIHJlZlN0YXRlLCBhY3Rpb25JdGVtKSA9PiB7XG4gIGlmICghcGx1Z2luSW5zdGFuY2UpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgcGVyY2VudCA9IHJlZlN0YXRlW2FjdGlvbkl0ZW0uYWN0aW9uVHlwZUlkXS52YWx1ZSAvIDEwMDtcbiAgcGx1Z2luSW5zdGFuY2UuZ29Ub0ZyYW1lKHBsdWdpbkluc3RhbmNlLmZyYW1lcyAqIHBlcmNlbnQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGNsZWFyUGx1Z2luID0gKGVsZW1lbnQpID0+IHtcbiAgY29uc3QgbG90dGllID0gd2luZG93LldlYmZsb3cucmVxdWlyZSgnbG90dGllJyk7XG4gIGlmIChsb3R0aWUpIHtcbiAgICBsb3R0aWUuY3JlYXRlSW5zdGFuY2UoZWxlbWVudCkuc3RvcCgpO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbImNsZWFyUGx1Z2luIiwiY3JlYXRlUGx1Z2luSW5zdGFuY2UiLCJnZXRQbHVnaW5Db25maWciLCJnZXRQbHVnaW5EZXN0aW5hdGlvbiIsImdldFBsdWdpbkR1cmF0aW9uIiwiZ2V0UGx1Z2luT3JpZ2luIiwicmVuZGVyUGx1Z2luIiwiYWN0aW9uSXRlbUNvbmZpZyIsInZhbHVlIiwiZWxlbWVudCIsImFjdGlvbkl0ZW0iLCJjb25maWciLCJkdXJhdGlvbiIsInBhcnNlRmxvYXQiLCJnZXRBdHRyaWJ1dGUiLCJyZWZTdGF0ZSIsImxvdHRpZSIsIndpbmRvdyIsIldlYmZsb3ciLCJyZXF1aXJlIiwiaW5zdGFuY2UiLCJjcmVhdGVJbnN0YW5jZSIsInN0b3AiLCJzZXRTdWJmcmFtZSIsInBsdWdpbkluc3RhbmNlIiwicGVyY2VudCIsImFjdGlvblR5cGVJZCIsImdvVG9GcmFtZSIsImZyYW1lcyJdLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCOzs7Ozs7Ozs7OztJQTZDVEEsV0FBVztlQUFYQTs7SUFqQkFDLG9CQUFvQjtlQUFwQkE7O0lBMUJBQyxlQUFlO2VBQWZBOztJQXNCQUMsb0JBQW9CO2VBQXBCQTs7SUFsQkFDLGlCQUFpQjtlQUFqQkE7O0lBY0FDLGVBQWU7ZUFBZkE7O0lBaUJBQyxZQUFZO2VBQVpBOzs7QUFuQ04sTUFBTUosa0JBQWtCLENBQUNLO0lBQzlCLE9BQU9BLGlCQUFpQkMsS0FBSztBQUMvQjtBQUVPLE1BQU1KLG9CQUFvQixDQUFDSyxTQUFTQztJQUN6QyxJQUFJQSxXQUFXQyxNQUFNLENBQUNDLFFBQVEsS0FBSyxRQUFRO1FBQ3pDLE9BQU87SUFDVDtJQUVBLE1BQU1BLFdBQVdDLFdBQVdKLFFBQVFLLFlBQVksQ0FBQztJQUVqRCxJQUFJRixXQUFXLEdBQUc7UUFDaEIsT0FBT0EsV0FBVztJQUNwQjtJQUVBLE9BQU9DLFdBQVdKLFFBQVFLLFlBQVksQ0FBQyw0QkFBNEI7QUFDckU7QUFFTyxNQUFNVCxrQkFBa0IsQ0FBQ1U7SUFDOUIsT0FBT0EsWUFBWTtRQUFDUCxPQUFPO0lBQUM7QUFDOUI7QUFFTyxNQUFNTCx1QkFBdUIsQ0FBQ0k7SUFDbkMsT0FBTztRQUFDQyxPQUFPRCxpQkFBaUJDLEtBQUs7SUFBQTtBQUN2QztBQUVPLE1BQU1QLHVCQUF1QixDQUFDUTtJQUNuQyxNQUFNTyxTQUFTQyxPQUFPQyxPQUFPLENBQUNDLE9BQU8sQ0FBQztJQUN0QyxJQUFJLENBQUNILFFBQVEsT0FBTztJQUNwQixNQUFNSSxXQUFXSixPQUFPSyxjQUFjLENBQUNaO0lBQ3ZDVyxTQUFTRSxJQUFJO0lBQ2JGLFNBQVNHLFdBQVcsQ0FBQztJQUNyQixPQUFPSDtBQUNUO0FBRU8sTUFBTWQsZUFBZSxDQUFDa0IsZ0JBQWdCVCxVQUFVTDtJQUNyRCxJQUFJLENBQUNjLGdCQUFnQjtRQUNuQjtJQUNGO0lBQ0EsTUFBTUMsVUFBVVYsUUFBUSxDQUFDTCxXQUFXZ0IsWUFBWSxDQUFDLENBQUNsQixLQUFLLEdBQUc7SUFDMURnQixlQUFlRyxTQUFTLENBQUNILGVBQWVJLE1BQU0sR0FBR0g7QUFDbkQ7QUFFTyxNQUFNekIsY0FBYyxDQUFDUztJQUMxQixNQUFNTyxTQUFTQyxPQUFPQyxPQUFPLENBQUNDLE9BQU8sQ0FBQztJQUN0QyxJQUFJSCxRQUFRO1FBQ1ZBLE9BQU9LLGNBQWMsQ0FBQ1osU0FBU2EsSUFBSTtJQUNyQztBQUNGIn0=

}),
2570: (function (__unused_webpack_module, exports) {
"use strict";
/* eslint-env browser */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    clearPlugin: function() {
        return clearPlugin;
    },
    createPluginInstance: function() {
        return createPluginInstance;
    },
    getPluginConfig: function() {
        return getPluginConfig;
    },
    getPluginDestination: function() {
        return getPluginDestination;
    },
    getPluginDuration: function() {
        return getPluginDuration;
    },
    getPluginOrigin: function() {
        return getPluginOrigin;
    },
    renderPlugin: function() {
        return renderPlugin;
    }
});
const FIT_KEY = '--wf-rive-fit';
const ALIGNMENT_KEY = '--wf-rive-alignment';
const queryContainerElement = (elementId)=>document.querySelector(`[data-w-id="${elementId}"]`);
const getFrontendModule = ()=>window.Webflow.require('rive');
const getPluginConfig = (actionItemConfig, key)=>actionItemConfig.value.inputs[key];
const getPluginDuration = ()=>null; // Not used by this plugin
const getPluginOrigin = (refState, actionItem)=>{
    if (refState) return refState;
    const result = {};
    const { inputs = {} } = actionItem.config.value;
    for(const input in inputs)if (inputs[input] == null) result[input] = 0;
    return result;
};
const getPluginDestination = (actionItemConfig)=>actionItemConfig.value.inputs ?? {};
const createPluginInstance = (element, actionItem)=>{
    const selectorGuids = actionItem.config?.target?.selectorGuids || [];
    if (selectorGuids.length > 0) return element;
    // In this case, we define pluginInstance as a reference to the container element
    const pluginElementId = actionItem?.config?.target?.pluginElement;
    return pluginElementId ? queryContainerElement(pluginElementId) : null;
};
const renderPlugin = (containerElement, { PLUGIN_RIVE: props }, actionItem)=>{
    const frontendModule = getFrontendModule();
    if (!frontendModule) return;
    const instance = frontendModule.getInstance(containerElement);
    const StateMachineInputType = frontendModule.rive.StateMachineInputType;
    const { name, inputs = {} } = actionItem.config.value || {};
    function renderRive(riveInstance) {
        if (riveInstance.loaded) {
            render();
        } else {
            // Render instance immediately on load and then clean up handler
            const onLoad = ()=>{
                render();
                riveInstance?.off('load', onLoad);
            };
            riveInstance?.on('load', onLoad);
        }
        function render() {
            const stateMachineInputs = riveInstance.stateMachineInputs(name);
            if (stateMachineInputs == null) return; // exit early since no inputs found
            if (!riveInstance.isPlaying) riveInstance.play(name, false); // set autoplay: false because IX engine is controlling playback.
            if (FIT_KEY in inputs || ALIGNMENT_KEY in inputs) {
                const currentLayout = riveInstance.layout;
                const nextFit = inputs[FIT_KEY] ?? currentLayout.fit;
                const nextAlignment = inputs[ALIGNMENT_KEY] ?? currentLayout.alignment;
                if (nextFit !== currentLayout.fit || nextAlignment !== currentLayout.alignment) {
                    riveInstance.layout = currentLayout.copyWith({
                        fit: nextFit,
                        alignment: nextAlignment
                    });
                }
            }
            for(const inputName in inputs){
                if (inputName === FIT_KEY || inputName === ALIGNMENT_KEY) continue;
                const machineInput = stateMachineInputs.find((m)=>m.name === inputName);
                if (machineInput == null) continue;
                switch(machineInput.type){
                    case StateMachineInputType.Boolean:
                        {
                            if (inputs[inputName] != null) {
                                const booleanValue = Boolean(inputs[inputName]);
                                machineInput.value = booleanValue;
                            }
                            break;
                        }
                    case StateMachineInputType.Number:
                        {
                            const numberValue = props[inputName];
                            if (numberValue != null) machineInput.value = numberValue;
                            break;
                        }
                    case StateMachineInputType.Trigger:
                        {
                            if (inputs[inputName]) machineInput.fire();
                            break;
                        }
                }
            }
        }
    }
    // Render rive if the instance is available
    if (instance?.rive) renderRive(instance.rive);
    else frontendModule.setLoadHandler(containerElement, renderRive);
};
const clearPlugin = (_containerElement, _actionItem)=>null; // Not used by this plugin

//# sourceMappingURL=data:application/json;base64,

}),
2866: (function (__unused_webpack_module, exports) {
"use strict";
/* eslint-env browser */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    clearPlugin: function() {
        return clearPlugin;
    },
    createPluginInstance: function() {
        return createPluginInstance;
    },
    getPluginConfig: function() {
        return getPluginConfig;
    },
    getPluginDestination: function() {
        return getPluginDestination;
    },
    getPluginDuration: function() {
        return getPluginDuration;
    },
    getPluginOrigin: function() {
        return getPluginOrigin;
    },
    renderPlugin: function() {
        return renderPlugin;
    }
});
const queryContainerElement = (elementId)=>document.querySelector(`[data-w-id="${elementId}"]`);
const getFrontendModule = ()=>window.Webflow.require('spline');
const difference = (arr1, arr2)=>arr1.filter((x)=>!arr2.includes(x));
const getPluginConfig = (actionItemConfig, key)=>{
    return actionItemConfig.value[key];
};
const getPluginDuration = ()=>{
    // Not used by this plugin
    return null;
};
const DEFAULT_VALUES = Object.freeze({
    positionX: 0,
    positionY: 0,
    positionZ: 0,
    rotationX: 0,
    rotationY: 0,
    rotationZ: 0,
    scaleX: 1,
    scaleY: 1,
    scaleZ: 1
});
const getPluginOrigin = (refState, actionItem)=>{
    // Determine which props we care about in the destination
    const destination = actionItem.config.value;
    const destinationKeys = Object.keys(destination);
    // Check the current state for any missing origin props
    if (refState) {
        const stateKeys = Object.keys(refState);
        const diffKeys = difference(destinationKeys, stateKeys);
        // If new props are needed, merge new origin values with current state
        if (diffKeys.length) {
            const origin = diffKeys.reduce((result, key)=>{
                result[key] = DEFAULT_VALUES[key];
                return result;
            }, refState);
            return origin;
        }
        // No difference, return current state
        return refState;
    }
    // State doesn't exist so define new origin based on destination
    const origin = destinationKeys.reduce((result, key)=>{
        result[key] = DEFAULT_VALUES[key];
        return result;
    }, {});
    return origin;
};
const getPluginDestination = (actionItemConfig)=>{
    return actionItemConfig.value;
};
const createPluginInstance = (element, actionItem)=>{
    // In this case, we define pluginInstance as a reference to the container element
    const pluginElementId = actionItem?.config?.target?.pluginElement;
    return pluginElementId ? queryContainerElement(pluginElementId) : null;
};
const renderPlugin = (containerElement, refState, actionItem)=>{
    const frontendModule = getFrontendModule();
    if (!frontendModule) return;
    const instance = frontendModule.getInstance(containerElement);
    const objectId = actionItem.config.target.objectId;
    const renderSpline = (spline)=>{
        if (!spline) {
            throw new Error('Invalid spline app passed to renderSpline');
        }
        const obj = objectId && spline.findObjectById(objectId);
        if (!obj) {
            return;
        }
        const { PLUGIN_SPLINE: props } = refState;
        if (props.positionX != null) {
            obj.position.x = props.positionX;
        }
        if (props.positionY != null) {
            obj.position.y = props.positionY;
        }
        if (props.positionZ != null) {
            obj.position.z = props.positionZ;
        }
        if (props.rotationX != null) {
            obj.rotation.x = props.rotationX;
        }
        if (props.rotationY != null) {
            obj.rotation.y = props.rotationY;
        }
        if (props.rotationZ != null) {
            obj.rotation.z = props.rotationZ;
        }
        if (props.scaleX != null) {
            obj.scale.x = props.scaleX;
        }
        if (props.scaleY != null) {
            obj.scale.y = props.scaleY;
        }
        if (props.scaleZ != null) {
            obj.scale.z = props.scaleZ;
        }
    };
    if (instance) {
        // Render spline if the app instance is already loaded
        renderSpline(instance.spline);
    } else {
        // Otherwise, store latest render as a callback to fire when loaded
        frontendModule.setLoadHandler(containerElement, renderSpline);
    }
};
const clearPlugin = ()=>{
    // Not used by this plugin
    return null;
};

//# sourceMappingURL=data:application/json;base64,

}),
1407: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/* eslint-env browser */ // Importing directly to avoid importing the entire shared-utils package.
// eslint-disable-next-line webflow/package-boundaries

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    clearPlugin: function() {
        return clearPlugin;
    },
    createPluginInstance: function() {
        return createPluginInstance;
    },
    getPluginConfig: function() {
        return getPluginConfig;
    },
    getPluginDestination: function() {
        return getPluginDestination;
    },
    getPluginDuration: function() {
        return getPluginDuration;
    },
    getPluginOrigin: function() {
        return getPluginOrigin;
    },
    renderPlugin: function() {
        return renderPlugin;
    }
});
const _normalizeColor = __webpack_require__(380);
const getPluginConfig = (actionItemConfig, key)=>{
    return actionItemConfig.value[key];
};
const getPluginDuration = ()=>{
    // Not used by this plugin
    return null;
};
const getPluginOrigin = (refState, actionItem)=>{
    if (refState) {
        return refState;
    }
    // Determine which props we care about in the destination
    const destination = actionItem.config.value;
    // Look up root variable to parse origin values
    const objectId = actionItem.config.target.objectId;
    const computedValue = getComputedStyle(document.documentElement).getPropertyValue(objectId);
    if (destination.size != null) {
        return {
            size: parseInt(computedValue, 10)
        };
    }
    if (destination.unit === '%' || destination.unit === '-') {
        return {
            size: parseFloat(computedValue)
        };
    }
    if (destination.red != null && destination.green != null && destination.blue != null) {
        return (0, _normalizeColor.normalizeColor)(computedValue);
    }
};
const getPluginDestination = (actionItemConfig)=>{
    return actionItemConfig.value;
};
const createPluginInstance = ()=>{
    // Not used by this plugin
    return null;
};
const variableHandlers = {
    color: {
        match: ({ red, green, blue, alpha })=>[
                red,
                green,
                blue,
                alpha
            ].every((x)=>x != null),
        getValue: ({ red, green, blue, alpha })=>`rgba(${red}, ${green}, ${blue}, ${alpha})`
    },
    // Size, Percentage, and Unitless variables.
    size: {
        match: ({ size })=>size != null,
        getValue: ({ size }, unit)=>{
            switch(unit){
                case '-':
                    return size;
                default:
                    return `${size}${unit}`;
            }
        }
    }
};
const renderPlugin = (_, refState, actionItem)=>{
    const { target: { objectId }, value: { unit } } = actionItem.config;
    const props = refState.PLUGIN_VARIABLE;
    const handler = Object.values(variableHandlers).find((h)=>h.match(props, unit));
    if (handler) {
        document.documentElement.style.setProperty(objectId, handler.getValue(props, unit));
    }
};
const clearPlugin = (ref, actionItem)=>{
    const objectId = actionItem.config.target.objectId;
    document.documentElement.style.removeProperty(objectId);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMlZhcmlhYmxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgYnJvd3NlciAqL1xuXG4vLyBJbXBvcnRpbmcgZGlyZWN0bHkgdG8gYXZvaWQgaW1wb3J0aW5nIHRoZSBlbnRpcmUgc2hhcmVkLXV0aWxzIHBhY2thZ2UuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgd2ViZmxvdy9wYWNrYWdlLWJvdW5kYXJpZXNcbmltcG9ydCB7bm9ybWFsaXplQ29sb3J9IGZyb20gJy4uL3NoYXJlZC11dGlscy9ub3JtYWxpemVDb2xvcic7XG5cbmV4cG9ydCBjb25zdCBnZXRQbHVnaW5Db25maWcgPSAoYWN0aW9uSXRlbUNvbmZpZywga2V5KSA9PiB7XG4gIHJldHVybiBhY3Rpb25JdGVtQ29uZmlnLnZhbHVlW2tleV07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UGx1Z2luRHVyYXRpb24gPSAoKSA9PiB7XG4gIC8vIE5vdCB1c2VkIGJ5IHRoaXMgcGx1Z2luXG4gIHJldHVybiBudWxsO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFBsdWdpbk9yaWdpbiA9IChyZWZTdGF0ZSwgYWN0aW9uSXRlbSkgPT4ge1xuICBpZiAocmVmU3RhdGUpIHtcbiAgICByZXR1cm4gcmVmU3RhdGU7XG4gIH1cblxuICAvLyBEZXRlcm1pbmUgd2hpY2ggcHJvcHMgd2UgY2FyZSBhYm91dCBpbiB0aGUgZGVzdGluYXRpb25cbiAgY29uc3QgZGVzdGluYXRpb24gPSBhY3Rpb25JdGVtLmNvbmZpZy52YWx1ZTtcblxuICAvLyBMb29rIHVwIHJvb3QgdmFyaWFibGUgdG8gcGFyc2Ugb3JpZ2luIHZhbHVlc1xuICBjb25zdCBvYmplY3RJZCA9IGFjdGlvbkl0ZW0uY29uZmlnLnRhcmdldC5vYmplY3RJZDtcbiAgY29uc3QgY29tcHV0ZWRWYWx1ZSA9IGdldENvbXB1dGVkU3R5bGUoXG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XG4gICkuZ2V0UHJvcGVydHlWYWx1ZShvYmplY3RJZCk7XG5cbiAgaWYgKGRlc3RpbmF0aW9uLnNpemUgIT0gbnVsbCkge1xuICAgIHJldHVybiB7c2l6ZTogcGFyc2VJbnQoY29tcHV0ZWRWYWx1ZSwgMTApfTtcbiAgfVxuXG4gIGlmIChkZXN0aW5hdGlvbi51bml0ID09PSAnJScgfHwgZGVzdGluYXRpb24udW5pdCA9PT0gJy0nKSB7XG4gICAgcmV0dXJuIHtzaXplOiBwYXJzZUZsb2F0KGNvbXB1dGVkVmFsdWUpfTtcbiAgfVxuXG4gIGlmIChcbiAgICBkZXN0aW5hdGlvbi5yZWQgIT0gbnVsbCAmJlxuICAgIGRlc3RpbmF0aW9uLmdyZWVuICE9IG51bGwgJiZcbiAgICBkZXN0aW5hdGlvbi5ibHVlICE9IG51bGxcbiAgKSB7XG4gICAgcmV0dXJuIG5vcm1hbGl6ZUNvbG9yKGNvbXB1dGVkVmFsdWUpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UGx1Z2luRGVzdGluYXRpb24gPSAoYWN0aW9uSXRlbUNvbmZpZykgPT4ge1xuICByZXR1cm4gYWN0aW9uSXRlbUNvbmZpZy52YWx1ZTtcbn07XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVQbHVnaW5JbnN0YW5jZSA9ICgpID0+IHtcbiAgLy8gTm90IHVzZWQgYnkgdGhpcyBwbHVnaW5cbiAgcmV0dXJuIG51bGw7XG59O1xuXG5jb25zdCB2YXJpYWJsZUhhbmRsZXJzID0ge1xuICBjb2xvcjoge1xuICAgIG1hdGNoOiAoe3JlZCwgZ3JlZW4sIGJsdWUsIGFscGhhfSkgPT5cbiAgICAgIFtyZWQsIGdyZWVuLCBibHVlLCBhbHBoYV0uZXZlcnkoKHgpID0+IHggIT0gbnVsbCksXG4gICAgZ2V0VmFsdWU6ICh7cmVkLCBncmVlbiwgYmx1ZSwgYWxwaGF9KSA9PlxuICAgICAgYHJnYmEoJHtyZWR9LCAke2dyZWVufSwgJHtibHVlfSwgJHthbHBoYX0pYCxcbiAgfSxcblxuICAvLyBTaXplLCBQZXJjZW50YWdlLCBhbmQgVW5pdGxlc3MgdmFyaWFibGVzLlxuICBzaXplOiB7XG4gICAgbWF0Y2g6ICh7c2l6ZX0pID0+IHNpemUgIT0gbnVsbCxcbiAgICBnZXRWYWx1ZTogKHtzaXplfSwgdW5pdCkgPT4ge1xuICAgICAgc3dpdGNoICh1bml0KSB7XG4gICAgICAgIGNhc2UgJy0nOlxuICAgICAgICAgIHJldHVybiBzaXplO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJldHVybiBgJHtzaXplfSR7dW5pdH1gO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgcmVuZGVyUGx1Z2luID0gKF8sIHJlZlN0YXRlLCBhY3Rpb25JdGVtKSA9PiB7XG4gIGNvbnN0IHtcbiAgICB0YXJnZXQ6IHtvYmplY3RJZH0sXG4gICAgdmFsdWU6IHt1bml0fSxcbiAgfSA9IGFjdGlvbkl0ZW0uY29uZmlnO1xuICBjb25zdCBwcm9wcyA9IHJlZlN0YXRlLlBMVUdJTl9WQVJJQUJMRTtcblxuICBjb25zdCBoYW5kbGVyID0gT2JqZWN0LnZhbHVlcyh2YXJpYWJsZUhhbmRsZXJzKS5maW5kKChoKSA9PlxuICAgIGgubWF0Y2gocHJvcHMsIHVuaXQpXG4gICk7XG5cbiAgaWYgKGhhbmRsZXIpIHtcbiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoXG4gICAgICBvYmplY3RJZCxcbiAgICAgIGhhbmRsZXIuZ2V0VmFsdWUocHJvcHMsIHVuaXQpXG4gICAgKTtcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGNsZWFyUGx1Z2luID0gKHJlZiwgYWN0aW9uSXRlbSkgPT4ge1xuICBjb25zdCBvYmplY3RJZCA9IGFjdGlvbkl0ZW0uY29uZmlnLnRhcmdldC5vYmplY3RJZDtcbiAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnJlbW92ZVByb3BlcnR5KG9iamVjdElkKTtcbn07XG4iXSwibmFtZXMiOlsiY2xlYXJQbHVnaW4iLCJjcmVhdGVQbHVnaW5JbnN0YW5jZSIsImdldFBsdWdpbkNvbmZpZyIsImdldFBsdWdpbkRlc3RpbmF0aW9uIiwiZ2V0UGx1Z2luRHVyYXRpb24iLCJnZXRQbHVnaW5PcmlnaW4iLCJyZW5kZXJQbHVnaW4iLCJhY3Rpb25JdGVtQ29uZmlnIiwia2V5IiwidmFsdWUiLCJyZWZTdGF0ZSIsImFjdGlvbkl0ZW0iLCJkZXN0aW5hdGlvbiIsImNvbmZpZyIsIm9iamVjdElkIiwidGFyZ2V0IiwiY29tcHV0ZWRWYWx1ZSIsImdldENvbXB1dGVkU3R5bGUiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImdldFByb3BlcnR5VmFsdWUiLCJzaXplIiwicGFyc2VJbnQiLCJ1bml0IiwicGFyc2VGbG9hdCIsInJlZCIsImdyZWVuIiwiYmx1ZSIsIm5vcm1hbGl6ZUNvbG9yIiwidmFyaWFibGVIYW5kbGVycyIsImNvbG9yIiwibWF0Y2giLCJhbHBoYSIsImV2ZXJ5IiwieCIsImdldFZhbHVlIiwiXyIsInByb3BzIiwiUExVR0lOX1ZBUklBQkxFIiwiaGFuZGxlciIsIk9iamVjdCIsInZhbHVlcyIsImZpbmQiLCJoIiwic3R5bGUiLCJzZXRQcm9wZXJ0eSIsInJlZiIsInJlbW92ZVByb3BlcnR5Il0sIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0IsR0FFdEIseUVBQXlFO0FBQ3pFLHNEQUFzRDs7Ozs7Ozs7Ozs7O0lBNkZ6Q0EsV0FBVztlQUFYQTs7SUE5Q0FDLG9CQUFvQjtlQUFwQkE7O0lBNUNBQyxlQUFlO2VBQWZBOztJQXdDQUMsb0JBQW9CO2VBQXBCQTs7SUFwQ0FDLGlCQUFpQjtlQUFqQkE7O0lBS0FDLGVBQWU7ZUFBZkE7O0lBOERBQyxZQUFZO2VBQVpBOzs7Z0NBekVnQjtBQUV0QixNQUFNSixrQkFBa0IsQ0FBQ0ssa0JBQWtCQztJQUNoRCxPQUFPRCxpQkFBaUJFLEtBQUssQ0FBQ0QsSUFBSTtBQUNwQztBQUVPLE1BQU1KLG9CQUFvQjtJQUMvQiwwQkFBMEI7SUFDMUIsT0FBTztBQUNUO0FBRU8sTUFBTUMsa0JBQWtCLENBQUNLLFVBQVVDO0lBQ3hDLElBQUlELFVBQVU7UUFDWixPQUFPQTtJQUNUO0lBRUEseURBQXlEO0lBQ3pELE1BQU1FLGNBQWNELFdBQVdFLE1BQU0sQ0FBQ0osS0FBSztJQUUzQywrQ0FBK0M7SUFDL0MsTUFBTUssV0FBV0gsV0FBV0UsTUFBTSxDQUFDRSxNQUFNLENBQUNELFFBQVE7SUFDbEQsTUFBTUUsZ0JBQWdCQyxpQkFDcEJDLFNBQVNDLGVBQWUsRUFDeEJDLGdCQUFnQixDQUFDTjtJQUVuQixJQUFJRixZQUFZUyxJQUFJLElBQUksTUFBTTtRQUM1QixPQUFPO1lBQUNBLE1BQU1DLFNBQVNOLGVBQWU7UUFBRztJQUMzQztJQUVBLElBQUlKLFlBQVlXLElBQUksS0FBSyxPQUFPWCxZQUFZVyxJQUFJLEtBQUssS0FBSztRQUN4RCxPQUFPO1lBQUNGLE1BQU1HLFdBQVdSO1FBQWM7SUFDekM7SUFFQSxJQUNFSixZQUFZYSxHQUFHLElBQUksUUFDbkJiLFlBQVljLEtBQUssSUFBSSxRQUNyQmQsWUFBWWUsSUFBSSxJQUFJLE1BQ3BCO1FBQ0EsT0FBT0MsSUFBQUEsOEJBQWMsRUFBQ1o7SUFDeEI7QUFDRjtBQUVPLE1BQU1iLHVCQUF1QixDQUFDSTtJQUNuQyxPQUFPQSxpQkFBaUJFLEtBQUs7QUFDL0I7QUFFTyxNQUFNUix1QkFBdUI7SUFDbEMsMEJBQTBCO0lBQzFCLE9BQU87QUFDVDtBQUVBLE1BQU00QixtQkFBbUI7SUFDdkJDLE9BQU87UUFDTEMsT0FBTyxDQUFDLEVBQUNOLEdBQUcsRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUVLLEtBQUssRUFBQyxHQUMvQjtnQkFBQ1A7Z0JBQUtDO2dCQUFPQztnQkFBTUs7YUFBTSxDQUFDQyxLQUFLLENBQUMsQ0FBQ0MsSUFBTUEsS0FBSztRQUM5Q0MsVUFBVSxDQUFDLEVBQUNWLEdBQUcsRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUVLLEtBQUssRUFBQyxHQUNsQyxDQUFDLEtBQUssRUFBRVAsSUFBSSxFQUFFLEVBQUVDLE1BQU0sRUFBRSxFQUFFQyxLQUFLLEVBQUUsRUFBRUssTUFBTSxDQUFDLENBQUM7SUFDL0M7SUFFQSw0Q0FBNEM7SUFDNUNYLE1BQU07UUFDSlUsT0FBTyxDQUFDLEVBQUNWLElBQUksRUFBQyxHQUFLQSxRQUFRO1FBQzNCYyxVQUFVLENBQUMsRUFBQ2QsSUFBSSxFQUFDLEVBQUVFO1lBQ2pCLE9BQVFBO2dCQUNOLEtBQUs7b0JBQ0gsT0FBT0Y7Z0JBQ1Q7b0JBQ0UsT0FBTyxDQUFDLEVBQUVBLEtBQUssRUFBRUUsS0FBSyxDQUFDO1lBQzNCO1FBQ0Y7SUFDRjtBQUNGO0FBRU8sTUFBTWpCLGVBQWUsQ0FBQzhCLEdBQUcxQixVQUFVQztJQUN4QyxNQUFNLEVBQ0pJLFFBQVEsRUFBQ0QsUUFBUSxFQUFDLEVBQ2xCTCxPQUFPLEVBQUNjLElBQUksRUFBQyxFQUNkLEdBQUdaLFdBQVdFLE1BQU07SUFDckIsTUFBTXdCLFFBQVEzQixTQUFTNEIsZUFBZTtJQUV0QyxNQUFNQyxVQUFVQyxPQUFPQyxNQUFNLENBQUNaLGtCQUFrQmEsSUFBSSxDQUFDLENBQUNDLElBQ3BEQSxFQUFFWixLQUFLLENBQUNNLE9BQU9kO0lBR2pCLElBQUlnQixTQUFTO1FBQ1hyQixTQUFTQyxlQUFlLENBQUN5QixLQUFLLENBQUNDLFdBQVcsQ0FDeEMvQixVQUNBeUIsUUFBUUosUUFBUSxDQUFDRSxPQUFPZDtJQUU1QjtBQUNGO0FBRU8sTUFBTXZCLGNBQWMsQ0FBQzhDLEtBQUtuQztJQUMvQixNQUFNRyxXQUFXSCxXQUFXRSxNQUFNLENBQUNFLE1BQU0sQ0FBQ0QsUUFBUTtJQUNsREksU0FBU0MsZUFBZSxDQUFDeUIsS0FBSyxDQUFDRyxjQUFjLENBQUNqQztBQUNoRCJ9

}),
3690: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "pluginMethodMap", ({
    enumerable: true,
    get: function() {
        return pluginMethodMap;
    }
}));
const _sharedconstants = __webpack_require__(7087);
const _IX2Lottie = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(7377));
const _IX2Spline = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(2866));
const _IX2Rive = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(2570));
const _IX2Variable = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(1407));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const pluginMethodMap = new Map([
    [
        _sharedconstants.ActionTypeConsts.PLUGIN_LOTTIE,
        {
            ..._IX2Lottie
        }
    ],
    [
        _sharedconstants.ActionTypeConsts.PLUGIN_SPLINE,
        {
            ..._IX2Spline
        }
    ],
    [
        _sharedconstants.ActionTypeConsts.PLUGIN_RIVE,
        {
            ..._IX2Rive
        }
    ],
    [
        _sharedconstants.ActionTypeConsts.PLUGIN_VARIABLE,
        {
            ..._IX2Variable
        }
    ]
]);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWN0aW9uVHlwZUNvbnN0c30gZnJvbSAnQHBhY2thZ2VzL3N5c3RlbXMvaXgyL3NoYXJlZC1jb25zdGFudHMnO1xuXG5pbXBvcnQgKiBhcyBsb3R0aWUgZnJvbSAnLi9JWDJMb3R0aWUnO1xuaW1wb3J0ICogYXMgc3BsaW5lIGZyb20gJy4vSVgyU3BsaW5lJztcbmltcG9ydCAqIGFzIHJpdmUgZnJvbSAnLi9JWDJSaXZlJztcbmltcG9ydCAqIGFzIHZhcmlhYmxlIGZyb20gJy4vSVgyVmFyaWFibGUnO1xuXG5leHBvcnQgdHlwZSBQbHVnaW5UeXBlID1cbiAgfCB0eXBlb2YgQWN0aW9uVHlwZUNvbnN0cy5QTFVHSU5fTE9UVElFXG4gIHwgdHlwZW9mIEFjdGlvblR5cGVDb25zdHMuUExVR0lOX1NQTElORVxuICB8IHR5cGVvZiBBY3Rpb25UeXBlQ29uc3RzLlBMVUdJTl9WQVJJQUJMRVxuICB8IHR5cGVvZiBBY3Rpb25UeXBlQ29uc3RzLlBMVUdJTl9SSVZFO1xuXG5leHBvcnQgY29uc3QgcGx1Z2luTWV0aG9kTWFwID0gbmV3IE1hcChbXG4gIFtBY3Rpb25UeXBlQ29uc3RzLlBMVUdJTl9MT1RUSUUsIHsuLi5sb3R0aWV9XSxcbiAgW0FjdGlvblR5cGVDb25zdHMuUExVR0lOX1NQTElORSwgey4uLnNwbGluZX1dLFxuICBbQWN0aW9uVHlwZUNvbnN0cy5QTFVHSU5fUklWRSwgey4uLnJpdmV9XSxcbiAgW0FjdGlvblR5cGVDb25zdHMuUExVR0lOX1ZBUklBQkxFLCB7Li4udmFyaWFibGV9XSxcbl0pO1xuIl0sIm5hbWVzIjpbInBsdWdpbk1ldGhvZE1hcCIsIk1hcCIsIkFjdGlvblR5cGVDb25zdHMiLCJQTFVHSU5fTE9UVElFIiwibG90dGllIiwiUExVR0lOX1NQTElORSIsInNwbGluZSIsIlBMVUdJTl9SSVZFIiwicml2ZSIsIlBMVUdJTl9WQVJJQUJMRSIsInZhcmlhYmxlIl0sIm1hcHBpbmdzIjoiOzs7OytCQWFhQTs7O2VBQUFBOzs7aUNBYmtCO21FQUVQO21FQUNBO2lFQUNGO3FFQUNJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRbkIsTUFBTUEsa0JBQWtCLElBQUlDLElBQUk7SUFDckM7UUFBQ0MsaUNBQWdCLENBQUNDLGFBQWE7UUFBRTtZQUFDLEdBQUdDLFVBQU07UUFBQTtLQUFFO0lBQzdDO1FBQUNGLGlDQUFnQixDQUFDRyxhQUFhO1FBQUU7WUFBQyxHQUFHQyxVQUFNO1FBQUE7S0FBRTtJQUM3QztRQUFDSixpQ0FBZ0IsQ0FBQ0ssV0FBVztRQUFFO1lBQUMsR0FBR0MsUUFBSTtRQUFBO0tBQUU7SUFDekM7UUFBQ04saUNBQWdCLENBQUNPLGVBQWU7UUFBRTtZQUFDLEdBQUdDLFlBQVE7UUFBQTtLQUFFO0NBQ2xEIn0=

}),
8023: (function (__unused_webpack_module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    IX2_ACTION_LIST_PLAYBACK_CHANGED: function() {
        return IX2_ACTION_LIST_PLAYBACK_CHANGED;
    },
    IX2_ANIMATION_FRAME_CHANGED: function() {
        return IX2_ANIMATION_FRAME_CHANGED;
    },
    IX2_CLEAR_REQUESTED: function() {
        return IX2_CLEAR_REQUESTED;
    },
    IX2_ELEMENT_STATE_CHANGED: function() {
        return IX2_ELEMENT_STATE_CHANGED;
    },
    IX2_EVENT_LISTENER_ADDED: function() {
        return IX2_EVENT_LISTENER_ADDED;
    },
    IX2_EVENT_STATE_CHANGED: function() {
        return IX2_EVENT_STATE_CHANGED;
    },
    IX2_INSTANCE_ADDED: function() {
        return IX2_INSTANCE_ADDED;
    },
    IX2_INSTANCE_REMOVED: function() {
        return IX2_INSTANCE_REMOVED;
    },
    IX2_INSTANCE_STARTED: function() {
        return IX2_INSTANCE_STARTED;
    },
    IX2_MEDIA_QUERIES_DEFINED: function() {
        return IX2_MEDIA_QUERIES_DEFINED;
    },
    IX2_PARAMETER_CHANGED: function() {
        return IX2_PARAMETER_CHANGED;
    },
    IX2_PLAYBACK_REQUESTED: function() {
        return IX2_PLAYBACK_REQUESTED;
    },
    IX2_PREVIEW_REQUESTED: function() {
        return IX2_PREVIEW_REQUESTED;
    },
    IX2_RAW_DATA_IMPORTED: function() {
        return IX2_RAW_DATA_IMPORTED;
    },
    IX2_SESSION_INITIALIZED: function() {
        return IX2_SESSION_INITIALIZED;
    },
    IX2_SESSION_STARTED: function() {
        return IX2_SESSION_STARTED;
    },
    IX2_SESSION_STOPPED: function() {
        return IX2_SESSION_STOPPED;
    },
    IX2_STOP_REQUESTED: function() {
        return IX2_STOP_REQUESTED;
    },
    IX2_TEST_FRAME_RENDERED: function() {
        return IX2_TEST_FRAME_RENDERED;
    },
    IX2_VIEWPORT_WIDTH_CHANGED: function() {
        return IX2_VIEWPORT_WIDTH_CHANGED;
    }
});
const IX2_RAW_DATA_IMPORTED = 'IX2_RAW_DATA_IMPORTED';
const IX2_SESSION_INITIALIZED = 'IX2_SESSION_INITIALIZED';
const IX2_SESSION_STARTED = 'IX2_SESSION_STARTED';
const IX2_SESSION_STOPPED = 'IX2_SESSION_STOPPED';
const IX2_PREVIEW_REQUESTED = 'IX2_PREVIEW_REQUESTED';
const IX2_PLAYBACK_REQUESTED = 'IX2_PLAYBACK_REQUESTED';
const IX2_STOP_REQUESTED = 'IX2_STOP_REQUESTED';
const IX2_CLEAR_REQUESTED = 'IX2_CLEAR_REQUESTED';
const IX2_EVENT_LISTENER_ADDED = 'IX2_EVENT_LISTENER_ADDED';
const IX2_EVENT_STATE_CHANGED = 'IX2_EVENT_STATE_CHANGED';
const IX2_ANIMATION_FRAME_CHANGED = 'IX2_ANIMATION_FRAME_CHANGED';
const IX2_PARAMETER_CHANGED = 'IX2_PARAMETER_CHANGED';
const IX2_INSTANCE_ADDED = 'IX2_INSTANCE_ADDED';
const IX2_INSTANCE_STARTED = 'IX2_INSTANCE_STARTED';
const IX2_INSTANCE_REMOVED = 'IX2_INSTANCE_REMOVED';
const IX2_ELEMENT_STATE_CHANGED = 'IX2_ELEMENT_STATE_CHANGED';
const IX2_ACTION_LIST_PLAYBACK_CHANGED = 'IX2_ACTION_LIST_PLAYBACK_CHANGED';
const IX2_VIEWPORT_WIDTH_CHANGED = 'IX2_VIEWPORT_WIDTH_CHANGED';
const IX2_MEDIA_QUERIES_DEFINED = 'IX2_MEDIA_QUERIES_DEFINED';
const IX2_TEST_FRAME_RENDERED = 'IX2_TEST_FRAME_RENDERED';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMkVuZ2luZUFjdGlvblR5cGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBJWDJfUkFXX0RBVEFfSU1QT1JURUQgPSAnSVgyX1JBV19EQVRBX0lNUE9SVEVEJztcbmV4cG9ydCBjb25zdCBJWDJfU0VTU0lPTl9JTklUSUFMSVpFRCA9ICdJWDJfU0VTU0lPTl9JTklUSUFMSVpFRCc7XG5leHBvcnQgY29uc3QgSVgyX1NFU1NJT05fU1RBUlRFRCA9ICdJWDJfU0VTU0lPTl9TVEFSVEVEJztcbmV4cG9ydCBjb25zdCBJWDJfU0VTU0lPTl9TVE9QUEVEID0gJ0lYMl9TRVNTSU9OX1NUT1BQRUQnO1xuZXhwb3J0IGNvbnN0IElYMl9QUkVWSUVXX1JFUVVFU1RFRCA9ICdJWDJfUFJFVklFV19SRVFVRVNURUQnO1xuZXhwb3J0IGNvbnN0IElYMl9QTEFZQkFDS19SRVFVRVNURUQgPSAnSVgyX1BMQVlCQUNLX1JFUVVFU1RFRCc7XG5leHBvcnQgY29uc3QgSVgyX1NUT1BfUkVRVUVTVEVEID0gJ0lYMl9TVE9QX1JFUVVFU1RFRCc7XG5leHBvcnQgY29uc3QgSVgyX0NMRUFSX1JFUVVFU1RFRCA9ICdJWDJfQ0xFQVJfUkVRVUVTVEVEJztcbmV4cG9ydCBjb25zdCBJWDJfRVZFTlRfTElTVEVORVJfQURERUQgPSAnSVgyX0VWRU5UX0xJU1RFTkVSX0FEREVEJztcbmV4cG9ydCBjb25zdCBJWDJfRVZFTlRfU1RBVEVfQ0hBTkdFRCA9ICdJWDJfRVZFTlRfU1RBVEVfQ0hBTkdFRCc7XG5leHBvcnQgY29uc3QgSVgyX0FOSU1BVElPTl9GUkFNRV9DSEFOR0VEID0gJ0lYMl9BTklNQVRJT05fRlJBTUVfQ0hBTkdFRCc7XG5leHBvcnQgY29uc3QgSVgyX1BBUkFNRVRFUl9DSEFOR0VEID0gJ0lYMl9QQVJBTUVURVJfQ0hBTkdFRCc7XG5leHBvcnQgY29uc3QgSVgyX0lOU1RBTkNFX0FEREVEID0gJ0lYMl9JTlNUQU5DRV9BRERFRCc7XG5leHBvcnQgY29uc3QgSVgyX0lOU1RBTkNFX1NUQVJURUQgPSAnSVgyX0lOU1RBTkNFX1NUQVJURUQnO1xuZXhwb3J0IGNvbnN0IElYMl9JTlNUQU5DRV9SRU1PVkVEID0gJ0lYMl9JTlNUQU5DRV9SRU1PVkVEJztcbmV4cG9ydCBjb25zdCBJWDJfRUxFTUVOVF9TVEFURV9DSEFOR0VEID0gJ0lYMl9FTEVNRU5UX1NUQVRFX0NIQU5HRUQnO1xuZXhwb3J0IGNvbnN0IElYMl9BQ1RJT05fTElTVF9QTEFZQkFDS19DSEFOR0VEID1cbiAgJ0lYMl9BQ1RJT05fTElTVF9QTEFZQkFDS19DSEFOR0VEJztcbmV4cG9ydCBjb25zdCBJWDJfVklFV1BPUlRfV0lEVEhfQ0hBTkdFRCA9ICdJWDJfVklFV1BPUlRfV0lEVEhfQ0hBTkdFRCc7XG5leHBvcnQgY29uc3QgSVgyX01FRElBX1FVRVJJRVNfREVGSU5FRCA9ICdJWDJfTUVESUFfUVVFUklFU19ERUZJTkVEJztcbmV4cG9ydCBjb25zdCBJWDJfVEVTVF9GUkFNRV9SRU5ERVJFRCA9ICdJWDJfVEVTVF9GUkFNRV9SRU5ERVJFRCc7XG4iXSwibmFtZXMiOlsiSVgyX0FDVElPTl9MSVNUX1BMQVlCQUNLX0NIQU5HRUQiLCJJWDJfQU5JTUFUSU9OX0ZSQU1FX0NIQU5HRUQiLCJJWDJfQ0xFQVJfUkVRVUVTVEVEIiwiSVgyX0VMRU1FTlRfU1RBVEVfQ0hBTkdFRCIsIklYMl9FVkVOVF9MSVNURU5FUl9BRERFRCIsIklYMl9FVkVOVF9TVEFURV9DSEFOR0VEIiwiSVgyX0lOU1RBTkNFX0FEREVEIiwiSVgyX0lOU1RBTkNFX1JFTU9WRUQiLCJJWDJfSU5TVEFOQ0VfU1RBUlRFRCIsIklYMl9NRURJQV9RVUVSSUVTX0RFRklORUQiLCJJWDJfUEFSQU1FVEVSX0NIQU5HRUQiLCJJWDJfUExBWUJBQ0tfUkVRVUVTVEVEIiwiSVgyX1BSRVZJRVdfUkVRVUVTVEVEIiwiSVgyX1JBV19EQVRBX0lNUE9SVEVEIiwiSVgyX1NFU1NJT05fSU5JVElBTElaRUQiLCJJWDJfU0VTU0lPTl9TVEFSVEVEIiwiSVgyX1NFU1NJT05fU1RPUFBFRCIsIklYMl9TVE9QX1JFUVVFU1RFRCIsIklYMl9URVNUX0ZSQU1FX1JFTkRFUkVEIiwiSVgyX1ZJRVdQT1JUX1dJRFRIX0NIQU5HRUQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBZ0JhQSxnQ0FBZ0M7ZUFBaENBOztJQU5BQywyQkFBMkI7ZUFBM0JBOztJQUhBQyxtQkFBbUI7ZUFBbkJBOztJQVFBQyx5QkFBeUI7ZUFBekJBOztJQVBBQyx3QkFBd0I7ZUFBeEJBOztJQUNBQyx1QkFBdUI7ZUFBdkJBOztJQUdBQyxrQkFBa0I7ZUFBbEJBOztJQUVBQyxvQkFBb0I7ZUFBcEJBOztJQURBQyxvQkFBb0I7ZUFBcEJBOztJQU1BQyx5QkFBeUI7ZUFBekJBOztJQVJBQyxxQkFBcUI7ZUFBckJBOztJQU5BQyxzQkFBc0I7ZUFBdEJBOztJQURBQyxxQkFBcUI7ZUFBckJBOztJQUpBQyxxQkFBcUI7ZUFBckJBOztJQUNBQyx1QkFBdUI7ZUFBdkJBOztJQUNBQyxtQkFBbUI7ZUFBbkJBOztJQUNBQyxtQkFBbUI7ZUFBbkJBOztJQUdBQyxrQkFBa0I7ZUFBbEJBOztJQWNBQyx1QkFBdUI7ZUFBdkJBOztJQUZBQywwQkFBMEI7ZUFBMUJBOzs7QUFsQk4sTUFBTU4sd0JBQXdCO0FBQzlCLE1BQU1DLDBCQUEwQjtBQUNoQyxNQUFNQyxzQkFBc0I7QUFDNUIsTUFBTUMsc0JBQXNCO0FBQzVCLE1BQU1KLHdCQUF3QjtBQUM5QixNQUFNRCx5QkFBeUI7QUFDL0IsTUFBTU0scUJBQXFCO0FBQzNCLE1BQU1mLHNCQUFzQjtBQUM1QixNQUFNRSwyQkFBMkI7QUFDakMsTUFBTUMsMEJBQTBCO0FBQ2hDLE1BQU1KLDhCQUE4QjtBQUNwQyxNQUFNUyx3QkFBd0I7QUFDOUIsTUFBTUoscUJBQXFCO0FBQzNCLE1BQU1FLHVCQUF1QjtBQUM3QixNQUFNRCx1QkFBdUI7QUFDN0IsTUFBTUosNEJBQTRCO0FBQ2xDLE1BQU1ILG1DQUNYO0FBQ0ssTUFBTW1CLDZCQUE2QjtBQUNuQyxNQUFNViw0QkFBNEI7QUFDbEMsTUFBTVMsMEJBQTBCIn0=

}),
2686: (function (__unused_webpack_module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ABSTRACT_NODE: function() {
        return ABSTRACT_NODE;
    },
    AUTO: function() {
        return AUTO;
    },
    BACKGROUND: function() {
        return BACKGROUND;
    },
    BACKGROUND_COLOR: function() {
        return BACKGROUND_COLOR;
    },
    BAR_DELIMITER: function() {
        return BAR_DELIMITER;
    },
    BORDER_COLOR: function() {
        return BORDER_COLOR;
    },
    BOUNDARY_SELECTOR: function() {
        return BOUNDARY_SELECTOR;
    },
    CHILDREN: function() {
        return CHILDREN;
    },
    COLON_DELIMITER: function() {
        return COLON_DELIMITER;
    },
    COLOR: function() {
        return COLOR;
    },
    COMMA_DELIMITER: function() {
        return COMMA_DELIMITER;
    },
    CONFIG_UNIT: function() {
        return CONFIG_UNIT;
    },
    CONFIG_VALUE: function() {
        return CONFIG_VALUE;
    },
    CONFIG_X_UNIT: function() {
        return CONFIG_X_UNIT;
    },
    CONFIG_X_VALUE: function() {
        return CONFIG_X_VALUE;
    },
    CONFIG_Y_UNIT: function() {
        return CONFIG_Y_UNIT;
    },
    CONFIG_Y_VALUE: function() {
        return CONFIG_Y_VALUE;
    },
    CONFIG_Z_UNIT: function() {
        return CONFIG_Z_UNIT;
    },
    CONFIG_Z_VALUE: function() {
        return CONFIG_Z_VALUE;
    },
    DISPLAY: function() {
        return DISPLAY;
    },
    FILTER: function() {
        return FILTER;
    },
    FLEX: function() {
        return FLEX;
    },
    FONT_VARIATION_SETTINGS: function() {
        return FONT_VARIATION_SETTINGS;
    },
    HEIGHT: function() {
        return HEIGHT;
    },
    HTML_ELEMENT: function() {
        return HTML_ELEMENT;
    },
    IMMEDIATE_CHILDREN: function() {
        return IMMEDIATE_CHILDREN;
    },
    IX2_ID_DELIMITER: function() {
        return IX2_ID_DELIMITER;
    },
    OPACITY: function() {
        return OPACITY;
    },
    PARENT: function() {
        return PARENT;
    },
    PLAIN_OBJECT: function() {
        return PLAIN_OBJECT;
    },
    PRESERVE_3D: function() {
        return PRESERVE_3D;
    },
    RENDER_GENERAL: function() {
        return RENDER_GENERAL;
    },
    RENDER_PLUGIN: function() {
        return RENDER_PLUGIN;
    },
    RENDER_STYLE: function() {
        return RENDER_STYLE;
    },
    RENDER_TRANSFORM: function() {
        return RENDER_TRANSFORM;
    },
    ROTATE_X: function() {
        return ROTATE_X;
    },
    ROTATE_Y: function() {
        return ROTATE_Y;
    },
    ROTATE_Z: function() {
        return ROTATE_Z;
    },
    SCALE_3D: function() {
        return SCALE_3D;
    },
    SCALE_X: function() {
        return SCALE_X;
    },
    SCALE_Y: function() {
        return SCALE_Y;
    },
    SCALE_Z: function() {
        return SCALE_Z;
    },
    SIBLINGS: function() {
        return SIBLINGS;
    },
    SKEW: function() {
        return SKEW;
    },
    SKEW_X: function() {
        return SKEW_X;
    },
    SKEW_Y: function() {
        return SKEW_Y;
    },
    TRANSFORM: function() {
        return TRANSFORM;
    },
    TRANSLATE_3D: function() {
        return TRANSLATE_3D;
    },
    TRANSLATE_X: function() {
        return TRANSLATE_X;
    },
    TRANSLATE_Y: function() {
        return TRANSLATE_Y;
    },
    TRANSLATE_Z: function() {
        return TRANSLATE_Z;
    },
    WF_PAGE: function() {
        return WF_PAGE;
    },
    WIDTH: function() {
        return WIDTH;
    },
    WILL_CHANGE: function() {
        return WILL_CHANGE;
    },
    W_MOD_IX: function() {
        return W_MOD_IX;
    },
    W_MOD_JS: function() {
        return W_MOD_JS;
    }
});
const IX2_ID_DELIMITER = '|';
const WF_PAGE = 'data-wf-page';
const W_MOD_JS = 'w-mod-js';
const W_MOD_IX = 'w-mod-ix';
const BOUNDARY_SELECTOR = '.w-dyn-item';
const CONFIG_X_VALUE = 'xValue';
const CONFIG_Y_VALUE = 'yValue';
const CONFIG_Z_VALUE = 'zValue';
const CONFIG_VALUE = 'value';
const CONFIG_X_UNIT = 'xUnit';
const CONFIG_Y_UNIT = 'yUnit';
const CONFIG_Z_UNIT = 'zUnit';
const CONFIG_UNIT = 'unit';
const TRANSFORM = 'transform';
const TRANSLATE_X = 'translateX';
const TRANSLATE_Y = 'translateY';
const TRANSLATE_Z = 'translateZ';
const TRANSLATE_3D = 'translate3d';
const SCALE_X = 'scaleX';
const SCALE_Y = 'scaleY';
const SCALE_Z = 'scaleZ';
const SCALE_3D = 'scale3d';
const ROTATE_X = 'rotateX';
const ROTATE_Y = 'rotateY';
const ROTATE_Z = 'rotateZ';
const SKEW = 'skew';
const SKEW_X = 'skewX';
const SKEW_Y = 'skewY';
const OPACITY = 'opacity';
const FILTER = 'filter';
const FONT_VARIATION_SETTINGS = 'font-variation-settings';
const WIDTH = 'width';
const HEIGHT = 'height';
const BACKGROUND_COLOR = 'backgroundColor';
const BACKGROUND = 'background';
const BORDER_COLOR = 'borderColor';
const COLOR = 'color';
const DISPLAY = 'display';
const FLEX = 'flex';
const WILL_CHANGE = 'willChange';
const AUTO = 'AUTO';
const COMMA_DELIMITER = ',';
const COLON_DELIMITER = ':';
const BAR_DELIMITER = '|';
const CHILDREN = 'CHILDREN';
const IMMEDIATE_CHILDREN = 'IMMEDIATE_CHILDREN';
const SIBLINGS = 'SIBLINGS';
const PARENT = 'PARENT';
const PRESERVE_3D = 'preserve-3d';
const HTML_ELEMENT = 'HTML_ELEMENT';
const PLAIN_OBJECT = 'PLAIN_OBJECT';
const ABSTRACT_NODE = 'ABSTRACT_NODE';
const RENDER_TRANSFORM = 'RENDER_TRANSFORM';
const RENDER_GENERAL = 'RENDER_GENERAL';
const RENDER_STYLE = 'RENDER_STYLE';
const RENDER_PLUGIN = 'RENDER_PLUGIN';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMkVuZ2luZUNvbnN0YW50cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgSVgyX0lEX0RFTElNSVRFUiA9ICd8Jztcbi8qKlxuICogU3RvcmVzIHBhZ2VJZCBvZiB0aGUgY3VycmVudCBwYWdlLCBzbyBpdCBjYW4gYmUgYWNjZXNzZWQgaW4gdGhlIElYMkJyb3dzZXJBcGlcbiAqL1xuZXhwb3J0IGNvbnN0IFdGX1BBR0UgPSAnZGF0YS13Zi1wYWdlJztcbmV4cG9ydCBjb25zdCBXX01PRF9KUyA9ICd3LW1vZC1qcyc7XG5leHBvcnQgY29uc3QgV19NT0RfSVggPSAndy1tb2QtaXgnO1xuZXhwb3J0IGNvbnN0IEJPVU5EQVJZX1NFTEVDVE9SID0gJy53LWR5bi1pdGVtJztcbmV4cG9ydCBjb25zdCBDT05GSUdfWF9WQUxVRSA9ICd4VmFsdWUnO1xuZXhwb3J0IGNvbnN0IENPTkZJR19ZX1ZBTFVFID0gJ3lWYWx1ZSc7XG5leHBvcnQgY29uc3QgQ09ORklHX1pfVkFMVUUgPSAnelZhbHVlJztcbmV4cG9ydCBjb25zdCBDT05GSUdfVkFMVUUgPSAndmFsdWUnO1xuZXhwb3J0IGNvbnN0IENPTkZJR19YX1VOSVQgPSAneFVuaXQnO1xuZXhwb3J0IGNvbnN0IENPTkZJR19ZX1VOSVQgPSAneVVuaXQnO1xuZXhwb3J0IGNvbnN0IENPTkZJR19aX1VOSVQgPSAnelVuaXQnO1xuZXhwb3J0IGNvbnN0IENPTkZJR19VTklUID0gJ3VuaXQnO1xuZXhwb3J0IGNvbnN0IFRSQU5TRk9STSA9ICd0cmFuc2Zvcm0nO1xuZXhwb3J0IGNvbnN0IFRSQU5TTEFURV9YID0gJ3RyYW5zbGF0ZVgnO1xuZXhwb3J0IGNvbnN0IFRSQU5TTEFURV9ZID0gJ3RyYW5zbGF0ZVknO1xuZXhwb3J0IGNvbnN0IFRSQU5TTEFURV9aID0gJ3RyYW5zbGF0ZVonO1xuZXhwb3J0IGNvbnN0IFRSQU5TTEFURV8zRCA9ICd0cmFuc2xhdGUzZCc7XG5leHBvcnQgY29uc3QgU0NBTEVfWCA9ICdzY2FsZVgnO1xuZXhwb3J0IGNvbnN0IFNDQUxFX1kgPSAnc2NhbGVZJztcbmV4cG9ydCBjb25zdCBTQ0FMRV9aID0gJ3NjYWxlWic7XG5leHBvcnQgY29uc3QgU0NBTEVfM0QgPSAnc2NhbGUzZCc7XG5leHBvcnQgY29uc3QgUk9UQVRFX1ggPSAncm90YXRlWCc7XG5leHBvcnQgY29uc3QgUk9UQVRFX1kgPSAncm90YXRlWSc7XG5leHBvcnQgY29uc3QgUk9UQVRFX1ogPSAncm90YXRlWic7XG5leHBvcnQgY29uc3QgU0tFVyA9ICdza2V3JztcbmV4cG9ydCBjb25zdCBTS0VXX1ggPSAnc2tld1gnO1xuZXhwb3J0IGNvbnN0IFNLRVdfWSA9ICdza2V3WSc7XG5leHBvcnQgY29uc3QgT1BBQ0lUWSA9ICdvcGFjaXR5JztcbmV4cG9ydCBjb25zdCBGSUxURVIgPSAnZmlsdGVyJztcbmV4cG9ydCBjb25zdCBGT05UX1ZBUklBVElPTl9TRVRUSU5HUyA9ICdmb250LXZhcmlhdGlvbi1zZXR0aW5ncyc7XG5leHBvcnQgY29uc3QgV0lEVEggPSAnd2lkdGgnO1xuZXhwb3J0IGNvbnN0IEhFSUdIVCA9ICdoZWlnaHQnO1xuZXhwb3J0IGNvbnN0IEJBQ0tHUk9VTkRfQ09MT1IgPSAnYmFja2dyb3VuZENvbG9yJztcbmV4cG9ydCBjb25zdCBCQUNLR1JPVU5EID0gJ2JhY2tncm91bmQnO1xuZXhwb3J0IGNvbnN0IEJPUkRFUl9DT0xPUiA9ICdib3JkZXJDb2xvcic7XG5leHBvcnQgY29uc3QgQ09MT1IgPSAnY29sb3InO1xuZXhwb3J0IGNvbnN0IERJU1BMQVkgPSAnZGlzcGxheSc7XG5leHBvcnQgY29uc3QgRkxFWCA9ICdmbGV4JztcbmV4cG9ydCBjb25zdCBXSUxMX0NIQU5HRSA9ICd3aWxsQ2hhbmdlJztcbmV4cG9ydCBjb25zdCBBVVRPID0gJ0FVVE8nO1xuZXhwb3J0IGNvbnN0IENPTU1BX0RFTElNSVRFUiA9ICcsJztcbmV4cG9ydCBjb25zdCBDT0xPTl9ERUxJTUlURVIgPSAnOic7XG5leHBvcnQgY29uc3QgQkFSX0RFTElNSVRFUiA9ICd8JztcbmV4cG9ydCBjb25zdCBDSElMRFJFTiA9ICdDSElMRFJFTic7XG5leHBvcnQgY29uc3QgSU1NRURJQVRFX0NISUxEUkVOID0gJ0lNTUVESUFURV9DSElMRFJFTic7XG5leHBvcnQgY29uc3QgU0lCTElOR1MgPSAnU0lCTElOR1MnO1xuZXhwb3J0IGNvbnN0IFBBUkVOVCA9ICdQQVJFTlQnO1xuZXhwb3J0IGNvbnN0IFBSRVNFUlZFXzNEID0gJ3ByZXNlcnZlLTNkJztcbmV4cG9ydCBjb25zdCBIVE1MX0VMRU1FTlQgPSAnSFRNTF9FTEVNRU5UJztcbmV4cG9ydCBjb25zdCBQTEFJTl9PQkpFQ1QgPSAnUExBSU5fT0JKRUNUJztcbmV4cG9ydCBjb25zdCBBQlNUUkFDVF9OT0RFID0gJ0FCU1RSQUNUX05PREUnO1xuZXhwb3J0IGNvbnN0IFJFTkRFUl9UUkFOU0ZPUk0gPSAnUkVOREVSX1RSQU5TRk9STSc7XG5leHBvcnQgY29uc3QgUkVOREVSX0dFTkVSQUwgPSAnUkVOREVSX0dFTkVSQUwnO1xuZXhwb3J0IGNvbnN0IFJFTkRFUl9TVFlMRSA9ICdSRU5ERVJfU1RZTEUnO1xuZXhwb3J0IGNvbnN0IFJFTkRFUl9QTFVHSU4gPSAnUkVOREVSX1BMVUdJTic7XG4iXSwibmFtZXMiOlsiQUJTVFJBQ1RfTk9ERSIsIkFVVE8iLCJCQUNLR1JPVU5EIiwiQkFDS0dST1VORF9DT0xPUiIsIkJBUl9ERUxJTUlURVIiLCJCT1JERVJfQ09MT1IiLCJCT1VOREFSWV9TRUxFQ1RPUiIsIkNISUxEUkVOIiwiQ09MT05fREVMSU1JVEVSIiwiQ09MT1IiLCJDT01NQV9ERUxJTUlURVIiLCJDT05GSUdfVU5JVCIsIkNPTkZJR19WQUxVRSIsIkNPTkZJR19YX1VOSVQiLCJDT05GSUdfWF9WQUxVRSIsIkNPTkZJR19ZX1VOSVQiLCJDT05GSUdfWV9WQUxVRSIsIkNPTkZJR19aX1VOSVQiLCJDT05GSUdfWl9WQUxVRSIsIkRJU1BMQVkiLCJGSUxURVIiLCJGTEVYIiwiRk9OVF9WQVJJQVRJT05fU0VUVElOR1MiLCJIRUlHSFQiLCJIVE1MX0VMRU1FTlQiLCJJTU1FRElBVEVfQ0hJTERSRU4iLCJJWDJfSURfREVMSU1JVEVSIiwiT1BBQ0lUWSIsIlBBUkVOVCIsIlBMQUlOX09CSkVDVCIsIlBSRVNFUlZFXzNEIiwiUkVOREVSX0dFTkVSQUwiLCJSRU5ERVJfUExVR0lOIiwiUkVOREVSX1NUWUxFIiwiUkVOREVSX1RSQU5TRk9STSIsIlJPVEFURV9YIiwiUk9UQVRFX1kiLCJST1RBVEVfWiIsIlNDQUxFXzNEIiwiU0NBTEVfWCIsIlNDQUxFX1kiLCJTQ0FMRV9aIiwiU0lCTElOR1MiLCJTS0VXIiwiU0tFV19YIiwiU0tFV19ZIiwiVFJBTlNGT1JNIiwiVFJBTlNMQVRFXzNEIiwiVFJBTlNMQVRFX1giLCJUUkFOU0xBVEVfWSIsIlRSQU5TTEFURV9aIiwiV0ZfUEFHRSIsIldJRFRIIiwiV0lMTF9DSEFOR0UiLCJXX01PRF9JWCIsIldfTU9EX0pTIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQXNEYUEsYUFBYTtlQUFiQTs7SUFYQUMsSUFBSTtlQUFKQTs7SUFOQUMsVUFBVTtlQUFWQTs7SUFEQUMsZ0JBQWdCO2VBQWhCQTs7SUFVQUMsYUFBYTtlQUFiQTs7SUFSQUMsWUFBWTtlQUFaQTs7SUEvQkFDLGlCQUFpQjtlQUFqQkE7O0lBd0NBQyxRQUFRO2VBQVJBOztJQUZBQyxlQUFlO2VBQWZBOztJQU5BQyxLQUFLO2VBQUxBOztJQUtBQyxlQUFlO2VBQWZBOztJQTdCQUMsV0FBVztlQUFYQTs7SUFKQUMsWUFBWTtlQUFaQTs7SUFDQUMsYUFBYTtlQUFiQTs7SUFKQUMsY0FBYztlQUFkQTs7SUFLQUMsYUFBYTtlQUFiQTs7SUFKQUMsY0FBYztlQUFkQTs7SUFLQUMsYUFBYTtlQUFiQTs7SUFKQUMsY0FBYztlQUFkQTs7SUE4QkFDLE9BQU87ZUFBUEE7O0lBUkFDLE1BQU07ZUFBTkE7O0lBU0FDLElBQUk7ZUFBSkE7O0lBUkFDLHVCQUF1QjtlQUF2QkE7O0lBRUFDLE1BQU07ZUFBTkE7O0lBaUJBQyxZQUFZO2VBQVpBOztJQUpBQyxrQkFBa0I7ZUFBbEJBOztJQWhEQUMsZ0JBQWdCO2VBQWhCQTs7SUErQkFDLE9BQU87ZUFBUEE7O0lBbUJBQyxNQUFNO2VBQU5BOztJQUdBQyxZQUFZO2VBQVpBOztJQUZBQyxXQUFXO2VBQVhBOztJQUtBQyxjQUFjO2VBQWRBOztJQUVBQyxhQUFhO2VBQWJBOztJQURBQyxZQUFZO2VBQVpBOztJQUZBQyxnQkFBZ0I7ZUFBaEJBOztJQTlCQUMsUUFBUTtlQUFSQTs7SUFDQUMsUUFBUTtlQUFSQTs7SUFDQUMsUUFBUTtlQUFSQTs7SUFIQUMsUUFBUTtlQUFSQTs7SUFIQUMsT0FBTztlQUFQQTs7SUFDQUMsT0FBTztlQUFQQTs7SUFDQUMsT0FBTztlQUFQQTs7SUEwQkFDLFFBQVE7ZUFBUkE7O0lBckJBQyxJQUFJO2VBQUpBOztJQUNBQyxNQUFNO2VBQU5BOztJQUNBQyxNQUFNO2VBQU5BOztJQWRBQyxTQUFTO2VBQVRBOztJQUlBQyxZQUFZO2VBQVpBOztJQUhBQyxXQUFXO2VBQVhBOztJQUNBQyxXQUFXO2VBQVhBOztJQUNBQyxXQUFXO2VBQVhBOztJQWZBQyxPQUFPO2VBQVBBOztJQThCQUMsS0FBSztlQUFMQTs7SUFRQUMsV0FBVztlQUFYQTs7SUFwQ0FDLFFBQVE7ZUFBUkE7O0lBREFDLFFBQVE7ZUFBUkE7OztBQUxOLE1BQU03QixtQkFBbUI7QUFJekIsTUFBTXlCLFVBQVU7QUFDaEIsTUFBTUksV0FBVztBQUNqQixNQUFNRCxXQUFXO0FBQ2pCLE1BQU1oRCxvQkFBb0I7QUFDMUIsTUFBTVEsaUJBQWlCO0FBQ3ZCLE1BQU1FLGlCQUFpQjtBQUN2QixNQUFNRSxpQkFBaUI7QUFDdkIsTUFBTU4sZUFBZTtBQUNyQixNQUFNQyxnQkFBZ0I7QUFDdEIsTUFBTUUsZ0JBQWdCO0FBQ3RCLE1BQU1FLGdCQUFnQjtBQUN0QixNQUFNTixjQUFjO0FBQ3BCLE1BQU1tQyxZQUFZO0FBQ2xCLE1BQU1FLGNBQWM7QUFDcEIsTUFBTUMsY0FBYztBQUNwQixNQUFNQyxjQUFjO0FBQ3BCLE1BQU1ILGVBQWU7QUFDckIsTUFBTVIsVUFBVTtBQUNoQixNQUFNQyxVQUFVO0FBQ2hCLE1BQU1DLFVBQVU7QUFDaEIsTUFBTUgsV0FBVztBQUNqQixNQUFNSCxXQUFXO0FBQ2pCLE1BQU1DLFdBQVc7QUFDakIsTUFBTUMsV0FBVztBQUNqQixNQUFNTSxPQUFPO0FBQ2IsTUFBTUMsU0FBUztBQUNmLE1BQU1DLFNBQVM7QUFDZixNQUFNbEIsVUFBVTtBQUNoQixNQUFNUCxTQUFTO0FBQ2YsTUFBTUUsMEJBQTBCO0FBQ2hDLE1BQU04QixRQUFRO0FBQ2QsTUFBTTdCLFNBQVM7QUFDZixNQUFNcEIsbUJBQW1CO0FBQ3pCLE1BQU1ELGFBQWE7QUFDbkIsTUFBTUcsZUFBZTtBQUNyQixNQUFNSSxRQUFRO0FBQ2QsTUFBTVUsVUFBVTtBQUNoQixNQUFNRSxPQUFPO0FBQ2IsTUFBTWdDLGNBQWM7QUFDcEIsTUFBTXBELE9BQU87QUFDYixNQUFNUyxrQkFBa0I7QUFDeEIsTUFBTUYsa0JBQWtCO0FBQ3hCLE1BQU1KLGdCQUFnQjtBQUN0QixNQUFNRyxXQUFXO0FBQ2pCLE1BQU1rQixxQkFBcUI7QUFDM0IsTUFBTWlCLFdBQVc7QUFDakIsTUFBTWQsU0FBUztBQUNmLE1BQU1FLGNBQWM7QUFDcEIsTUFBTU4sZUFBZTtBQUNyQixNQUFNSyxlQUFlO0FBQ3JCLE1BQU03QixnQkFBZ0I7QUFDdEIsTUFBTWtDLG1CQUFtQjtBQUN6QixNQUFNSCxpQkFBaUI7QUFDdkIsTUFBTUUsZUFBZTtBQUNyQixNQUFNRCxnQkFBZ0IifQ==

}),
262: (function (__unused_webpack_module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ActionAppliesTo: function() {
        return ActionAppliesTo;
    },
    ActionTypeConsts: function() {
        return ActionTypeConsts;
    }
});
const ActionTypeConsts = {
    TRANSFORM_MOVE: 'TRANSFORM_MOVE',
    TRANSFORM_SCALE: 'TRANSFORM_SCALE',
    TRANSFORM_ROTATE: 'TRANSFORM_ROTATE',
    TRANSFORM_SKEW: 'TRANSFORM_SKEW',
    STYLE_OPACITY: 'STYLE_OPACITY',
    STYLE_SIZE: 'STYLE_SIZE',
    STYLE_FILTER: 'STYLE_FILTER',
    STYLE_FONT_VARIATION: 'STYLE_FONT_VARIATION',
    STYLE_BACKGROUND_COLOR: 'STYLE_BACKGROUND_COLOR',
    STYLE_BORDER: 'STYLE_BORDER',
    STYLE_TEXT_COLOR: 'STYLE_TEXT_COLOR',
    OBJECT_VALUE: 'OBJECT_VALUE',
    PLUGIN_LOTTIE: 'PLUGIN_LOTTIE',
    PLUGIN_SPLINE: 'PLUGIN_SPLINE',
    PLUGIN_RIVE: 'PLUGIN_RIVE',
    PLUGIN_VARIABLE: 'PLUGIN_VARIABLE',
    GENERAL_DISPLAY: 'GENERAL_DISPLAY',
    GENERAL_START_ACTION: 'GENERAL_START_ACTION',
    GENERAL_CONTINUOUS_ACTION: 'GENERAL_CONTINUOUS_ACTION',
    // TODO: Clean these up below because they're not used at this time
    GENERAL_COMBO_CLASS: 'GENERAL_COMBO_CLASS',
    GENERAL_STOP_ACTION: 'GENERAL_STOP_ACTION',
    GENERAL_LOOP: 'GENERAL_LOOP',
    STYLE_BOX_SHADOW: 'STYLE_BOX_SHADOW'
};
const ActionAppliesTo = {
    ELEMENT: 'ELEMENT',
    ELEMENT_CLASS: 'ELEMENT_CLASS',
    TRIGGER_ELEMENT: 'TRIGGER_ELEMENT'
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1hdGlvbi1hY3Rpb25zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBBY3Rpb25UeXBlQ29uc3RzID0ge1xuICBUUkFOU0ZPUk1fTU9WRTogJ1RSQU5TRk9STV9NT1ZFJyBhcyBjb25zdCxcbiAgVFJBTlNGT1JNX1NDQUxFOiAnVFJBTlNGT1JNX1NDQUxFJyBhcyBjb25zdCxcbiAgVFJBTlNGT1JNX1JPVEFURTogJ1RSQU5TRk9STV9ST1RBVEUnIGFzIGNvbnN0LFxuICBUUkFOU0ZPUk1fU0tFVzogJ1RSQU5TRk9STV9TS0VXJyBhcyBjb25zdCxcbiAgU1RZTEVfT1BBQ0lUWTogJ1NUWUxFX09QQUNJVFknIGFzIGNvbnN0LFxuICBTVFlMRV9TSVpFOiAnU1RZTEVfU0laRScgYXMgY29uc3QsXG4gIFNUWUxFX0ZJTFRFUjogJ1NUWUxFX0ZJTFRFUicgYXMgY29uc3QsXG4gIFNUWUxFX0ZPTlRfVkFSSUFUSU9OOiAnU1RZTEVfRk9OVF9WQVJJQVRJT04nIGFzIGNvbnN0LFxuICBTVFlMRV9CQUNLR1JPVU5EX0NPTE9SOiAnU1RZTEVfQkFDS0dST1VORF9DT0xPUicgYXMgY29uc3QsXG4gIFNUWUxFX0JPUkRFUjogJ1NUWUxFX0JPUkRFUicgYXMgY29uc3QsXG4gIFNUWUxFX1RFWFRfQ09MT1I6ICdTVFlMRV9URVhUX0NPTE9SJyBhcyBjb25zdCxcbiAgT0JKRUNUX1ZBTFVFOiAnT0JKRUNUX1ZBTFVFJyBhcyBjb25zdCxcbiAgUExVR0lOX0xPVFRJRTogJ1BMVUdJTl9MT1RUSUUnIGFzIGNvbnN0LFxuICBQTFVHSU5fU1BMSU5FOiAnUExVR0lOX1NQTElORScgYXMgY29uc3QsXG4gIFBMVUdJTl9SSVZFOiAnUExVR0lOX1JJVkUnIGFzIGNvbnN0LFxuICBQTFVHSU5fVkFSSUFCTEU6ICdQTFVHSU5fVkFSSUFCTEUnIGFzIGNvbnN0LFxuICBHRU5FUkFMX0RJU1BMQVk6ICdHRU5FUkFMX0RJU1BMQVknIGFzIGNvbnN0LFxuICBHRU5FUkFMX1NUQVJUX0FDVElPTjogJ0dFTkVSQUxfU1RBUlRfQUNUSU9OJyBhcyBjb25zdCxcbiAgR0VORVJBTF9DT05USU5VT1VTX0FDVElPTjogJ0dFTkVSQUxfQ09OVElOVU9VU19BQ1RJT04nIGFzIGNvbnN0LFxuXG4gIC8vIFRPRE86IENsZWFuIHRoZXNlIHVwIGJlbG93IGJlY2F1c2UgdGhleSdyZSBub3QgdXNlZCBhdCB0aGlzIHRpbWVcbiAgR0VORVJBTF9DT01CT19DTEFTUzogJ0dFTkVSQUxfQ09NQk9fQ0xBU1MnIGFzIGNvbnN0LFxuICBHRU5FUkFMX1NUT1BfQUNUSU9OOiAnR0VORVJBTF9TVE9QX0FDVElPTicgYXMgY29uc3QsXG4gIEdFTkVSQUxfTE9PUDogJ0dFTkVSQUxfTE9PUCcgYXMgY29uc3QsXG4gIFNUWUxFX0JPWF9TSEFET1c6ICdTVFlMRV9CT1hfU0hBRE9XJyBhcyBjb25zdCxcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCB0eXBlIEFjdGlvblR5cGVJZFR5cGUgPSBrZXlvZiB0eXBlb2YgQWN0aW9uVHlwZUNvbnN0cztcblxuZXhwb3J0IGNvbnN0IEFjdGlvbkFwcGxpZXNUbyA9IHtcbiAgRUxFTUVOVDogJ0VMRU1FTlQnIGFzIGNvbnN0LFxuICBFTEVNRU5UX0NMQVNTOiAnRUxFTUVOVF9DTEFTUycgYXMgY29uc3QsXG4gIFRSSUdHRVJfRUxFTUVOVDogJ1RSSUdHRVJfRUxFTUVOVCcgYXMgY29uc3QsXG59IGFzIGNvbnN0O1xuIl0sIm5hbWVzIjpbIkFjdGlvbkFwcGxpZXNUbyIsIkFjdGlvblR5cGVDb25zdHMiLCJUUkFOU0ZPUk1fTU9WRSIsIlRSQU5TRk9STV9TQ0FMRSIsIlRSQU5TRk9STV9ST1RBVEUiLCJUUkFOU0ZPUk1fU0tFVyIsIlNUWUxFX09QQUNJVFkiLCJTVFlMRV9TSVpFIiwiU1RZTEVfRklMVEVSIiwiU1RZTEVfRk9OVF9WQVJJQVRJT04iLCJTVFlMRV9CQUNLR1JPVU5EX0NPTE9SIiwiU1RZTEVfQk9SREVSIiwiU1RZTEVfVEVYVF9DT0xPUiIsIk9CSkVDVF9WQUxVRSIsIlBMVUdJTl9MT1RUSUUiLCJQTFVHSU5fU1BMSU5FIiwiUExVR0lOX1JJVkUiLCJQTFVHSU5fVkFSSUFCTEUiLCJHRU5FUkFMX0RJU1BMQVkiLCJHRU5FUkFMX1NUQVJUX0FDVElPTiIsIkdFTkVSQUxfQ09OVElOVU9VU19BQ1RJT04iLCJHRU5FUkFMX0NPTUJPX0NMQVNTIiwiR0VORVJBTF9TVE9QX0FDVElPTiIsIkdFTkVSQUxfTE9PUCIsIlNUWUxFX0JPWF9TSEFET1ciLCJFTEVNRU5UIiwiRUxFTUVOVF9DTEFTUyIsIlRSSUdHRVJfRUxFTUVOVCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUE4QmFBLGVBQWU7ZUFBZkE7O0lBOUJBQyxnQkFBZ0I7ZUFBaEJBOzs7QUFBTixNQUFNQSxtQkFBbUI7SUFDOUJDLGdCQUFnQjtJQUNoQkMsaUJBQWlCO0lBQ2pCQyxrQkFBa0I7SUFDbEJDLGdCQUFnQjtJQUNoQkMsZUFBZTtJQUNmQyxZQUFZO0lBQ1pDLGNBQWM7SUFDZEMsc0JBQXNCO0lBQ3RCQyx3QkFBd0I7SUFDeEJDLGNBQWM7SUFDZEMsa0JBQWtCO0lBQ2xCQyxjQUFjO0lBQ2RDLGVBQWU7SUFDZkMsZUFBZTtJQUNmQyxhQUFhO0lBQ2JDLGlCQUFpQjtJQUNqQkMsaUJBQWlCO0lBQ2pCQyxzQkFBc0I7SUFDdEJDLDJCQUEyQjtJQUUzQixtRUFBbUU7SUFDbkVDLHFCQUFxQjtJQUNyQkMscUJBQXFCO0lBQ3JCQyxjQUFjO0lBQ2RDLGtCQUFrQjtBQUNwQjtBQUlPLE1BQU14QixrQkFBa0I7SUFDN0J5QixTQUFTO0lBQ1RDLGVBQWU7SUFDZkMsaUJBQWlCO0FBQ25CIn0=

}),
7087: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ActionTypeConsts: function() {
        return _animationactions.ActionTypeConsts;
    },
    IX2EngineActionTypes: function() {
        return _IX2EngineActionTypes;
    },
    IX2EngineConstants: function() {
        return _IX2EngineConstants;
    },
    QuickEffectIds: function() {
        return _triggerevents.QuickEffectIds;
    }
});
const _triggerevents = _export_star(__webpack_require__(1833), exports);
const _animationactions = _export_star(__webpack_require__(262), exports);
_export_star(__webpack_require__(8704), exports);
_export_star(__webpack_require__(3213), exports);
const _IX2EngineActionTypes = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(8023));
const _IX2EngineConstants = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(2686));
function _export_star(from, to) {
    Object.keys(from).forEach(function(k) {
        if (k !== "default" && !Object.prototype.hasOwnProperty.call(to, k)) {
            Object.defineProperty(to, k, {
                enumerable: true,
                get: function() {
                    return from[k];
                }
            });
        }
    });
    return from;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vdHJpZ2dlci1ldmVudHMnO1xuZXhwb3J0ICogZnJvbSAnLi9hbmltYXRpb24tYWN0aW9ucyc7XG5leHBvcnQgKiBmcm9tICcuL3RyaWdnZXItaW50ZXJhY3Rpb25zJztcbmV4cG9ydCAqIGZyb20gJy4vcmVkdWNlZC1tb3Rpb24nO1xuXG5pbXBvcnQgKiBhcyBJWDJFbmdpbmVBY3Rpb25UeXBlcyBmcm9tICcuL0lYMkVuZ2luZUFjdGlvblR5cGVzJztcbmltcG9ydCAqIGFzIElYMkVuZ2luZUNvbnN0YW50cyBmcm9tICcuL0lYMkVuZ2luZUNvbnN0YW50cyc7XG5leHBvcnQge0lYMkVuZ2luZUFjdGlvblR5cGVzLCBJWDJFbmdpbmVDb25zdGFudHN9O1xuXG5leHBvcnQge0FjdGlvblR5cGVDb25zdHN9IGZyb20gJy4vYW5pbWF0aW9uLWFjdGlvbnMnO1xuZXhwb3J0IHtRdWlja0VmZmVjdElkc30gZnJvbSAnLi90cmlnZ2VyLWV2ZW50cyc7XG4iXSwibmFtZXMiOlsiQWN0aW9uVHlwZUNvbnN0cyIsIklYMkVuZ2luZUFjdGlvblR5cGVzIiwiSVgyRW5naW5lQ29uc3RhbnRzIiwiUXVpY2tFZmZlY3RJZHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBU1FBLGdCQUFnQjtlQUFoQkEsa0NBQWdCOztJQUZoQkMsb0JBQW9CO2VBQXBCQTs7SUFBc0JDLGtCQUFrQjtlQUFsQkE7O0lBR3RCQyxjQUFjO2VBQWRBLDZCQUFjOzs7NENBVlI7K0NBQ0E7cUJBQ0E7cUJBQ0E7OEVBRXdCOzRFQUNGIn0=

}),
3213: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "ReducedMotionTypes", ({
    enumerable: true,
    get: function() {
        return ReducedMotionTypes;
    }
}));
const _animationactions = __webpack_require__(262);
const { TRANSFORM_MOVE, TRANSFORM_SCALE, TRANSFORM_ROTATE, TRANSFORM_SKEW, STYLE_SIZE, STYLE_FILTER, STYLE_FONT_VARIATION } = _animationactions.ActionTypeConsts;
const ReducedMotionTypes = {
    [TRANSFORM_MOVE]: true,
    [TRANSFORM_SCALE]: true,
    [TRANSFORM_ROTATE]: true,
    [TRANSFORM_SKEW]: true,
    [STYLE_SIZE]: true,
    [STYLE_FILTER]: true,
    [STYLE_FONT_VARIATION]: true
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZWQtbW90aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWN0aW9uVHlwZUNvbnN0c30gZnJvbSAnLi9hbmltYXRpb24tYWN0aW9ucyc7XG5cbmNvbnN0IHtcbiAgVFJBTlNGT1JNX01PVkUsXG4gIFRSQU5TRk9STV9TQ0FMRSxcbiAgVFJBTlNGT1JNX1JPVEFURSxcbiAgVFJBTlNGT1JNX1NLRVcsXG4gIFNUWUxFX1NJWkUsXG4gIFNUWUxFX0ZJTFRFUixcbiAgU1RZTEVfRk9OVF9WQVJJQVRJT04sXG59ID0gQWN0aW9uVHlwZUNvbnN0cztcblxuLyoqXG4gKiBSZWR1Y2VkIE1vdGlvbjogQWN0aW9uIHR5cGVzIHRvIGJ5cGFzcyBkdXJpbmcgYHByZWZlcnMtcmVkdWNlZC1tb3Rpb25gXG4gKi9cblxuZXhwb3J0IGNvbnN0IFJlZHVjZWRNb3Rpb25UeXBlcyA9IHtcbiAgW1RSQU5TRk9STV9NT1ZFXTogdHJ1ZSxcbiAgW1RSQU5TRk9STV9TQ0FMRV06IHRydWUsXG4gIFtUUkFOU0ZPUk1fUk9UQVRFXTogdHJ1ZSxcbiAgW1RSQU5TRk9STV9TS0VXXTogdHJ1ZSxcbiAgW1NUWUxFX1NJWkVdOiB0cnVlLFxuICBbU1RZTEVfRklMVEVSXTogdHJ1ZSxcbiAgW1NUWUxFX0ZPTlRfVkFSSUFUSU9OXTogdHJ1ZSxcbn0gYXMgY29uc3Q7XG4iXSwibmFtZXMiOlsiUmVkdWNlZE1vdGlvblR5cGVzIiwiVFJBTlNGT1JNX01PVkUiLCJUUkFOU0ZPUk1fU0NBTEUiLCJUUkFOU0ZPUk1fUk9UQVRFIiwiVFJBTlNGT1JNX1NLRVciLCJTVFlMRV9TSVpFIiwiU1RZTEVfRklMVEVSIiwiU1RZTEVfRk9OVF9WQVJJQVRJT04iLCJBY3Rpb25UeXBlQ29uc3RzIl0sIm1hcHBpbmdzIjoiOzs7OytCQWdCYUE7OztlQUFBQTs7O2tDQWhCa0I7QUFFL0IsTUFBTSxFQUNKQyxjQUFjLEVBQ2RDLGVBQWUsRUFDZkMsZ0JBQWdCLEVBQ2hCQyxjQUFjLEVBQ2RDLFVBQVUsRUFDVkMsWUFBWSxFQUNaQyxvQkFBb0IsRUFDckIsR0FBR0Msa0NBQWdCO0FBTWIsTUFBTVIscUJBQXFCO0lBQ2hDLENBQUNDLGVBQWUsRUFBRTtJQUNsQixDQUFDQyxnQkFBZ0IsRUFBRTtJQUNuQixDQUFDQyxpQkFBaUIsRUFBRTtJQUNwQixDQUFDQyxlQUFlLEVBQUU7SUFDbEIsQ0FBQ0MsV0FBVyxFQUFFO0lBQ2QsQ0FBQ0MsYUFBYSxFQUFFO0lBQ2hCLENBQUNDLHFCQUFxQixFQUFFO0FBQzFCIn0=

}),
1833: (function (__unused_webpack_module, exports) {
"use strict";
/**
 * Event Type IDs
 */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    EventAppliesTo: function() {
        return EventAppliesTo;
    },
    EventBasedOn: function() {
        return EventBasedOn;
    },
    EventContinuousMouseAxes: function() {
        return EventContinuousMouseAxes;
    },
    EventLimitAffectedElements: function() {
        return EventLimitAffectedElements;
    },
    EventTypeConsts: function() {
        return EventTypeConsts;
    },
    QuickEffectDirectionConsts: function() {
        return QuickEffectDirectionConsts;
    },
    QuickEffectIds: function() {
        return QuickEffectIds;
    }
});
const EventTypeConsts = {
    NAVBAR_OPEN: 'NAVBAR_OPEN',
    NAVBAR_CLOSE: 'NAVBAR_CLOSE',
    TAB_ACTIVE: 'TAB_ACTIVE',
    TAB_INACTIVE: 'TAB_INACTIVE',
    SLIDER_ACTIVE: 'SLIDER_ACTIVE',
    SLIDER_INACTIVE: 'SLIDER_INACTIVE',
    DROPDOWN_OPEN: 'DROPDOWN_OPEN',
    DROPDOWN_CLOSE: 'DROPDOWN_CLOSE',
    MOUSE_CLICK: 'MOUSE_CLICK',
    MOUSE_SECOND_CLICK: 'MOUSE_SECOND_CLICK',
    MOUSE_DOWN: 'MOUSE_DOWN',
    MOUSE_UP: 'MOUSE_UP',
    MOUSE_OVER: 'MOUSE_OVER',
    MOUSE_OUT: 'MOUSE_OUT',
    MOUSE_MOVE: 'MOUSE_MOVE',
    MOUSE_MOVE_IN_VIEWPORT: 'MOUSE_MOVE_IN_VIEWPORT',
    SCROLL_INTO_VIEW: 'SCROLL_INTO_VIEW',
    SCROLL_OUT_OF_VIEW: 'SCROLL_OUT_OF_VIEW',
    SCROLLING_IN_VIEW: 'SCROLLING_IN_VIEW',
    ECOMMERCE_CART_OPEN: 'ECOMMERCE_CART_OPEN',
    ECOMMERCE_CART_CLOSE: 'ECOMMERCE_CART_CLOSE',
    PAGE_START: 'PAGE_START',
    PAGE_FINISH: 'PAGE_FINISH',
    PAGE_SCROLL_UP: 'PAGE_SCROLL_UP',
    PAGE_SCROLL_DOWN: 'PAGE_SCROLL_DOWN',
    PAGE_SCROLL: 'PAGE_SCROLL'
};
const EventAppliesTo = {
    ELEMENT: 'ELEMENT',
    CLASS: 'CLASS',
    PAGE: 'PAGE'
};
const EventBasedOn = {
    ELEMENT: 'ELEMENT',
    VIEWPORT: 'VIEWPORT'
};
const EventContinuousMouseAxes = {
    X_AXIS: 'X_AXIS',
    Y_AXIS: 'Y_AXIS'
};
const EventLimitAffectedElements = {
    CHILDREN: 'CHILDREN',
    SIBLINGS: 'SIBLINGS',
    IMMEDIATE_CHILDREN: 'IMMEDIATE_CHILDREN'
};
const QuickEffectIds = {
    FADE_EFFECT: 'FADE_EFFECT',
    SLIDE_EFFECT: 'SLIDE_EFFECT',
    GROW_EFFECT: 'GROW_EFFECT',
    SHRINK_EFFECT: 'SHRINK_EFFECT',
    SPIN_EFFECT: 'SPIN_EFFECT',
    FLY_EFFECT: 'FLY_EFFECT',
    POP_EFFECT: 'POP_EFFECT',
    FLIP_EFFECT: 'FLIP_EFFECT',
    JIGGLE_EFFECT: 'JIGGLE_EFFECT',
    PULSE_EFFECT: 'PULSE_EFFECT',
    DROP_EFFECT: 'DROP_EFFECT',
    BLINK_EFFECT: 'BLINK_EFFECT',
    BOUNCE_EFFECT: 'BOUNCE_EFFECT',
    FLIP_LEFT_TO_RIGHT_EFFECT: 'FLIP_LEFT_TO_RIGHT_EFFECT',
    FLIP_RIGHT_TO_LEFT_EFFECT: 'FLIP_RIGHT_TO_LEFT_EFFECT',
    RUBBER_BAND_EFFECT: 'RUBBER_BAND_EFFECT',
    JELLO_EFFECT: 'JELLO_EFFECT',
    GROW_BIG_EFFECT: 'GROW_BIG_EFFECT',
    SHRINK_BIG_EFFECT: 'SHRINK_BIG_EFFECT',
    PLUGIN_LOTTIE_EFFECT: 'PLUGIN_LOTTIE_EFFECT'
};
const QuickEffectDirectionConsts = {
    LEFT: 'LEFT',
    RIGHT: 'RIGHT',
    BOTTOM: 'BOTTOM',
    TOP: 'TOP',
    BOTTOM_LEFT: 'BOTTOM_LEFT',
    BOTTOM_RIGHT: 'BOTTOM_RIGHT',
    TOP_RIGHT: 'TOP_RIGHT',
    TOP_LEFT: 'TOP_LEFT',
    CLOCKWISE: 'CLOCKWISE',
    COUNTER_CLOCKWISE: 'COUNTER_CLOCKWISE'
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyaWdnZXItZXZlbnRzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXZlbnQgVHlwZSBJRHNcbiAqL1xuXG5leHBvcnQgY29uc3QgRXZlbnRUeXBlQ29uc3RzID0ge1xuICBOQVZCQVJfT1BFTjogJ05BVkJBUl9PUEVOJyBhcyBjb25zdCxcbiAgTkFWQkFSX0NMT1NFOiAnTkFWQkFSX0NMT1NFJyBhcyBjb25zdCxcbiAgVEFCX0FDVElWRTogJ1RBQl9BQ1RJVkUnIGFzIGNvbnN0LFxuICBUQUJfSU5BQ1RJVkU6ICdUQUJfSU5BQ1RJVkUnIGFzIGNvbnN0LFxuICBTTElERVJfQUNUSVZFOiAnU0xJREVSX0FDVElWRScgYXMgY29uc3QsXG4gIFNMSURFUl9JTkFDVElWRTogJ1NMSURFUl9JTkFDVElWRScgYXMgY29uc3QsXG4gIERST1BET1dOX09QRU46ICdEUk9QRE9XTl9PUEVOJyBhcyBjb25zdCxcbiAgRFJPUERPV05fQ0xPU0U6ICdEUk9QRE9XTl9DTE9TRScgYXMgY29uc3QsXG4gIE1PVVNFX0NMSUNLOiAnTU9VU0VfQ0xJQ0snIGFzIGNvbnN0LFxuICBNT1VTRV9TRUNPTkRfQ0xJQ0s6ICdNT1VTRV9TRUNPTkRfQ0xJQ0snIGFzIGNvbnN0LFxuICBNT1VTRV9ET1dOOiAnTU9VU0VfRE9XTicgYXMgY29uc3QsXG4gIE1PVVNFX1VQOiAnTU9VU0VfVVAnIGFzIGNvbnN0LFxuICBNT1VTRV9PVkVSOiAnTU9VU0VfT1ZFUicgYXMgY29uc3QsXG4gIE1PVVNFX09VVDogJ01PVVNFX09VVCcgYXMgY29uc3QsXG4gIE1PVVNFX01PVkU6ICdNT1VTRV9NT1ZFJyBhcyBjb25zdCxcbiAgTU9VU0VfTU9WRV9JTl9WSUVXUE9SVDogJ01PVVNFX01PVkVfSU5fVklFV1BPUlQnIGFzIGNvbnN0LFxuICBTQ1JPTExfSU5UT19WSUVXOiAnU0NST0xMX0lOVE9fVklFVycgYXMgY29uc3QsXG4gIFNDUk9MTF9PVVRfT0ZfVklFVzogJ1NDUk9MTF9PVVRfT0ZfVklFVycgYXMgY29uc3QsXG4gIFNDUk9MTElOR19JTl9WSUVXOiAnU0NST0xMSU5HX0lOX1ZJRVcnIGFzIGNvbnN0LFxuICBFQ09NTUVSQ0VfQ0FSVF9PUEVOOiAnRUNPTU1FUkNFX0NBUlRfT1BFTicgYXMgY29uc3QsXG4gIEVDT01NRVJDRV9DQVJUX0NMT1NFOiAnRUNPTU1FUkNFX0NBUlRfQ0xPU0UnIGFzIGNvbnN0LFxuICBQQUdFX1NUQVJUOiAnUEFHRV9TVEFSVCcgYXMgY29uc3QsXG4gIFBBR0VfRklOSVNIOiAnUEFHRV9GSU5JU0gnIGFzIGNvbnN0LFxuICBQQUdFX1NDUk9MTF9VUDogJ1BBR0VfU0NST0xMX1VQJyBhcyBjb25zdCxcbiAgUEFHRV9TQ1JPTExfRE9XTjogJ1BBR0VfU0NST0xMX0RPV04nIGFzIGNvbnN0LFxuICBQQUdFX1NDUk9MTDogJ1BBR0VfU0NST0xMJyBhcyBjb25zdCxcbn0gYXMgY29uc3Q7XG5cbi8qKlxuICogRXZlbnQgQ29uZmlnIEVudW1zXG4gKi9cblxuZXhwb3J0IGNvbnN0IEV2ZW50QXBwbGllc1RvID0ge1xuICBFTEVNRU5UOiAnRUxFTUVOVCcgYXMgY29uc3QsXG4gIENMQVNTOiAnQ0xBU1MnIGFzIGNvbnN0LFxuICBQQUdFOiAnUEFHRScgYXMgY29uc3QsXG59IGFzIGNvbnN0O1xuXG5leHBvcnQgY29uc3QgRXZlbnRCYXNlZE9uID0ge1xuICBFTEVNRU5UOiAnRUxFTUVOVCcgYXMgY29uc3QsXG4gIFZJRVdQT1JUOiAnVklFV1BPUlQnIGFzIGNvbnN0LFxufSBhcyBjb25zdDtcblxuZXhwb3J0IGNvbnN0IEV2ZW50Q29udGludW91c01vdXNlQXhlcyA9IHtcbiAgWF9BWElTOiAnWF9BWElTJyBhcyBjb25zdCxcbiAgWV9BWElTOiAnWV9BWElTJyBhcyBjb25zdCxcbn0gYXMgY29uc3Q7XG5cbmV4cG9ydCBjb25zdCBFdmVudExpbWl0QWZmZWN0ZWRFbGVtZW50cyA9IHtcbiAgQ0hJTERSRU46ICdDSElMRFJFTicgYXMgY29uc3QsXG4gIFNJQkxJTkdTOiAnU0lCTElOR1MnIGFzIGNvbnN0LFxuICBJTU1FRElBVEVfQ0hJTERSRU46ICdJTU1FRElBVEVfQ0hJTERSRU4nIGFzIGNvbnN0LFxufSBhcyBjb25zdDtcblxuLyoqXG4gKiBRdWljayBFZmZlY3QgRW51bXNcbiAqL1xuZXhwb3J0IGNvbnN0IFF1aWNrRWZmZWN0SWRzID0ge1xuICBGQURFX0VGRkVDVDogJ0ZBREVfRUZGRUNUJyBhcyBjb25zdCxcbiAgU0xJREVfRUZGRUNUOiAnU0xJREVfRUZGRUNUJyBhcyBjb25zdCxcbiAgR1JPV19FRkZFQ1Q6ICdHUk9XX0VGRkVDVCcgYXMgY29uc3QsXG4gIFNIUklOS19FRkZFQ1Q6ICdTSFJJTktfRUZGRUNUJyBhcyBjb25zdCxcbiAgU1BJTl9FRkZFQ1Q6ICdTUElOX0VGRkVDVCcgYXMgY29uc3QsXG4gIEZMWV9FRkZFQ1Q6ICdGTFlfRUZGRUNUJyBhcyBjb25zdCxcbiAgUE9QX0VGRkVDVDogJ1BPUF9FRkZFQ1QnIGFzIGNvbnN0LFxuICBGTElQX0VGRkVDVDogJ0ZMSVBfRUZGRUNUJyBhcyBjb25zdCxcbiAgSklHR0xFX0VGRkVDVDogJ0pJR0dMRV9FRkZFQ1QnIGFzIGNvbnN0LFxuICBQVUxTRV9FRkZFQ1Q6ICdQVUxTRV9FRkZFQ1QnIGFzIGNvbnN0LFxuICBEUk9QX0VGRkVDVDogJ0RST1BfRUZGRUNUJyBhcyBjb25zdCxcbiAgQkxJTktfRUZGRUNUOiAnQkxJTktfRUZGRUNUJyBhcyBjb25zdCxcbiAgQk9VTkNFX0VGRkVDVDogJ0JPVU5DRV9FRkZFQ1QnIGFzIGNvbnN0LFxuICBGTElQX0xFRlRfVE9fUklHSFRfRUZGRUNUOiAnRkxJUF9MRUZUX1RPX1JJR0hUX0VGRkVDVCcgYXMgY29uc3QsXG4gIEZMSVBfUklHSFRfVE9fTEVGVF9FRkZFQ1Q6ICdGTElQX1JJR0hUX1RPX0xFRlRfRUZGRUNUJyBhcyBjb25zdCxcbiAgUlVCQkVSX0JBTkRfRUZGRUNUOiAnUlVCQkVSX0JBTkRfRUZGRUNUJyBhcyBjb25zdCxcbiAgSkVMTE9fRUZGRUNUOiAnSkVMTE9fRUZGRUNUJyBhcyBjb25zdCxcbiAgR1JPV19CSUdfRUZGRUNUOiAnR1JPV19CSUdfRUZGRUNUJyBhcyBjb25zdCxcbiAgU0hSSU5LX0JJR19FRkZFQ1Q6ICdTSFJJTktfQklHX0VGRkVDVCcgYXMgY29uc3QsXG4gIFBMVUdJTl9MT1RUSUVfRUZGRUNUOiAnUExVR0lOX0xPVFRJRV9FRkZFQ1QnIGFzIGNvbnN0LFxufSBhcyBjb25zdDtcblxuLyoqXG4gKiBRdWljayBFZmZlY3QgRGlyZWN0aW9uIEVudW1zXG4gKi9cbmV4cG9ydCBjb25zdCBRdWlja0VmZmVjdERpcmVjdGlvbkNvbnN0cyA9IHtcbiAgTEVGVDogJ0xFRlQnIGFzIGNvbnN0LFxuICBSSUdIVDogJ1JJR0hUJyBhcyBjb25zdCxcbiAgQk9UVE9NOiAnQk9UVE9NJyBhcyBjb25zdCxcbiAgVE9QOiAnVE9QJyBhcyBjb25zdCxcbiAgQk9UVE9NX0xFRlQ6ICdCT1RUT01fTEVGVCcgYXMgY29uc3QsXG4gIEJPVFRPTV9SSUdIVDogJ0JPVFRPTV9SSUdIVCcgYXMgY29uc3QsXG4gIFRPUF9SSUdIVDogJ1RPUF9SSUdIVCcgYXMgY29uc3QsXG4gIFRPUF9MRUZUOiAnVE9QX0xFRlQnIGFzIGNvbnN0LFxuICBDTE9DS1dJU0U6ICdDTE9DS1dJU0UnIGFzIGNvbnN0LFxuICBDT1VOVEVSX0NMT0NLV0lTRTogJ0NPVU5URVJfQ0xPQ0tXSVNFJyBhcyBjb25zdCxcbn0gYXMgY29uc3Q7XG4iXSwibmFtZXMiOlsiRXZlbnRBcHBsaWVzVG8iLCJFdmVudEJhc2VkT24iLCJFdmVudENvbnRpbnVvdXNNb3VzZUF4ZXMiLCJFdmVudExpbWl0QWZmZWN0ZWRFbGVtZW50cyIsIkV2ZW50VHlwZUNvbnN0cyIsIlF1aWNrRWZmZWN0RGlyZWN0aW9uQ29uc3RzIiwiUXVpY2tFZmZlY3RJZHMiLCJOQVZCQVJfT1BFTiIsIk5BVkJBUl9DTE9TRSIsIlRBQl9BQ1RJVkUiLCJUQUJfSU5BQ1RJVkUiLCJTTElERVJfQUNUSVZFIiwiU0xJREVSX0lOQUNUSVZFIiwiRFJPUERPV05fT1BFTiIsIkRST1BET1dOX0NMT1NFIiwiTU9VU0VfQ0xJQ0siLCJNT1VTRV9TRUNPTkRfQ0xJQ0siLCJNT1VTRV9ET1dOIiwiTU9VU0VfVVAiLCJNT1VTRV9PVkVSIiwiTU9VU0VfT1VUIiwiTU9VU0VfTU9WRSIsIk1PVVNFX01PVkVfSU5fVklFV1BPUlQiLCJTQ1JPTExfSU5UT19WSUVXIiwiU0NST0xMX09VVF9PRl9WSUVXIiwiU0NST0xMSU5HX0lOX1ZJRVciLCJFQ09NTUVSQ0VfQ0FSVF9PUEVOIiwiRUNPTU1FUkNFX0NBUlRfQ0xPU0UiLCJQQUdFX1NUQVJUIiwiUEFHRV9GSU5JU0giLCJQQUdFX1NDUk9MTF9VUCIsIlBBR0VfU0NST0xMX0RPV04iLCJQQUdFX1NDUk9MTCIsIkVMRU1FTlQiLCJDTEFTUyIsIlBBR0UiLCJWSUVXUE9SVCIsIlhfQVhJUyIsIllfQVhJUyIsIkNISUxEUkVOIiwiU0lCTElOR1MiLCJJTU1FRElBVEVfQ0hJTERSRU4iLCJGQURFX0VGRkVDVCIsIlNMSURFX0VGRkVDVCIsIkdST1dfRUZGRUNUIiwiU0hSSU5LX0VGRkVDVCIsIlNQSU5fRUZGRUNUIiwiRkxZX0VGRkVDVCIsIlBPUF9FRkZFQ1QiLCJGTElQX0VGRkVDVCIsIkpJR0dMRV9FRkZFQ1QiLCJQVUxTRV9FRkZFQ1QiLCJEUk9QX0VGRkVDVCIsIkJMSU5LX0VGRkVDVCIsIkJPVU5DRV9FRkZFQ1QiLCJGTElQX0xFRlRfVE9fUklHSFRfRUZGRUNUIiwiRkxJUF9SSUdIVF9UT19MRUZUX0VGRkVDVCIsIlJVQkJFUl9CQU5EX0VGRkVDVCIsIkpFTExPX0VGRkVDVCIsIkdST1dfQklHX0VGRkVDVCIsIlNIUklOS19CSUdfRUZGRUNUIiwiUExVR0lOX0xPVFRJRV9FRkZFQ1QiLCJMRUZUIiwiUklHSFQiLCJCT1RUT00iLCJUT1AiLCJCT1RUT01fTEVGVCIsIkJPVFRPTV9SSUdIVCIsIlRPUF9SSUdIVCIsIlRPUF9MRUZUIiwiQ0xPQ0tXSVNFIiwiQ09VTlRFUl9DTE9DS1dJU0UiXSwibWFwcGluZ3MiOiJBQUFBOztDQUVDOzs7Ozs7Ozs7OztJQW1DWUEsY0FBYztlQUFkQTs7SUFNQUMsWUFBWTtlQUFaQTs7SUFLQUMsd0JBQXdCO2VBQXhCQTs7SUFLQUMsMEJBQTBCO2VBQTFCQTs7SUFqREFDLGVBQWU7ZUFBZkE7O0lBb0ZBQywwQkFBMEI7ZUFBMUJBOztJQTFCQUMsY0FBYztlQUFkQTs7O0FBMUROLE1BQU1GLGtCQUFrQjtJQUM3QkcsYUFBYTtJQUNiQyxjQUFjO0lBQ2RDLFlBQVk7SUFDWkMsY0FBYztJQUNkQyxlQUFlO0lBQ2ZDLGlCQUFpQjtJQUNqQkMsZUFBZTtJQUNmQyxnQkFBZ0I7SUFDaEJDLGFBQWE7SUFDYkMsb0JBQW9CO0lBQ3BCQyxZQUFZO0lBQ1pDLFVBQVU7SUFDVkMsWUFBWTtJQUNaQyxXQUFXO0lBQ1hDLFlBQVk7SUFDWkMsd0JBQXdCO0lBQ3hCQyxrQkFBa0I7SUFDbEJDLG9CQUFvQjtJQUNwQkMsbUJBQW1CO0lBQ25CQyxxQkFBcUI7SUFDckJDLHNCQUFzQjtJQUN0QkMsWUFBWTtJQUNaQyxhQUFhO0lBQ2JDLGdCQUFnQjtJQUNoQkMsa0JBQWtCO0lBQ2xCQyxhQUFhO0FBQ2Y7QUFNTyxNQUFNaEMsaUJBQWlCO0lBQzVCaUMsU0FBUztJQUNUQyxPQUFPO0lBQ1BDLE1BQU07QUFDUjtBQUVPLE1BQU1sQyxlQUFlO0lBQzFCZ0MsU0FBUztJQUNURyxVQUFVO0FBQ1o7QUFFTyxNQUFNbEMsMkJBQTJCO0lBQ3RDbUMsUUFBUTtJQUNSQyxRQUFRO0FBQ1Y7QUFFTyxNQUFNbkMsNkJBQTZCO0lBQ3hDb0MsVUFBVTtJQUNWQyxVQUFVO0lBQ1ZDLG9CQUFvQjtBQUN0QjtBQUtPLE1BQU1uQyxpQkFBaUI7SUFDNUJvQyxhQUFhO0lBQ2JDLGNBQWM7SUFDZEMsYUFBYTtJQUNiQyxlQUFlO0lBQ2ZDLGFBQWE7SUFDYkMsWUFBWTtJQUNaQyxZQUFZO0lBQ1pDLGFBQWE7SUFDYkMsZUFBZTtJQUNmQyxjQUFjO0lBQ2RDLGFBQWE7SUFDYkMsY0FBYztJQUNkQyxlQUFlO0lBQ2ZDLDJCQUEyQjtJQUMzQkMsMkJBQTJCO0lBQzNCQyxvQkFBb0I7SUFDcEJDLGNBQWM7SUFDZEMsaUJBQWlCO0lBQ2pCQyxtQkFBbUI7SUFDbkJDLHNCQUFzQjtBQUN4QjtBQUtPLE1BQU14RCw2QkFBNkI7SUFDeEN5RCxNQUFNO0lBQ05DLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxLQUFLO0lBQ0xDLGFBQWE7SUFDYkMsY0FBYztJQUNkQyxXQUFXO0lBQ1hDLFVBQVU7SUFDVkMsV0FBVztJQUNYQyxtQkFBbUI7QUFDckIifQ==

}),
8704: (function (__unused_webpack_module, exports) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "InteractionTypeConsts", ({
    enumerable: true,
    get: function() {
        return InteractionTypeConsts;
    }
}));
const InteractionTypeConsts = {
    MOUSE_CLICK_INTERACTION: 'MOUSE_CLICK_INTERACTION',
    MOUSE_HOVER_INTERACTION: 'MOUSE_HOVER_INTERACTION',
    MOUSE_MOVE_INTERACTION: 'MOUSE_MOVE_INTERACTION',
    SCROLL_INTO_VIEW_INTERACTION: 'SCROLL_INTO_VIEW_INTERACTION',
    SCROLLING_IN_VIEW_INTERACTION: 'SCROLLING_IN_VIEW_INTERACTION',
    MOUSE_MOVE_IN_VIEWPORT_INTERACTION: 'MOUSE_MOVE_IN_VIEWPORT_INTERACTION',
    PAGE_IS_SCROLLING_INTERACTION: 'PAGE_IS_SCROLLING_INTERACTION',
    PAGE_LOAD_INTERACTION: 'PAGE_LOAD_INTERACTION',
    PAGE_SCROLLED_INTERACTION: 'PAGE_SCROLLED_INTERACTION',
    NAVBAR_INTERACTION: 'NAVBAR_INTERACTION',
    DROPDOWN_INTERACTION: 'DROPDOWN_INTERACTION',
    ECOMMERCE_CART_INTERACTION: 'ECOMMERCE_CART_INTERACTION',
    TAB_INTERACTION: 'TAB_INTERACTION',
    SLIDER_INTERACTION: 'SLIDER_INTERACTION'
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyaWdnZXItaW50ZXJhY3Rpb25zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBJbnRlcmFjdGlvblR5cGVDb25zdHMgPSB7XG4gIE1PVVNFX0NMSUNLX0lOVEVSQUNUSU9OOiAnTU9VU0VfQ0xJQ0tfSU5URVJBQ1RJT04nIGFzIGNvbnN0LFxuICBNT1VTRV9IT1ZFUl9JTlRFUkFDVElPTjogJ01PVVNFX0hPVkVSX0lOVEVSQUNUSU9OJyBhcyBjb25zdCxcbiAgTU9VU0VfTU9WRV9JTlRFUkFDVElPTjogJ01PVVNFX01PVkVfSU5URVJBQ1RJT04nIGFzIGNvbnN0LFxuICBTQ1JPTExfSU5UT19WSUVXX0lOVEVSQUNUSU9OOiAnU0NST0xMX0lOVE9fVklFV19JTlRFUkFDVElPTicgYXMgY29uc3QsXG4gIFNDUk9MTElOR19JTl9WSUVXX0lOVEVSQUNUSU9OOiAnU0NST0xMSU5HX0lOX1ZJRVdfSU5URVJBQ1RJT04nIGFzIGNvbnN0LFxuICBNT1VTRV9NT1ZFX0lOX1ZJRVdQT1JUX0lOVEVSQUNUSU9OOlxuICAgICdNT1VTRV9NT1ZFX0lOX1ZJRVdQT1JUX0lOVEVSQUNUSU9OJyBhcyBjb25zdCxcbiAgUEFHRV9JU19TQ1JPTExJTkdfSU5URVJBQ1RJT046ICdQQUdFX0lTX1NDUk9MTElOR19JTlRFUkFDVElPTicgYXMgY29uc3QsXG4gIFBBR0VfTE9BRF9JTlRFUkFDVElPTjogJ1BBR0VfTE9BRF9JTlRFUkFDVElPTicgYXMgY29uc3QsXG4gIFBBR0VfU0NST0xMRURfSU5URVJBQ1RJT046ICdQQUdFX1NDUk9MTEVEX0lOVEVSQUNUSU9OJyBhcyBjb25zdCxcbiAgTkFWQkFSX0lOVEVSQUNUSU9OOiAnTkFWQkFSX0lOVEVSQUNUSU9OJyBhcyBjb25zdCxcbiAgRFJPUERPV05fSU5URVJBQ1RJT046ICdEUk9QRE9XTl9JTlRFUkFDVElPTicgYXMgY29uc3QsXG4gIEVDT01NRVJDRV9DQVJUX0lOVEVSQUNUSU9OOiAnRUNPTU1FUkNFX0NBUlRfSU5URVJBQ1RJT04nIGFzIGNvbnN0LFxuICBUQUJfSU5URVJBQ1RJT046ICdUQUJfSU5URVJBQ1RJT04nIGFzIGNvbnN0LFxuICBTTElERVJfSU5URVJBQ1RJT046ICdTTElERVJfSU5URVJBQ1RJT04nIGFzIGNvbnN0LFxufSBhcyBjb25zdDtcbiJdLCJuYW1lcyI6WyJJbnRlcmFjdGlvblR5cGVDb25zdHMiLCJNT1VTRV9DTElDS19JTlRFUkFDVElPTiIsIk1PVVNFX0hPVkVSX0lOVEVSQUNUSU9OIiwiTU9VU0VfTU9WRV9JTlRFUkFDVElPTiIsIlNDUk9MTF9JTlRPX1ZJRVdfSU5URVJBQ1RJT04iLCJTQ1JPTExJTkdfSU5fVklFV19JTlRFUkFDVElPTiIsIk1PVVNFX01PVkVfSU5fVklFV1BPUlRfSU5URVJBQ1RJT04iLCJQQUdFX0lTX1NDUk9MTElOR19JTlRFUkFDVElPTiIsIlBBR0VfTE9BRF9JTlRFUkFDVElPTiIsIlBBR0VfU0NST0xMRURfSU5URVJBQ1RJT04iLCJOQVZCQVJfSU5URVJBQ1RJT04iLCJEUk9QRE9XTl9JTlRFUkFDVElPTiIsIkVDT01NRVJDRV9DQVJUX0lOVEVSQUNUSU9OIiwiVEFCX0lOVEVSQUNUSU9OIiwiU0xJREVSX0lOVEVSQUNUSU9OIl0sIm1hcHBpbmdzIjoiOzs7OytCQUFhQTs7O2VBQUFBOzs7QUFBTixNQUFNQSx3QkFBd0I7SUFDbkNDLHlCQUF5QjtJQUN6QkMseUJBQXlCO0lBQ3pCQyx3QkFBd0I7SUFDeEJDLDhCQUE4QjtJQUM5QkMsK0JBQStCO0lBQy9CQyxvQ0FDRTtJQUNGQywrQkFBK0I7SUFDL0JDLHVCQUF1QjtJQUN2QkMsMkJBQTJCO0lBQzNCQyxvQkFBb0I7SUFDcEJDLHNCQUFzQjtJQUN0QkMsNEJBQTRCO0lBQzVCQyxpQkFBaUI7SUFDakJDLG9CQUFvQjtBQUN0QiJ9

}),
380: (function (__unused_webpack_module, exports) {
"use strict";
// Big List of Colors
// ------------------
// <https://www.w3.org/TR/css-color-4/#named-colors>

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "normalizeColor", ({
    enumerable: true,
    get: function() {
        return normalizeColor;
    }
}));
const colorNamesObj = {
    aliceblue: '#F0F8FF',
    antiquewhite: '#FAEBD7',
    aqua: '#00FFFF',
    aquamarine: '#7FFFD4',
    azure: '#F0FFFF',
    beige: '#F5F5DC',
    bisque: '#FFE4C4',
    black: '#000000',
    blanchedalmond: '#FFEBCD',
    blue: '#0000FF',
    blueviolet: '#8A2BE2',
    brown: '#A52A2A',
    burlywood: '#DEB887',
    cadetblue: '#5F9EA0',
    chartreuse: '#7FFF00',
    chocolate: '#D2691E',
    coral: '#FF7F50',
    cornflowerblue: '#6495ED',
    cornsilk: '#FFF8DC',
    crimson: '#DC143C',
    cyan: '#00FFFF',
    darkblue: '#00008B',
    darkcyan: '#008B8B',
    darkgoldenrod: '#B8860B',
    darkgray: '#A9A9A9',
    darkgreen: '#006400',
    darkgrey: '#A9A9A9',
    darkkhaki: '#BDB76B',
    darkmagenta: '#8B008B',
    darkolivegreen: '#556B2F',
    darkorange: '#FF8C00',
    darkorchid: '#9932CC',
    darkred: '#8B0000',
    darksalmon: '#E9967A',
    darkseagreen: '#8FBC8F',
    darkslateblue: '#483D8B',
    darkslategray: '#2F4F4F',
    darkslategrey: '#2F4F4F',
    darkturquoise: '#00CED1',
    darkviolet: '#9400D3',
    deeppink: '#FF1493',
    deepskyblue: '#00BFFF',
    dimgray: '#696969',
    dimgrey: '#696969',
    dodgerblue: '#1E90FF',
    firebrick: '#B22222',
    floralwhite: '#FFFAF0',
    forestgreen: '#228B22',
    fuchsia: '#FF00FF',
    gainsboro: '#DCDCDC',
    ghostwhite: '#F8F8FF',
    gold: '#FFD700',
    goldenrod: '#DAA520',
    gray: '#808080',
    green: '#008000',
    greenyellow: '#ADFF2F',
    grey: '#808080',
    honeydew: '#F0FFF0',
    hotpink: '#FF69B4',
    indianred: '#CD5C5C',
    indigo: '#4B0082',
    ivory: '#FFFFF0',
    khaki: '#F0E68C',
    lavender: '#E6E6FA',
    lavenderblush: '#FFF0F5',
    lawngreen: '#7CFC00',
    lemonchiffon: '#FFFACD',
    lightblue: '#ADD8E6',
    lightcoral: '#F08080',
    lightcyan: '#E0FFFF',
    lightgoldenrodyellow: '#FAFAD2',
    lightgray: '#D3D3D3',
    lightgreen: '#90EE90',
    lightgrey: '#D3D3D3',
    lightpink: '#FFB6C1',
    lightsalmon: '#FFA07A',
    lightseagreen: '#20B2AA',
    lightskyblue: '#87CEFA',
    lightslategray: '#778899',
    lightslategrey: '#778899',
    lightsteelblue: '#B0C4DE',
    lightyellow: '#FFFFE0',
    lime: '#00FF00',
    limegreen: '#32CD32',
    linen: '#FAF0E6',
    magenta: '#FF00FF',
    maroon: '#800000',
    mediumaquamarine: '#66CDAA',
    mediumblue: '#0000CD',
    mediumorchid: '#BA55D3',
    mediumpurple: '#9370DB',
    mediumseagreen: '#3CB371',
    mediumslateblue: '#7B68EE',
    mediumspringgreen: '#00FA9A',
    mediumturquoise: '#48D1CC',
    mediumvioletred: '#C71585',
    midnightblue: '#191970',
    mintcream: '#F5FFFA',
    mistyrose: '#FFE4E1',
    moccasin: '#FFE4B5',
    navajowhite: '#FFDEAD',
    navy: '#000080',
    oldlace: '#FDF5E6',
    olive: '#808000',
    olivedrab: '#6B8E23',
    orange: '#FFA500',
    orangered: '#FF4500',
    orchid: '#DA70D6',
    palegoldenrod: '#EEE8AA',
    palegreen: '#98FB98',
    paleturquoise: '#AFEEEE',
    palevioletred: '#DB7093',
    papayawhip: '#FFEFD5',
    peachpuff: '#FFDAB9',
    peru: '#CD853F',
    pink: '#FFC0CB',
    plum: '#DDA0DD',
    powderblue: '#B0E0E6',
    purple: '#800080',
    rebeccapurple: '#663399',
    red: '#FF0000',
    rosybrown: '#BC8F8F',
    royalblue: '#4169E1',
    saddlebrown: '#8B4513',
    salmon: '#FA8072',
    sandybrown: '#F4A460',
    seagreen: '#2E8B57',
    seashell: '#FFF5EE',
    sienna: '#A0522D',
    silver: '#C0C0C0',
    skyblue: '#87CEEB',
    slateblue: '#6A5ACD',
    slategray: '#708090',
    slategrey: '#708090',
    snow: '#FFFAFA',
    springgreen: '#00FF7F',
    steelblue: '#4682B4',
    tan: '#D2B48C',
    teal: '#008080',
    thistle: '#D8BFD8',
    tomato: '#FF6347',
    turquoise: '#40E0D0',
    violet: '#EE82EE',
    wheat: '#F5DEB3',
    white: '#FFFFFF',
    whitesmoke: '#F5F5F5',
    yellow: '#FFFF00',
    yellowgreen: '#9ACD32'
};
function normalizeColor(inputColor) {
    let red;
    let green;
    let blue;
    let alpha = 1; // Default alpha to 1
    const rawColor = inputColor.replace(/\s/g, '').toLowerCase();
    const namedColor = typeof colorNamesObj[rawColor] === 'string' ? colorNamesObj[rawColor].toLowerCase() : null;
    const cleanColor = namedColor || rawColor;
    if (cleanColor.startsWith('#')) {
        const hex = cleanColor.substring(1);
        if (hex.length === 3 || hex.length === 4) {
            red = parseInt(hex[0] + hex[0], 16);
            green = parseInt(hex[1] + hex[1], 16);
            blue = parseInt(hex[2] + hex[2], 16);
            if (hex.length === 4) {
                alpha = parseInt(hex[3] + hex[3], 16) / 255;
            }
        } else if (hex.length === 6 || hex.length === 8) {
            red = parseInt(hex.substring(0, 2), 16);
            green = parseInt(hex.substring(2, 4), 16);
            blue = parseInt(hex.substring(4, 6), 16);
            if (hex.length === 8) {
                alpha = parseInt(hex.substring(6, 8), 16) / 255;
            }
        }
    } else if (cleanColor.startsWith('rgba')) {
        const rgbaValues = cleanColor.match(/rgba\(([^)]+)\)/)[1].split(',');
        red = parseInt(rgbaValues[0], 10);
        green = parseInt(rgbaValues[1], 10);
        blue = parseInt(rgbaValues[2], 10);
        alpha = parseFloat(rgbaValues[3]);
    } else if (cleanColor.startsWith('rgb')) {
        const rgbValues = cleanColor.match(/rgb\(([^)]+)\)/)[1].split(',');
        red = parseInt(rgbValues[0], 10);
        green = parseInt(rgbValues[1], 10);
        blue = parseInt(rgbValues[2], 10);
    } else if (cleanColor.startsWith('hsla')) {
        const hslaValues = cleanColor.match(/hsla\(([^)]+)\)/)[1].split(',');
        const h = parseFloat(hslaValues[0]);
        const s = parseFloat(hslaValues[1].replace('%', '')) / 100;
        const l = parseFloat(hslaValues[2].replace('%', '')) / 100;
        alpha = parseFloat(hslaValues[3]);
        // Convert HSL to RGB
        const C = (1 - Math.abs(2 * l - 1)) * s;
        const X = C * (1 - Math.abs(h / 60 % 2 - 1));
        const m = l - C / 2;
        let R;
        let G;
        let B;
        if (h >= 0 && h < 60) {
            R = C;
            G = X;
            B = 0;
        } else if (h >= 60 && h < 120) {
            R = X;
            G = C;
            B = 0;
        } else if (h >= 120 && h < 180) {
            R = 0;
            G = C;
            B = X;
        } else if (h >= 180 && h < 240) {
            R = 0;
            G = X;
            B = C;
        } else if (h >= 240 && h < 300) {
            R = X;
            G = 0;
            B = C;
        } else {
            R = C;
            G = 0;
            B = X;
        }
        red = Math.round((R + m) * 255);
        green = Math.round((G + m) * 255);
        blue = Math.round((B + m) * 255);
    } else if (cleanColor.startsWith('hsl')) {
        const hslValues = cleanColor.match(/hsl\(([^)]+)\)/)[1].split(',');
        const h = parseFloat(hslValues[0]);
        const s = parseFloat(hslValues[1].replace('%', '')) / 100;
        const l = parseFloat(hslValues[2].replace('%', '')) / 100;
        // Convert HSL to RGB (without alpha)
        const C = (1 - Math.abs(2 * l - 1)) * s;
        const X = C * (1 - Math.abs(h / 60 % 2 - 1));
        const m = l - C / 2;
        let R;
        let G;
        let B;
        if (h >= 0 && h < 60) {
            R = C;
            G = X;
            B = 0;
        } else if (h >= 60 && h < 120) {
            R = X;
            G = C;
            B = 0;
        } else if (h >= 120 && h < 180) {
            R = 0;
            G = C;
            B = X;
        } else if (h >= 180 && h < 240) {
            R = 0;
            G = X;
            B = C;
        } else if (h >= 240 && h < 300) {
            R = X;
            G = 0;
            B = C;
        } else {
            R = C;
            G = 0;
            B = X;
        }
        red = Math.round((R + m) * 255);
        green = Math.round((G + m) * 255);
        blue = Math.round((B + m) * 255);
    }
    if (Number.isNaN(red) || Number.isNaN(green) || Number.isNaN(blue)) {
        throw new Error(`Invalid color in [ix2/shared/utils/normalizeColor.js] '${inputColor}'`);
    }
    return {
        red,
        green,
        blue,
        alpha
    };
}

//# sourceMappingURL=data:application/json;base64,

}),
9468: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    // IX2Actions,
    IX2BrowserSupport: function() {
        return _IX2BrowserSupport;
    },
    IX2EasingUtils: function() {
        return _IX2EasingUtils;
    },
    IX2Easings: function() {
        return _IX2Easings;
    },
    IX2ElementsReducer: function() {
        return _IX2ElementsReducer;
    },
    IX2VanillaPlugins: function() {
        return _IX2VanillaPlugins;
    },
    IX2VanillaUtils: function() {
        return _IX2VanillaUtils;
    }
});
const _IX2BrowserSupport = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(2662));
const _IX2Easings = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(8686));
const _IX2EasingUtils = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(3767));
const _IX2ElementsReducer = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(5861));
const _IX2VanillaPlugins = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(1799));
const _IX2VanillaUtils = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(4124));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIElYMkJyb3dzZXJTdXBwb3J0IGZyb20gJy4vbG9naWMvSVgyQnJvd3NlclN1cHBvcnQnO1xuaW1wb3J0ICogYXMgSVgyRWFzaW5ncyBmcm9tICcuL2xvZ2ljL0lYMkVhc2luZ3MnO1xuaW1wb3J0ICogYXMgSVgyRWFzaW5nVXRpbHMgZnJvbSAnLi9sb2dpYy9JWDJFYXNpbmdVdGlscyc7XG5pbXBvcnQgKiBhcyBJWDJFbGVtZW50c1JlZHVjZXIgZnJvbSAnLi9yZWR1Y2Vycy9JWDJFbGVtZW50c1JlZHVjZXInO1xuaW1wb3J0ICogYXMgSVgyVmFuaWxsYVBsdWdpbnMgZnJvbSAnLi9sb2dpYy9JWDJWYW5pbGxhUGx1Z2lucyc7XG5pbXBvcnQgKiBhcyBJWDJWYW5pbGxhVXRpbHMgZnJvbSAnLi9sb2dpYy9JWDJWYW5pbGxhVXRpbHMnO1xuZXhwb3J0IHtcbiAgLy8gSVgyQWN0aW9ucyxcbiAgSVgyQnJvd3NlclN1cHBvcnQsXG4gIElYMkVhc2luZ3MsXG4gIElYMkVhc2luZ1V0aWxzLFxuICBJWDJFbGVtZW50c1JlZHVjZXIsXG4gIElYMlZhbmlsbGFQbHVnaW5zLFxuICBJWDJWYW5pbGxhVXRpbHMsXG59O1xuIl0sIm5hbWVzIjpbIklYMkJyb3dzZXJTdXBwb3J0IiwiSVgyRWFzaW5nVXRpbHMiLCJJWDJFYXNpbmdzIiwiSVgyRWxlbWVudHNSZWR1Y2VyIiwiSVgyVmFuaWxsYVBsdWdpbnMiLCJJWDJWYW5pbGxhVXRpbHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBT0UsY0FBYztJQUNkQSxpQkFBaUI7ZUFBakJBOztJQUVBQyxjQUFjO2VBQWRBOztJQURBQyxVQUFVO2VBQVZBOztJQUVBQyxrQkFBa0I7ZUFBbEJBOztJQUNBQyxpQkFBaUI7ZUFBakJBOztJQUNBQyxlQUFlO2VBQWZBOzs7MkVBYmlDO29FQUNQO3dFQUNJOzRFQUNJOzJFQUNEO3lFQUNGIn0=

}),
2662: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/* eslint-env browser */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ELEMENT_MATCHES: function() {
        return ELEMENT_MATCHES;
    },
    FLEX_PREFIXED: function() {
        return FLEX_PREFIXED;
    },
    IS_BROWSER_ENV: function() {
        return IS_BROWSER_ENV;
    },
    TRANSFORM_PREFIXED: function() {
        return TRANSFORM_PREFIXED;
    },
    TRANSFORM_STYLE_PREFIXED: function() {
        return TRANSFORM_STYLE_PREFIXED;
    },
    withBrowser: function() {
        return withBrowser;
    }
});
const _find = /*#__PURE__*/ _interop_require_default(__webpack_require__(9777));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const IS_BROWSER_ENV = typeof window !== 'undefined';
const withBrowser = (fn, fallback)=>{
    if (IS_BROWSER_ENV) {
        return fn();
    }
    return fallback;
};
const ELEMENT_MATCHES = withBrowser(()=>{
    return (0, _find.default)([
        'matches',
        'matchesSelector',
        'mozMatchesSelector',
        'msMatchesSelector',
        'oMatchesSelector',
        'webkitMatchesSelector'
    ], (key)=>key in Element.prototype);
});
const FLEX_PREFIXED = withBrowser(()=>{
    const el = document.createElement('i');
    const values = [
        'flex',
        '-webkit-flex',
        '-ms-flexbox',
        '-moz-box',
        '-webkit-box'
    ];
    const none = '';
    try {
        const { length } = values;
        for(let i = 0; i < length; i++){
            const value = values[i];
            // @ts-expect-error - TS2322 - Type 'string | undefined' is not assignable to type 'string'.
            el.style.display = value;
            if (el.style.display === value) {
                return value;
            }
        }
        return none;
    } catch (err) {
        return none;
    }
}, 'flex');
const TRANSFORM_PREFIXED = withBrowser(()=>{
    const el = document.createElement('i');
    if (el.style.transform == null) {
        const prefixes = [
            'Webkit',
            'Moz',
            'ms'
        ];
        const suffix = 'Transform';
        const { length } = prefixes;
        for(let i = 0; i < length; i++){
            const prop = prefixes[i] + suffix;
            // @ts-expect-error - TS7015 - Element implicitly has an 'any' type because index expression is not of type 'number'.
            if (el.style[prop] !== undefined) {
                return prop;
            }
        }
    }
    return 'transform';
}, 'transform');
const TRANSFORM_PREFIX = TRANSFORM_PREFIXED.split('transform')[0];
const TRANSFORM_STYLE_PREFIXED = TRANSFORM_PREFIX ? TRANSFORM_PREFIX + 'TransformStyle' : 'transformStyle';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMkJyb3dzZXJTdXBwb3J0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1lbnYgYnJvd3NlciAqL1xuaW1wb3J0IGZpbmQgZnJvbSAnbG9kYXNoL2ZpbmQnO1xuXG5leHBvcnQgY29uc3QgSVNfQlJPV1NFUl9FTlYgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJztcblxuZXhwb3J0IGNvbnN0IHdpdGhCcm93c2VyID0gKGZuOiBhbnksIGZhbGxiYWNrOiBhbnkpID0+IHtcbiAgaWYgKElTX0JST1dTRVJfRU5WKSB7XG4gICAgcmV0dXJuIGZuKCk7XG4gIH1cbiAgcmV0dXJuIGZhbGxiYWNrO1xufTtcblxuLy8gQHRzLWV4cGVjdC1lcnJvciAtIFRTMjU1NCAtIEV4cGVjdGVkIDIgYXJndW1lbnRzLCBidXQgZ290IDEuXG5leHBvcnQgY29uc3QgRUxFTUVOVF9NQVRDSEVTID0gd2l0aEJyb3dzZXIoKCkgPT4ge1xuICByZXR1cm4gZmluZChcbiAgICBbXG4gICAgICAnbWF0Y2hlcycsXG4gICAgICAnbWF0Y2hlc1NlbGVjdG9yJyxcbiAgICAgICdtb3pNYXRjaGVzU2VsZWN0b3InLFxuICAgICAgJ21zTWF0Y2hlc1NlbGVjdG9yJyxcbiAgICAgICdvTWF0Y2hlc1NlbGVjdG9yJyxcbiAgICAgICd3ZWJraXRNYXRjaGVzU2VsZWN0b3InLFxuICAgIF0sXG4gICAgKGtleSkgPT4ga2V5IGluIEVsZW1lbnQucHJvdG90eXBlXG4gICk7XG59KTtcblxuZXhwb3J0IGNvbnN0IEZMRVhfUFJFRklYRUQgPSB3aXRoQnJvd3NlcigoKSA9PiB7XG4gIGNvbnN0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpO1xuICBjb25zdCB2YWx1ZXMgPSBbXG4gICAgJ2ZsZXgnLFxuICAgICctd2Via2l0LWZsZXgnLFxuICAgICctbXMtZmxleGJveCcsXG4gICAgJy1tb3otYm94JyxcbiAgICAnLXdlYmtpdC1ib3gnLFxuICBdO1xuICBjb25zdCBub25lID0gJyc7XG4gIHRyeSB7XG4gICAgY29uc3Qge2xlbmd0aH0gPSB2YWx1ZXM7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgdmFsdWUgPSB2YWx1ZXNbaV07XG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gVFMyMzIyIC0gVHlwZSAnc3RyaW5nIHwgdW5kZWZpbmVkJyBpcyBub3QgYXNzaWduYWJsZSB0byB0eXBlICdzdHJpbmcnLlxuICAgICAgZWwuc3R5bGUuZGlzcGxheSA9IHZhbHVlO1xuICAgICAgaWYgKGVsLnN0eWxlLmRpc3BsYXkgPT09IHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5vbmU7XG4gIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgcmV0dXJuIG5vbmU7XG4gIH1cbn0sICdmbGV4Jyk7XG5cbmV4cG9ydCBjb25zdCBUUkFOU0ZPUk1fUFJFRklYRUQgPSB3aXRoQnJvd3NlcigoKSA9PiB7XG4gIGNvbnN0IGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpO1xuICBpZiAoZWwuc3R5bGUudHJhbnNmb3JtID09IG51bGwpIHtcbiAgICBjb25zdCBwcmVmaXhlcyA9IFsnV2Via2l0JywgJ01veicsICdtcyddO1xuICAgIGNvbnN0IHN1ZmZpeCA9ICdUcmFuc2Zvcm0nO1xuICAgIGNvbnN0IHtsZW5ndGh9ID0gcHJlZml4ZXM7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgcHJvcCA9IHByZWZpeGVzW2ldICsgc3VmZml4O1xuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtIFRTNzAxNSAtIEVsZW1lbnQgaW1wbGljaXRseSBoYXMgYW4gJ2FueScgdHlwZSBiZWNhdXNlIGluZGV4IGV4cHJlc3Npb24gaXMgbm90IG9mIHR5cGUgJ251bWJlcicuXG4gICAgICBpZiAoZWwuc3R5bGVbcHJvcF0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gcHJvcDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuICd0cmFuc2Zvcm0nO1xufSwgJ3RyYW5zZm9ybScpO1xuXG5jb25zdCBUUkFOU0ZPUk1fUFJFRklYID0gVFJBTlNGT1JNX1BSRUZJWEVELnNwbGl0KCd0cmFuc2Zvcm0nKVswXTtcblxuZXhwb3J0IGNvbnN0IFRSQU5TRk9STV9TVFlMRV9QUkVGSVhFRCA9IFRSQU5TRk9STV9QUkVGSVhcbiAgPyBUUkFOU0ZPUk1fUFJFRklYICsgJ1RyYW5zZm9ybVN0eWxlJ1xuICA6ICd0cmFuc2Zvcm1TdHlsZSc7XG4iXSwibmFtZXMiOlsiRUxFTUVOVF9NQVRDSEVTIiwiRkxFWF9QUkVGSVhFRCIsIklTX0JST1dTRVJfRU5WIiwiVFJBTlNGT1JNX1BSRUZJWEVEIiwiVFJBTlNGT1JNX1NUWUxFX1BSRUZJWEVEIiwid2l0aEJyb3dzZXIiLCJ3aW5kb3ciLCJmbiIsImZhbGxiYWNrIiwiZmluZCIsImtleSIsIkVsZW1lbnQiLCJwcm90b3R5cGUiLCJlbCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInZhbHVlcyIsIm5vbmUiLCJsZW5ndGgiLCJpIiwidmFsdWUiLCJzdHlsZSIsImRpc3BsYXkiLCJlcnIiLCJ0cmFuc2Zvcm0iLCJwcmVmaXhlcyIsInN1ZmZpeCIsInByb3AiLCJ1bmRlZmluZWQiLCJUUkFOU0ZPUk1fUFJFRklYIiwic3BsaXQiXSwibWFwcGluZ3MiOiJBQUFBLHNCQUFzQjs7Ozs7Ozs7Ozs7SUFhVEEsZUFBZTtlQUFmQTs7SUFjQUMsYUFBYTtlQUFiQTs7SUF4QkFDLGNBQWM7ZUFBZEE7O0lBa0RBQyxrQkFBa0I7ZUFBbEJBOztJQW1CQUMsd0JBQXdCO2VBQXhCQTs7SUFuRUFDLFdBQVc7ZUFBWEE7Ozs2REFKSTs7Ozs7O0FBRVYsTUFBTUgsaUJBQWlCLE9BQU9JLFdBQVc7QUFFekMsTUFBTUQsY0FBYyxDQUFDRSxJQUFTQztJQUNuQyxJQUFJTixnQkFBZ0I7UUFDbEIsT0FBT0s7SUFDVDtJQUNBLE9BQU9DO0FBQ1Q7QUFHTyxNQUFNUixrQkFBa0JLLFlBQVk7SUFDekMsT0FBT0ksSUFBQUEsYUFBSSxFQUNUO1FBQ0U7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO0tBQ0QsRUFDRCxDQUFDQyxNQUFRQSxPQUFPQyxRQUFRQyxTQUFTO0FBRXJDO0FBRU8sTUFBTVgsZ0JBQWdCSSxZQUFZO0lBQ3ZDLE1BQU1RLEtBQUtDLFNBQVNDLGFBQWEsQ0FBQztJQUNsQyxNQUFNQyxTQUFTO1FBQ2I7UUFDQTtRQUNBO1FBQ0E7UUFDQTtLQUNEO0lBQ0QsTUFBTUMsT0FBTztJQUNiLElBQUk7UUFDRixNQUFNLEVBQUNDLE1BQU0sRUFBQyxHQUFHRjtRQUNqQixJQUFLLElBQUlHLElBQUksR0FBR0EsSUFBSUQsUUFBUUMsSUFBSztZQUMvQixNQUFNQyxRQUFRSixNQUFNLENBQUNHLEVBQUU7WUFDdkIsNEZBQTRGO1lBQzVGTixHQUFHUSxLQUFLLENBQUNDLE9BQU8sR0FBR0Y7WUFDbkIsSUFBSVAsR0FBR1EsS0FBSyxDQUFDQyxPQUFPLEtBQUtGLE9BQU87Z0JBQzlCLE9BQU9BO1lBQ1Q7UUFDRjtRQUNBLE9BQU9IO0lBQ1QsRUFBRSxPQUFPTSxLQUFVO1FBQ2pCLE9BQU9OO0lBQ1Q7QUFDRixHQUFHO0FBRUksTUFBTWQscUJBQXFCRSxZQUFZO0lBQzVDLE1BQU1RLEtBQUtDLFNBQVNDLGFBQWEsQ0FBQztJQUNsQyxJQUFJRixHQUFHUSxLQUFLLENBQUNHLFNBQVMsSUFBSSxNQUFNO1FBQzlCLE1BQU1DLFdBQVc7WUFBQztZQUFVO1lBQU87U0FBSztRQUN4QyxNQUFNQyxTQUFTO1FBQ2YsTUFBTSxFQUFDUixNQUFNLEVBQUMsR0FBR087UUFDakIsSUFBSyxJQUFJTixJQUFJLEdBQUdBLElBQUlELFFBQVFDLElBQUs7WUFDL0IsTUFBTVEsT0FBT0YsUUFBUSxDQUFDTixFQUFFLEdBQUdPO1lBQzNCLHFIQUFxSDtZQUNySCxJQUFJYixHQUFHUSxLQUFLLENBQUNNLEtBQUssS0FBS0MsV0FBVztnQkFDaEMsT0FBT0Q7WUFDVDtRQUNGO0lBQ0Y7SUFDQSxPQUFPO0FBQ1QsR0FBRztBQUVILE1BQU1FLG1CQUFtQjFCLG1CQUFtQjJCLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBRTtBQUUxRCxNQUFNMUIsMkJBQTJCeUIsbUJBQ3BDQSxtQkFBbUIsbUJBQ25CIn0=

}),
3767: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    applyEasing: function() {
        return applyEasing;
    },
    createBezierEasing: function() {
        return createBezierEasing;
    },
    optimizeFloat: function() {
        return optimizeFloat;
    }
});
const _IX2Easings = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(8686));
const _beziereasing = /*#__PURE__*/ _interop_require_default(__webpack_require__(1361));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function optimizeFloat(value, digits = 5, base = 10) {
    const pow = Math.pow(base, digits);
    const float = Number(Math.round(value * pow) / pow);
    return Math.abs(float) > 0.0001 ? float : 0;
}
function createBezierEasing(easing) {
    return (0, _beziereasing.default)(...easing);
}
function applyEasing(easing, position, customEasingFn) {
    if (position === 0) {
        return 0;
    }
    if (position === 1) {
        return 1;
    }
    if (customEasingFn) {
        return optimizeFloat(position > 0 ? customEasingFn(position) : position);
    }
    return optimizeFloat(position > 0 && easing && _IX2Easings[easing] ? _IX2Easings[easing](position) : position);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMkVhc2luZ1V0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtcbiAgSVgyRWFzaW5nRW51bVR5cGUsXG4gIElYMkVhc2luZ0N1c3RvbVR5cGUsXG59IGZyb20gJ0BwYWNrYWdlcy9zeXN0ZW1zL2l4Mi90eXBlcy1jb3JlJztcbmltcG9ydCAqIGFzIGVhc2luZ3MgZnJvbSAnLi9JWDJFYXNpbmdzJztcbi8vIEB0cy1leHBlY3QtZXJyb3IgLSBUUzcwMTYgLSBDb3VsZCBub3QgZmluZCBhIGRlY2xhcmF0aW9uIGZpbGUgZm9yIG1vZHVsZSAnYmV6aWVyLWVhc2luZycuICcvaG9tZS9ydW5uZXIvd29yay9mbG93LXRvLXR5cGVzY3JpcHQtY29kZW1vZC9mbG93LXRvLXR5cGVzY3JpcHQtY29kZW1vZC93ZWJmbG93L25vZGVfbW9kdWxlcy9iZXppZXItZWFzaW5nL3NyYy9pbmRleC5qcycgaW1wbGljaXRseSBoYXMgYW4gJ2FueScgdHlwZS5cbmltcG9ydCBCZXppZXJFYXNpbmcgZnJvbSAnYmV6aWVyLWVhc2luZyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBvcHRpbWl6ZUZsb2F0KFxuICB2YWx1ZTogbnVtYmVyLFxuICBkaWdpdHM6IG51bWJlciA9IDUsXG4gIGJhc2U6IG51bWJlciA9IDEwXG4pOiBudW1iZXIge1xuICBjb25zdCBwb3cgPSBNYXRoLnBvdyhiYXNlLCBkaWdpdHMpO1xuICBjb25zdCBmbG9hdCA9IE51bWJlcihNYXRoLnJvdW5kKHZhbHVlICogcG93KSAvIHBvdyk7XG4gIHJldHVybiBNYXRoLmFicyhmbG9hdCkgPiAwLjAwMDEgPyBmbG9hdCA6IDA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCZXppZXJFYXNpbmcoXG4gIGVhc2luZzogSVgyRWFzaW5nQ3VzdG9tVHlwZVxuKTogKGFyZzE6IG51bWJlcikgPT4gbnVtYmVyIHtcbiAgcmV0dXJuIEJlemllckVhc2luZyguLi5lYXNpbmcpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwbHlFYXNpbmcoXG4gIGVhc2luZzogSVgyRWFzaW5nRW51bVR5cGUsXG4gIHBvc2l0aW9uOiBudW1iZXIsXG4gIGN1c3RvbUVhc2luZ0ZuPzogKGFyZzE6IG51bWJlcikgPT4gbnVtYmVyXG4pIHtcbiAgaWYgKHBvc2l0aW9uID09PSAwKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgaWYgKHBvc2l0aW9uID09PSAxKSB7XG4gICAgcmV0dXJuIDE7XG4gIH1cblxuICBpZiAoY3VzdG9tRWFzaW5nRm4pIHtcbiAgICByZXR1cm4gb3B0aW1pemVGbG9hdChwb3NpdGlvbiA+IDAgPyBjdXN0b21FYXNpbmdGbihwb3NpdGlvbikgOiBwb3NpdGlvbik7XG4gIH1cblxuICByZXR1cm4gb3B0aW1pemVGbG9hdChcbiAgICBwb3NpdGlvbiA+IDAgJiYgZWFzaW5nICYmIGVhc2luZ3NbZWFzaW5nXVxuICAgICAgPyBlYXNpbmdzW2Vhc2luZ10ocG9zaXRpb24pXG4gICAgICA6IHBvc2l0aW9uXG4gICk7XG59XG4iXSwibmFtZXMiOlsiYXBwbHlFYXNpbmciLCJjcmVhdGVCZXppZXJFYXNpbmciLCJvcHRpbWl6ZUZsb2F0IiwidmFsdWUiLCJkaWdpdHMiLCJiYXNlIiwicG93IiwiTWF0aCIsImZsb2F0IiwiTnVtYmVyIiwicm91bmQiLCJhYnMiLCJlYXNpbmciLCJCZXppZXJFYXNpbmciLCJwb3NpdGlvbiIsImN1c3RvbUVhc2luZ0ZuIiwiZWFzaW5ncyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUF3QmdCQSxXQUFXO2VBQVhBOztJQU5BQyxrQkFBa0I7ZUFBbEJBOztJQVZBQyxhQUFhO2VBQWJBOzs7b0VBSlM7cUVBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWxCLFNBQVNBLGNBQ2RDLEtBQWEsRUFDYkMsU0FBaUIsQ0FBQyxFQUNsQkMsT0FBZSxFQUFFO0lBRWpCLE1BQU1DLE1BQU1DLEtBQUtELEdBQUcsQ0FBQ0QsTUFBTUQ7SUFDM0IsTUFBTUksUUFBUUMsT0FBT0YsS0FBS0csS0FBSyxDQUFDUCxRQUFRRyxPQUFPQTtJQUMvQyxPQUFPQyxLQUFLSSxHQUFHLENBQUNILFNBQVMsU0FBU0EsUUFBUTtBQUM1QztBQUVPLFNBQVNQLG1CQUNkVyxNQUEyQjtJQUUzQixPQUFPQyxJQUFBQSxxQkFBWSxLQUFJRDtBQUN6QjtBQUVPLFNBQVNaLFlBQ2RZLE1BQXlCLEVBQ3pCRSxRQUFnQixFQUNoQkMsY0FBeUM7SUFFekMsSUFBSUQsYUFBYSxHQUFHO1FBQ2xCLE9BQU87SUFDVDtJQUNBLElBQUlBLGFBQWEsR0FBRztRQUNsQixPQUFPO0lBQ1Q7SUFFQSxJQUFJQyxnQkFBZ0I7UUFDbEIsT0FBT2IsY0FBY1ksV0FBVyxJQUFJQyxlQUFlRCxZQUFZQTtJQUNqRTtJQUVBLE9BQU9aLGNBQ0xZLFdBQVcsS0FBS0YsVUFBVUksV0FBTyxDQUFDSixPQUFPLEdBQ3JDSSxXQUFPLENBQUNKLE9BQU8sQ0FBQ0UsWUFDaEJBO0FBRVIifQ==

}),
8686: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
// @ts-expect-error - TS7016 - Could not find a declaration file for module 'bezier-easing'. '/home/runner/work/flow-to-typescript-codemod/flow-to-typescript-codemod/webflow/node_modules/bezier-easing/src/index.js' implicitly has an 'any' type.

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    bounce: function() {
        return bounce;
    },
    bouncePast: function() {
        return bouncePast;
    },
    ease: function() {
        return ease;
    },
    easeIn: function() {
        return easeIn;
    },
    easeInOut: function() {
        return easeInOut;
    },
    easeOut: function() {
        return easeOut;
    },
    inBack: function() {
        return inBack;
    },
    inCirc: function() {
        return inCirc;
    },
    inCubic: function() {
        return inCubic;
    },
    inElastic: function() {
        return inElastic;
    },
    inExpo: function() {
        return inExpo;
    },
    inOutBack: function() {
        return inOutBack;
    },
    inOutCirc: function() {
        return inOutCirc;
    },
    inOutCubic: function() {
        return inOutCubic;
    },
    inOutElastic: function() {
        return inOutElastic;
    },
    inOutExpo: function() {
        return inOutExpo;
    },
    inOutQuad: function() {
        return inOutQuad;
    },
    inOutQuart: function() {
        return inOutQuart;
    },
    inOutQuint: function() {
        return inOutQuint;
    },
    inOutSine: function() {
        return inOutSine;
    },
    inQuad: function() {
        return inQuad;
    },
    inQuart: function() {
        return inQuart;
    },
    inQuint: function() {
        return inQuint;
    },
    inSine: function() {
        return inSine;
    },
    outBack: function() {
        return outBack;
    },
    outBounce: function() {
        return outBounce;
    },
    outCirc: function() {
        return outCirc;
    },
    outCubic: function() {
        return outCubic;
    },
    outElastic: function() {
        return outElastic;
    },
    outExpo: function() {
        return outExpo;
    },
    outQuad: function() {
        return outQuad;
    },
    outQuart: function() {
        return outQuart;
    },
    outQuint: function() {
        return outQuint;
    },
    outSine: function() {
        return outSine;
    },
    swingFrom: function() {
        return swingFrom;
    },
    swingFromTo: function() {
        return swingFromTo;
    },
    swingTo: function() {
        return swingTo;
    }
});
const _beziereasing = /*#__PURE__*/ _interop_require_default(__webpack_require__(1361));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Easing functions adapted from Thomas Fuchs & Jeremy Kahn
// Easing Equations (c) 2003 Robert Penner, BSD license
// https://raw.github.com/danro/easing-js/master/LICENSE
const magicSwing = 1.70158;
const ease = (0, _beziereasing.default)(0.25, 0.1, 0.25, 1.0);
const easeIn = (0, _beziereasing.default)(0.42, 0.0, 1.0, 1.0);
const easeOut = (0, _beziereasing.default)(0.0, 0.0, 0.58, 1.0);
const easeInOut = (0, _beziereasing.default)(0.42, 0.0, 0.58, 1.0);
function inQuad(pos) {
    return Math.pow(pos, 2);
}
function outQuad(pos) {
    return -(Math.pow(pos - 1, 2) - 1);
}
function inOutQuad(pos) {
    if ((pos /= 0.5) < 1) {
        return 0.5 * Math.pow(pos, 2);
    }
    return -0.5 * ((pos -= 2) * pos - 2);
}
function inCubic(pos) {
    return Math.pow(pos, 3);
}
function outCubic(pos) {
    return Math.pow(pos - 1, 3) + 1;
}
function inOutCubic(pos) {
    if ((pos /= 0.5) < 1) {
        return 0.5 * Math.pow(pos, 3);
    }
    return 0.5 * (Math.pow(pos - 2, 3) + 2);
}
function inQuart(pos) {
    return Math.pow(pos, 4);
}
function outQuart(pos) {
    return -(Math.pow(pos - 1, 4) - 1);
}
function inOutQuart(pos) {
    if ((pos /= 0.5) < 1) {
        return 0.5 * Math.pow(pos, 4);
    }
    return -0.5 * ((pos -= 2) * Math.pow(pos, 3) - 2);
}
function inQuint(pos) {
    return Math.pow(pos, 5);
}
function outQuint(pos) {
    return Math.pow(pos - 1, 5) + 1;
}
function inOutQuint(pos) {
    if ((pos /= 0.5) < 1) {
        return 0.5 * Math.pow(pos, 5);
    }
    return 0.5 * (Math.pow(pos - 2, 5) + 2);
}
function inSine(pos) {
    return -Math.cos(pos * (Math.PI / 2)) + 1;
}
function outSine(pos) {
    return Math.sin(pos * (Math.PI / 2));
}
function inOutSine(pos) {
    return -0.5 * (Math.cos(Math.PI * pos) - 1);
}
function inExpo(pos) {
    return pos === 0 ? 0 : Math.pow(2, 10 * (pos - 1));
}
function outExpo(pos) {
    return pos === 1 ? 1 : -Math.pow(2, -10 * pos) + 1;
}
function inOutExpo(pos) {
    if (pos === 0) {
        return 0;
    }
    if (pos === 1) {
        return 1;
    }
    if ((pos /= 0.5) < 1) {
        return 0.5 * Math.pow(2, 10 * (pos - 1));
    }
    return 0.5 * (-Math.pow(2, -10 * --pos) + 2);
}
function inCirc(pos) {
    return -(Math.sqrt(1 - pos * pos) - 1);
}
function outCirc(pos) {
    return Math.sqrt(1 - Math.pow(pos - 1, 2));
}
function inOutCirc(pos) {
    if ((pos /= 0.5) < 1) {
        return -0.5 * (Math.sqrt(1 - pos * pos) - 1);
    }
    return 0.5 * (Math.sqrt(1 - (pos -= 2) * pos) + 1);
}
function outBounce(pos) {
    if (pos < 1 / 2.75) {
        return 7.5625 * pos * pos;
    } else if (pos < 2 / 2.75) {
        return 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;
    } else if (pos < 2.5 / 2.75) {
        return 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;
    } else {
        return 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;
    }
}
function inBack(pos) {
    const s = magicSwing;
    return pos * pos * ((s + 1) * pos - s);
}
function outBack(pos) {
    const s = magicSwing;
    return (pos -= 1) * pos * ((s + 1) * pos + s) + 1;
}
function inOutBack(pos) {
    let s = magicSwing;
    if ((pos /= 0.5) < 1) {
        return 0.5 * (pos * pos * (((s *= 1.525) + 1) * pos - s));
    }
    return 0.5 * ((pos -= 2) * pos * (((s *= 1.525) + 1) * pos + s) + 2);
}
function inElastic(pos) {
    let s = magicSwing;
    let p = 0;
    let a = 1;
    if (pos === 0) {
        return 0;
    }
    if (pos === 1) {
        return 1;
    }
    if (!p) {
        p = 0.3;
    }
    if (a < 1) {
        a = 1;
        s = p / 4;
    } else {
        s = p / (2 * Math.PI) * Math.asin(1 / a);
    }
    return -(a * Math.pow(2, 10 * (pos -= 1)) * Math.sin((pos - s) * (2 * Math.PI) / p));
}
function outElastic(pos) {
    let s = magicSwing;
    let p = 0;
    let a = 1;
    if (pos === 0) {
        return 0;
    }
    if (pos === 1) {
        return 1;
    }
    if (!p) {
        p = 0.3;
    }
    if (a < 1) {
        a = 1;
        s = p / 4;
    } else {
        s = p / (2 * Math.PI) * Math.asin(1 / a);
    }
    return a * Math.pow(2, -10 * pos) * Math.sin((pos - s) * (2 * Math.PI) / p) + 1;
}
function inOutElastic(pos) {
    let s = magicSwing;
    let p = 0;
    let a = 1;
    if (pos === 0) {
        return 0;
    }
    if ((pos /= 1 / 2) === 2) {
        return 1;
    }
    if (!p) {
        p = 0.3 * 1.5;
    }
    if (a < 1) {
        a = 1;
        s = p / 4;
    } else {
        s = p / (2 * Math.PI) * Math.asin(1 / a);
    }
    if (pos < 1) {
        return -0.5 * (a * Math.pow(2, 10 * (pos -= 1)) * Math.sin((pos - s) * (2 * Math.PI) / p));
    }
    return a * Math.pow(2, -10 * (pos -= 1)) * Math.sin((pos - s) * (2 * Math.PI) / p) * 0.5 + 1;
}
function swingFromTo(pos) {
    let s = magicSwing;
    return (pos /= 0.5) < 1 ? 0.5 * (pos * pos * (((s *= 1.525) + 1) * pos - s)) : 0.5 * ((pos -= 2) * pos * (((s *= 1.525) + 1) * pos + s) + 2);
}
function swingFrom(pos) {
    const s = magicSwing;
    return pos * pos * ((s + 1) * pos - s);
}
function swingTo(pos) {
    const s = magicSwing;
    return (pos -= 1) * pos * ((s + 1) * pos + s) + 1;
}
function bounce(pos) {
    if (pos < 1 / 2.75) {
        return 7.5625 * pos * pos;
    } else if (pos < 2 / 2.75) {
        return 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;
    } else if (pos < 2.5 / 2.75) {
        return 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;
    } else {
        return 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;
    }
}
function bouncePast(pos) {
    if (pos < 1 / 2.75) {
        return 7.5625 * pos * pos;
    } else if (pos < 2 / 2.75) {
        return 2 - (7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75);
    } else if (pos < 2.5 / 2.75) {
        return 2 - (7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375);
    } else {
        return 2 - (7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375);
    }
}

//# sourceMappingURL=data:application/json;base64,

}),
1799: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    clearPlugin: function() {
        return clearPlugin;
    },
    createPluginInstance: function() {
        return createPluginInstance;
    },
    getPluginConfig: function() {
        return getPluginConfig;
    },
    getPluginDestination: function() {
        return getPluginDestination;
    },
    getPluginDuration: function() {
        return getPluginDuration;
    },
    getPluginOrigin: function() {
        return getPluginOrigin;
    },
    isPluginType: function() {
        return isPluginType;
    },
    renderPlugin: function() {
        return renderPlugin;
    }
});
const _IX2BrowserSupport = __webpack_require__(2662);
const _plugins = __webpack_require__(3690);
function isPluginType(actionTypeId) {
    // @ts-expect-error - TS2345 - Argument of type '"TRANSFORM_MOVE" | "TRANSFORM_SCALE" | "TRANSFORM_ROTATE" | "TRANSFORM_SKEW" | "STYLE_OPACITY" | "STYLE_SIZE" | "STYLE_FILTER" | "STYLE_FONT_VARIATION" | "STYLE_BACKGROUND_COLOR" | ... 12 more ... | "STYLE_BOX_SHADOW"' is not assignable to parameter of type '"PLUGIN_LOTTIE" | "PLUGIN_SPLINE" | "PLUGIN_VARIABLE"'.
    return _plugins.pluginMethodMap.has(actionTypeId);
}
const pluginMethod = (methodName)=>(actionTypeId)=>{
        if (!_IX2BrowserSupport.IS_BROWSER_ENV) {
            // IX2 plugins require browser libs for now
            return ()=>null;
        }
        const plugin = _plugins.pluginMethodMap.get(actionTypeId);
        if (!plugin) {
            throw new Error(`IX2 no plugin configured for: ${actionTypeId}`);
        }
        const method = plugin[methodName];
        if (!method) {
            throw new Error(`IX2 invalid plugin method: ${methodName}`);
        }
        return method;
    };
const getPluginConfig = pluginMethod('getPluginConfig');
const getPluginOrigin = pluginMethod('getPluginOrigin');
const getPluginDuration = pluginMethod('getPluginDuration');
const getPluginDestination = pluginMethod('getPluginDestination');
const createPluginInstance = pluginMethod('createPluginInstance');
const renderPlugin = pluginMethod('renderPlugin');
const clearPlugin = pluginMethod('clearPlugin');

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklYMlZhbmlsbGFQbHVnaW5zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SVNfQlJPV1NFUl9FTlZ9IGZyb20gJy4vSVgyQnJvd3NlclN1cHBvcnQnO1xuaW1wb3J0IHtwbHVnaW5NZXRob2RNYXB9IGZyb20gJ0BwYWNrYWdlcy9zeXN0ZW1zL2l4Mi9wbHVnaW5zJztcblxuaW1wb3J0IHR5cGUge0FjdGlvblR5cGVJZFR5cGV9IGZyb20gJ0BwYWNrYWdlcy9zeXN0ZW1zL2l4Mi90eXBlcy1jb3JlJztcbmltcG9ydCB0eXBlIHtQbHVnaW5UeXBlfSBmcm9tICdAcGFja2FnZXMvc3lzdGVtcy9peDIvcGx1Z2lucyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1BsdWdpblR5cGUoYWN0aW9uVHlwZUlkOiBBY3Rpb25UeXBlSWRUeXBlKTogYm9vbGVhbiB7XG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgLSBUUzIzNDUgLSBBcmd1bWVudCBvZiB0eXBlICdcIlRSQU5TRk9STV9NT1ZFXCIgfCBcIlRSQU5TRk9STV9TQ0FMRVwiIHwgXCJUUkFOU0ZPUk1fUk9UQVRFXCIgfCBcIlRSQU5TRk9STV9TS0VXXCIgfCBcIlNUWUxFX09QQUNJVFlcIiB8IFwiU1RZTEVfU0laRVwiIHwgXCJTVFlMRV9GSUxURVJcIiB8IFwiU1RZTEVfRk9OVF9WQVJJQVRJT05cIiB8IFwiU1RZTEVfQkFDS0dST1VORF9DT0xPUlwiIHwgLi4uIDEyIG1vcmUgLi4uIHwgXCJTVFlMRV9CT1hfU0hBRE9XXCInIGlzIG5vdCBhc3NpZ25hYmxlIHRvIHBhcmFtZXRlciBvZiB0eXBlICdcIlBMVUdJTl9MT1RUSUVcIiB8IFwiUExVR0lOX1NQTElORVwiIHwgXCJQTFVHSU5fVkFSSUFCTEVcIicuXG4gIHJldHVybiBwbHVnaW5NZXRob2RNYXAuaGFzKGFjdGlvblR5cGVJZCk7XG59XG5cbnR5cGUgUGx1Z2luTWV0aG9kTmFtZSA9XG4gIHwgJ2dldFBsdWdpbkNvbmZpZydcbiAgfCAnZ2V0UGx1Z2luT3JpZ2luJ1xuICB8ICdnZXRQbHVnaW5EdXJhdGlvbidcbiAgfCAnZ2V0UGx1Z2luRGVzdGluYXRpb24nXG4gIHwgJ2NyZWF0ZVBsdWdpbkluc3RhbmNlJ1xuICB8ICdyZW5kZXJQbHVnaW4nXG4gIHwgJ2NsZWFyUGx1Z2luJztcblxuY29uc3QgcGx1Z2luTWV0aG9kID1cbiAgKG1ldGhvZE5hbWU6IFBsdWdpbk1ldGhvZE5hbWUpID0+IChhY3Rpb25UeXBlSWQ6IFBsdWdpblR5cGUpID0+IHtcbiAgICBpZiAoIUlTX0JST1dTRVJfRU5WKSB7XG4gICAgICAvLyBJWDIgcGx1Z2lucyByZXF1aXJlIGJyb3dzZXIgbGlicyBmb3Igbm93XG4gICAgICByZXR1cm4gKCkgPT4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgcGx1Z2luID0gcGx1Z2luTWV0aG9kTWFwLmdldChhY3Rpb25UeXBlSWQpO1xuICAgIGlmICghcGx1Z2luKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYElYMiBubyBwbHVnaW4gY29uZmlndXJlZCBmb3I6ICR7YWN0aW9uVHlwZUlkfWApO1xuICAgIH1cbiAgICBjb25zdCBtZXRob2QgPSBwbHVnaW5bbWV0aG9kTmFtZV07XG4gICAgaWYgKCFtZXRob2QpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSVgyIGludmFsaWQgcGx1Z2luIG1ldGhvZDogJHttZXRob2ROYW1lfWApO1xuICAgIH1cbiAgICByZXR1cm4gbWV0aG9kO1xuICB9O1xuXG5leHBvcnQgY29uc3QgZ2V0UGx1Z2luQ29uZmlnID0gcGx1Z2luTWV0aG9kKCdnZXRQbHVnaW5Db25maWcnKTtcbmV4cG9ydCBjb25zdCBnZXRQbHVnaW5PcmlnaW4gPSBwbHVnaW5NZXRob2QoJ2dldFBsdWdpbk9yaWdpbicpO1xuZXhwb3J0IGNvbnN0IGdldFBsdWdpbkR1cmF0aW9uID0gcGx1Z2luTWV0aG9kKCdnZXRQbHVnaW5EdXJhdGlvbicpO1xuZXhwb3J0IGNvbnN0IGdldFBsdWdpbkRlc3RpbmF0aW9uID0gcGx1Z2luTWV0aG9kKCdnZXRQbHVnaW5EZXN0aW5hdGlvbicpO1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVBsdWdpbkluc3RhbmNlID0gcGx1Z2luTWV0aG9kKCdjcmVhdGVQbHVnaW5JbnN0YW5jZScpO1xuZXhwb3J0IGNvbnN0IHJlbmRlclBsdWdpbiA9IHBsdWdpbk1ldGhvZCgncmVuZGVyUGx1Z2luJyk7XG5leHBvcnQgY29uc3QgY2xlYXJQbHVnaW4gPSBwbHVnaW5NZXRob2QoJ2NsZWFyUGx1Z2luJyk7XG4iXSwibmFtZXMiOlsiY2xlYXJQbHVnaW4iLCJjcmVhdGVQbHVnaW5JbnN0YW5jZSIsImdldFBsdWdpbkNvbmZpZyIsImdldFBsdWdpbkRlc3RpbmF0aW9uIiwiZ2V0UGx1Z2luRHVyYXRpb24iLCJnZXRQbHVnaW5PcmlnaW4iLCJpc1BsdWdpblR5cGUiLCJyZW5kZXJQbHVnaW4iLCJhY3Rpb25UeXBlSWQiLCJwbHVnaW5NZXRob2RNYXAiLCJoYXMiLCJwbHVnaW5NZXRob2QiLCJtZXRob2ROYW1lIiwiSVNfQlJPV1NFUl9FTlYiLCJwbHVnaW4iLCJnZXQiLCJFcnJvciIsIm1ldGhvZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUEyQ2FBLFdBQVc7ZUFBWEE7O0lBRkFDLG9CQUFvQjtlQUFwQkE7O0lBSkFDLGVBQWU7ZUFBZkE7O0lBR0FDLG9CQUFvQjtlQUFwQkE7O0lBREFDLGlCQUFpQjtlQUFqQkE7O0lBREFDLGVBQWU7ZUFBZkE7O0lBaENHQyxZQUFZO2VBQVpBOztJQW9DSEMsWUFBWTtlQUFaQTs7O21DQTFDZ0I7eUJBQ0M7QUFLdkIsU0FBU0QsYUFBYUUsWUFBOEI7SUFDekQsMldBQTJXO0lBQzNXLE9BQU9DLHdCQUFlLENBQUNDLEdBQUcsQ0FBQ0Y7QUFDN0I7QUFXQSxNQUFNRyxlQUNKLENBQUNDLGFBQWlDLENBQUNKO1FBQ2pDLElBQUksQ0FBQ0ssaUNBQWMsRUFBRTtZQUNuQiwyQ0FBMkM7WUFDM0MsT0FBTyxJQUFNO1FBQ2Y7UUFDQSxNQUFNQyxTQUFTTCx3QkFBZSxDQUFDTSxHQUFHLENBQUNQO1FBQ25DLElBQUksQ0FBQ00sUUFBUTtZQUNYLE1BQU0sSUFBSUUsTUFBTSxDQUFDLDhCQUE4QixFQUFFUixhQUFhLENBQUM7UUFDakU7UUFDQSxNQUFNUyxTQUFTSCxNQUFNLENBQUNGLFdBQVc7UUFDakMsSUFBSSxDQUFDSyxRQUFRO1lBQ1gsTUFBTSxJQUFJRCxNQUFNLENBQUMsMkJBQTJCLEVBQUVKLFdBQVcsQ0FBQztRQUM1RDtRQUNBLE9BQU9LO0lBQ1Q7QUFFSyxNQUFNZixrQkFBa0JTLGFBQWE7QUFDckMsTUFBTU4sa0JBQWtCTSxhQUFhO0FBQ3JDLE1BQU1QLG9CQUFvQk8sYUFBYTtBQUN2QyxNQUFNUix1QkFBdUJRLGFBQWE7QUFDMUMsTUFBTVYsdUJBQXVCVSxhQUFhO0FBQzFDLE1BQU1KLGVBQWVJLGFBQWE7QUFDbEMsTUFBTVgsY0FBY1csYUFBYSJ9

}),
4124: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/* eslint-env browser */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    cleanupHTMLElement: function() {
        return cleanupHTMLElement;
    },
    clearAllStyles: function() {
        return clearAllStyles;
    },
    clearObjectCache: function() {
        return clearObjectCache;
    },
    getActionListProgress: function() {
        return getActionListProgress;
    },
    getAffectedElements: function() {
        return getAffectedElements;
    },
    getComputedStyle: function() {
        return getComputedStyle;
    },
    getDestinationValues: function() {
        return getDestinationValues;
    },
    getElementId: function() {
        return getElementId;
    },
    getInstanceId: function() {
        return getInstanceId;
    },
    getInstanceOrigin: function() {
        return getInstanceOrigin;
    },
    getItemConfigByKey: function() {
        return getItemConfigByKey;
    },
    getMaxDurationItemIndex: function() {
        return getMaxDurationItemIndex;
    },
    getNamespacedParameterId: function() {
        return getNamespacedParameterId;
    },
    getRenderType: function() {
        return getRenderType;
    },
    getStyleProp: function() {
        return getStyleProp;
    },
    mediaQueriesEqual: function() {
        return mediaQueriesEqual;
    },
    observeStore: function() {
        return observeStore;
    },
    reduceListToGroup: function() {
        return reduceListToGroup;
    },
    reifyState: function() {
        return reifyState;
    },
    renderHTMLElement: function() {
        return renderHTMLElement;
    },
    shallowEqual: function() {
        return _shallowEqual.default;
    },
    shouldAllowMediaQuery: function() {
        return shouldAllowMediaQuery;
    },
    shouldNamespaceEventParameter: function() {
        return shouldNamespaceEventParameter;
    },
    stringifyTarget: function() {
        return stringifyTarget;
    }
});
const _defaultTo = /*#__PURE__*/ _interop_require_default(__webpack_require__(4075));
const _reduce = /*#__PURE__*/ _interop_require_default(__webpack_require__(1455));
const _findLast = /*#__PURE__*/ _interop_require_default(__webpack_require__(5720));
const _timm = __webpack_require__(1185);
const _sharedconstants = __webpack_require__(7087);
const _shallowEqual = /*#__PURE__*/ _interop_require_default(__webpack_require__(7164));
const _IX2EasingUtils = __webpack_require__(3767);
const _normalizeColor = __webpack_require__(380);
const _IX2VanillaPlugins = __webpack_require__(1799);
const _IX2BrowserSupport = __webpack_require__(2662);
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const { BACKGROUND, TRANSFORM, TRANSLATE_3D, SCALE_3D, ROTATE_X, ROTATE_Y, ROTATE_Z, SKEW, PRESERVE_3D, FLEX, OPACITY, FILTER, FONT_VARIATION_SETTINGS, WIDTH, HEIGHT, BACKGROUND_COLOR, BORDER_COLOR, COLOR, CHILDREN, IMMEDIATE_CHILDREN, SIBLINGS, PARENT, DISPLAY, WILL_CHANGE, AUTO, COMMA_DELIMITER, COLON_DELIMITER, BAR_DELIMITER, RENDER_TRANSFORM, RENDER_GENERAL, RENDER_STYLE, RENDER_PLUGIN } = _sharedconstants.IX2EngineConstants;
const { TRANSFORM_MOVE, TRANSFORM_SCALE, TRANSFORM_ROTATE, TRANSFORM_SKEW, STYLE_OPACITY, STYLE_FILTER, STYLE_FONT_VARIATION, STYLE_SIZE, STYLE_BACKGROUND_COLOR, STYLE_BORDER, STYLE_TEXT_COLOR, GENERAL_DISPLAY, OBJECT_VALUE } = _sharedconstants.ActionTypeConsts;
// @ts-expect-error - TS7006 - Parameter 'v' implicitly has an 'any' type.
const trim = (v)=>v.trim();
const colorStyleProps = Object.freeze({
    [STYLE_BACKGROUND_COLOR]: BACKGROUND_COLOR,
    [STYLE_BORDER]: BORDER_COLOR,
    [STYLE_TEXT_COLOR]: COLOR
});
const willChangeProps = Object.freeze({
    [_IX2BrowserSupport.TRANSFORM_PREFIXED]: TRANSFORM,
    [BACKGROUND_COLOR]: BACKGROUND,
    [OPACITY]: OPACITY,
    [FILTER]: FILTER,
    [WIDTH]: WIDTH,
    [HEIGHT]: HEIGHT,
    [FONT_VARIATION_SETTINGS]: FONT_VARIATION_SETTINGS
});
const objectCache = new Map();
function clearObjectCache() {
    objectCache.clear();
}
let instanceCount = 1;
function getInstanceId() {
    return 'i' + instanceCount++;
}
let elementCount = 1;
function getElementId(ixElements, ref) {
    // TODO: optimize element lookup
    for(const key in ixElements){
        const ixEl = ixElements[key];
        if (ixEl && ixEl.ref === ref) {
            return ixEl.id;
        }
    }
    return 'e' + elementCount++;
}
function reifyState({ events, actionLists, site } = {}) {
    const eventTypeMap = (0, _reduce.default)(events, (result, event)=>{
        const { eventTypeId } = event;
        if (!result[eventTypeId]) {
            result[eventTypeId] = {};
        }
        result[eventTypeId][event.id] = event;
        return result;
    }, {});
    let mediaQueries = site && site.mediaQueries;
    let mediaQueryKeys = [];
    if (mediaQueries) {
        mediaQueryKeys = mediaQueries.map((mq)=>mq.key);
    } else {
        mediaQueries = [];
        console.warn(`IX2 missing mediaQueries in site data`);
    }
    return {
        ixData: {
            events,
            actionLists,
            eventTypeMap,
            mediaQueries,
            mediaQueryKeys
        }
    };
}
const strictEqual = (a, b)=>a === b;
function observeStore({ // @ts-expect-error - TS7031 - Binding element 'store' implicitly has an 'any' type.
store, // @ts-expect-error - TS7031 - Binding element 'select' implicitly has an 'any' type.
select, // @ts-expect-error - TS7031 - Binding element 'onChange' implicitly has an 'any' type.
onChange, comparator = strictEqual }) {
    const { getState, subscribe } = store;
    const unsubscribe = subscribe(handleChange);
    let currentState = select(getState());
    function handleChange() {
        const nextState = select(getState());
        if (nextState == null) {
            unsubscribe();
            return;
        }
        if (!comparator(nextState, currentState)) {
            currentState = nextState;
            onChange(currentState, store);
        }
    }
    return unsubscribe;
}
// @ts-expect-error - TS7006 - Parameter 'target' implicitly has an 'any' type.
function normalizeTarget(target) {
    const type = typeof target;
    if (type === 'string') {
        return {
            id: target
        };
    } else if (target != null && type === 'object') {
        const { id, objectId, selector, selectorGuids, appliesTo, useEventTarget } = target;
        return {
            id,
            objectId,
            selector,
            selectorGuids,
            appliesTo,
            useEventTarget
        };
    }
    return {};
}
function getAffectedElements({ config, event, eventTarget, elementRoot, elementApi }) {
    if (!elementApi) {
        throw new Error('IX2 missing elementApi');
    }
    const { targets } = config;
    if (Array.isArray(targets) && targets.length > 0) {
        return targets.reduce((accumulator, target)=>accumulator.concat(getAffectedElements({
                config: {
                    target
                },
                event,
                eventTarget,
                elementRoot,
                elementApi
            })), []);
    }
    const { getValidDocument, getQuerySelector, queryDocument, getChildElements, getSiblingElements, matchSelector, elementContains, isSiblingNode } = elementApi;
    const { target } = config;
    if (!target) {
        return [];
    }
    const { id, objectId, selector, selectorGuids, appliesTo, useEventTarget } = normalizeTarget(target);
    if (objectId) {
        const ref = objectCache.has(objectId) ? objectCache.get(objectId) : objectCache.set(objectId, {}).get(objectId);
        return [
            ref
        ];
    }
    if (appliesTo === _sharedconstants.EventAppliesTo.PAGE) {
        const doc = getValidDocument(id);
        return doc ? [
            doc
        ] : [];
    }
    const overrides = event?.action?.config?.affectedElements ?? {};
    const override = overrides[id || selector] || {};
    const validOverride = Boolean(override.id || override.selector);
    let limitAffectedElements;
    let baseSelector;
    let finalSelector;
    const eventTargetSelector = event && getQuerySelector(normalizeTarget(event.target));
    if (validOverride) {
        limitAffectedElements = override.limitAffectedElements;
        baseSelector = eventTargetSelector;
        finalSelector = getQuerySelector(override);
    } else {
        // pass in selectorGuids as well for server-side rendering.
        baseSelector = finalSelector = getQuerySelector({
            id,
            selector,
            selectorGuids
        });
    }
    if (event && useEventTarget) {
        // eventTarget is not defined when this function is called in a clear request, so find
        // all target elements associated with the event data, and return affected elements.
        const eventTargets = eventTarget && (finalSelector || useEventTarget === true) ? [
            eventTarget
        ] : queryDocument(eventTargetSelector);
        if (finalSelector) {
            if (useEventTarget === PARENT) {
                return queryDocument(finalSelector).filter((parentElement)=>eventTargets.some((targetElement)=>elementContains(parentElement, targetElement)));
            }
            if (useEventTarget === CHILDREN) {
                return queryDocument(finalSelector).filter((childElement)=>eventTargets.some((targetElement)=>elementContains(targetElement, childElement)));
            }
            if (useEventTarget === SIBLINGS) {
                return queryDocument(finalSelector).filter((siblingElement)=>eventTargets.some((targetElement)=>isSiblingNode(targetElement, siblingElement)));
            }
        }
        return eventTargets;
    }
    if (baseSelector == null || finalSelector == null) {
        return [];
    }
    if (_IX2BrowserSupport.IS_BROWSER_ENV && elementRoot) {
        return queryDocument(finalSelector).filter((element)=>elementRoot.contains(element));
    }
    if (limitAffectedElements === CHILDREN) {
        return queryDocument(baseSelector, finalSelector);
    } else if (limitAffectedElements === IMMEDIATE_CHILDREN) {
        return getChildElements(queryDocument(baseSelector)).filter(matchSelector(finalSelector));
    } else if (limitAffectedElements === SIBLINGS) {
        return getSiblingElements(queryDocument(baseSelector)).filter(matchSelector(finalSelector));
    } else {
        return queryDocument(finalSelector);
    }
}
function getComputedStyle({ element, actionItem }) {
    if (!_IX2BrowserSupport.IS_BROWSER_ENV) {
        return {};
    }
    const { actionTypeId } = actionItem;
    switch(actionTypeId){
        case STYLE_SIZE:
        case STYLE_BACKGROUND_COLOR:
        case STYLE_BORDER:
        case STYLE_TEXT_COLOR:
        case GENERAL_DISPLAY:
            return window.getComputedStyle(element);
        default:
            return {};
    }
}
const pxValueRegex = /px/;
// @ts-expect-error - TS7006 - Parameter 'filters' implicitly has an 'any' type.
const getFilterDefaults = (actionState, filters)=>// @ts-expect-error - TS7006 - Parameter 'result' implicitly has an 'any' type. | TS7006 - Parameter 'filter' implicitly has an 'any' type.
    filters.reduce((result, filter)=>{
        if (result[filter.type] == null) {
            result[filter.type] = // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'Readonly<{ blur: 0; 'hue-rotate': 0; invert: 0; grayscale: 0; saturate: 100; sepia: 0; contrast: 100; brightness: 100; }>'.
            filterDefaults[filter.type];
        }
        return result;
    }, actionState || {});
const getFontVariationDefaults = (actionState, fontVariations)=>fontVariations.reduce((result, fontVariation)=>{
        if (result[fontVariation.type] == null) {
            result[fontVariation.type] = // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'string' can't be used to index type 'Readonly<{ wght: 0; opsz: 0; wdth: 0; slnt: 0; }>'.
            fontVariationDefaults[fontVariation.type] || // @ts-expect-error - TS2339 - Property 'defaultValue' does not exist on type 'FontVariationItemConfigType'.
            fontVariation.defaultValue || 0;
        }
        return result;
    }, actionState || {});
function getInstanceOrigin(element, refState = {}, computedStyle = {}, actionItem, elementApi) {
    const { getStyle } = elementApi;
    // Flow Hack: Passing actionTypeId to isPluginType and then trying
    // to do type refinement using the same variable via a switch statement
    // breaks down. This is is a workaround to ensure we can use type refinement.
    const { actionTypeId } = actionItem;
    if ((0, _IX2VanillaPlugins.isPluginType)(actionTypeId)) {
        // @ts-expect-error - TS2345 - Argument of type '"TRANSFORM_MOVE" | "TRANSFORM_SCALE" | "TRANSFORM_ROTATE" | "TRANSFORM_SKEW" | "STYLE_OPACITY" | "STYLE_SIZE" | "STYLE_FILTER" | "STYLE_FONT_VARIATION" | "STYLE_BACKGROUND_COLOR" | "STYLE_BORDER" | "STYLE_TEXT_COLOR" | "PLUGIN_LOTTIE" | "GENERAL_DISPLAY"' is not assignable to parameter of type 'PluginType'. | TS7053 - Element implicitly has an 'any' type because expression of type '"TRANSFORM_MOVE" | "TRANSFORM_SCALE" | "TRANSFORM_ROTATE" | "TRANSFORM_SKEW" | "STYLE_OPACITY" | "STYLE_SIZE" | "STYLE_FILTER" | "STYLE_FONT_VARIATION" | "STYLE_BACKGROUND_COLOR" | "STYLE_BORDER" | "STYLE_TEXT_COLOR" | "PLUGIN_LOTTIE" | "GENERAL_DISPLAY"' can't be used to index type '{}'.
        return (0, _IX2VanillaPlugins.getPluginOrigin)(actionTypeId)(refState[actionTypeId], actionItem);
    }
    switch(actionItem.actionTypeId){
        case TRANSFORM_MOVE:
        case TRANSFORM_SCALE:
        case TRANSFORM_ROTATE:
        case TRANSFORM_SKEW:
            {
                return(// @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type '"TRANSFORM_MOVE" | "TRANSFORM_SCALE" | "TRANSFORM_ROTATE" | "TRANSFORM_SKEW"' can't be used to index type '{}'.
                refState[actionItem.actionTypeId] || transformDefaults[actionItem.actionTypeId]);
            }
        case STYLE_FILTER:
            return getFilterDefaults(// @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type '"STYLE_FILTER"' can't be used to index type '{}'.
            refState[actionItem.actionTypeId], actionItem.config.filters);
        case STYLE_FONT_VARIATION:
            return getFontVariationDefaults(// @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type '"STYLE_FONT_VARIATION"' can't be used to index type '{}'.
            refState[actionItem.actionTypeId], actionItem.config.fontVariations);
        case STYLE_OPACITY:
            return {
                value: (0, _defaultTo.default)(parseFloat(getStyle(element, OPACITY)), 1.0)
            };
        case STYLE_SIZE:
            {
                const inlineWidth = getStyle(element, WIDTH);
                const inlineHeight = getStyle(element, HEIGHT);
                let widthValue;
                let heightValue;
                // When destination unit is 'AUTO', ensure origin values are in px
                if (actionItem.config.widthUnit === AUTO) {
                    widthValue = pxValueRegex.test(inlineWidth) ? parseFloat(inlineWidth) : parseFloat(computedStyle.width);
                } else {
                    widthValue = (0, _defaultTo.default)(parseFloat(inlineWidth), // @ts-expect-error - TS18047 - 'computedStyle' is possibly 'null'.
                    parseFloat(computedStyle.width));
                }
                if (actionItem.config.heightUnit === AUTO) {
                    heightValue = pxValueRegex.test(inlineHeight) ? parseFloat(inlineHeight) : parseFloat(computedStyle.height);
                } else {
                    heightValue = (0, _defaultTo.default)(parseFloat(inlineHeight), // @ts-expect-error - TS18047 - 'computedStyle' is possibly 'null'.
                    parseFloat(computedStyle.height));
                }
                return {
                    widthValue,
                    heightValue
                };
            }
        case STYLE_BACKGROUND_COLOR:
        case STYLE_BORDER:
        case STYLE_TEXT_COLOR:
            return parseColor({
                element,
                actionTypeId: actionItem.actionTypeId,
                computedStyle,
                getStyle
            });
        case GENERAL_DISPLAY:
            return {
                // @ts-expect-error - TS18047 - 'computedStyle' is possibly 'null'.
                value: (0, _defaultTo.default)(getStyle(element, DISPLAY), computedStyle.display)
            };
        // @ts-expect-error - `OBJECT_VALUE` is not an expected `actionTypeId`
        case OBJECT_VALUE:
            // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'. | TS2339 - Property 'actionTypeId' does not exist on type 'never'.
            return refState[actionItem.actionTypeId] || {
                value: 0
            };
        default:
            {
                // As far as the type system can tell, we're missing a handler for
                // PLUGIN_LOTTIE.
                //
                // This is actually handled by `isPluginType` above.
                //
                /*:: (actionItem: empty); */ return;
            }
    }
}
// @ts-expect-error - TS7006 - Parameter 'result' implicitly has an 'any' type. | TS7006 - Parameter 'filter' implicitly has an 'any' type.
const reduceFilters = (result, filter)=>{
    if (filter) {
        result[filter.type] = filter.value || 0;
    }
    return result;
};
const reduceFontVariations = (result, fontVariation)=>{
    if (fontVariation) {
        result[fontVariation.type] = fontVariation.value || 0;
    }
    return result;
};
const getItemConfigByKey = (actionTypeId, key, config)=>{
    if ((0, _IX2VanillaPlugins.isPluginType)(actionTypeId)) {
        return (0, _IX2VanillaPlugins.getPluginConfig)(actionTypeId)(config, key);
    }
    switch(actionTypeId){
        case STYLE_FILTER:
            {
                const filter = (0, _findLast.default)(config.filters, ({ type })=>type === key);
                return filter ? filter.value : 0;
            }
        case STYLE_FONT_VARIATION:
            {
                const fontVariation = (0, _findLast.default)(config.fontVariations, ({ type })=>type === key);
                return fontVariation ? fontVariation.value : 0;
            }
        default:
            return config[key];
    }
};
function getDestinationValues({ element, actionItem, elementApi }) {
    if ((0, _IX2VanillaPlugins.isPluginType)(actionItem.actionTypeId)) {
        // @ts-expect-error - TS2345 - Argument of type '"TRANSFORM_MOVE" | "TRANSFORM_SCALE" | "TRANSFORM_ROTATE" | "TRANSFORM_SKEW" | "STYLE_OPACITY" | "STYLE_SIZE" | "STYLE_FILTER" | "STYLE_FONT_VARIATION" | "STYLE_BACKGROUND_COLOR" | "STYLE_BORDER" | "STYLE_TEXT_COLOR" | "PLUGIN_LOTTIE" | "GENERAL_DISPLAY"' is not assignable to parameter of type 'PluginType'.
        return (0, _IX2VanillaPlugins.getPluginDestination)(actionItem.actionTypeId)(actionItem.config);
    }
    switch(actionItem.actionTypeId){
        case TRANSFORM_MOVE:
        case TRANSFORM_SCALE:
        case TRANSFORM_ROTATE:
        case TRANSFORM_SKEW:
            {
                const { xValue, yValue, zValue } = actionItem.config;
                return {
                    xValue,
                    yValue,
                    zValue
                };
            }
        case STYLE_SIZE:
            {
                const { getStyle, setStyle, getProperty } = elementApi;
                const { widthUnit, heightUnit } = actionItem.config;
                let { widthValue, heightValue } = actionItem.config;
                if (!_IX2BrowserSupport.IS_BROWSER_ENV) {
                    return {
                        widthValue,
                        heightValue
                    };
                }
                if (widthUnit === AUTO) {
                    const temp = getStyle(element, WIDTH);
                    setStyle(element, WIDTH, '');
                    // @ts-expect-error - TS2322 - Type 'string | null' is not assignable to type 'number | undefined'.
                    widthValue = getProperty(element, 'offsetWidth');
                    setStyle(element, WIDTH, temp);
                }
                if (heightUnit === AUTO) {
                    const temp = getStyle(element, HEIGHT);
                    setStyle(element, HEIGHT, '');
                    // @ts-expect-error - TS2322 - Type 'string | null' is not assignable to type 'number | undefined'.
                    heightValue = getProperty(element, 'offsetHeight');
                    setStyle(element, HEIGHT, temp);
                }
                return {
                    widthValue,
                    heightValue
                };
            }
        case STYLE_BACKGROUND_COLOR:
        case STYLE_BORDER:
        case STYLE_TEXT_COLOR:
            {
                const { rValue, gValue, bValue, aValue, globalSwatchId } = actionItem.config;
                if (globalSwatchId && globalSwatchId.startsWith('--')) {
                    const { getStyle } = elementApi;
                    const value = getStyle(element, globalSwatchId);
                    const normalizedValue = (0, _normalizeColor.normalizeColor)(value);
                    return {
                        rValue: normalizedValue.red,
                        gValue: normalizedValue.green,
                        bValue: normalizedValue.blue,
                        aValue: normalizedValue.alpha
                    };
                }
                return {
                    rValue,
                    gValue,
                    bValue,
                    aValue
                };
            }
        case STYLE_FILTER:
            {
                return actionItem.config.filters.reduce(reduceFilters, {});
            }
        case STYLE_FONT_VARIATION:
            {
                return actionItem.config.fontVariations.reduce(reduceFontVariations, {});
            }
        default:
            {
                const { value } = actionItem.config;
                return {
                    value
                };
            }
    }
}
function getRenderType(actionTypeId) {
    if (/^TRANSFORM_/.test(actionTypeId)) {
        return RENDER_TRANSFORM;
    }
    if (/^STYLE_/.test(actionTypeId)) {
        return RENDER_STYLE;
    }
    if (/^GENERAL_/.test(actionTypeId)) {
        return RENDER_GENERAL;
    }
    if (/^PLUGIN_/.test(actionTypeId)) {
        return RENDER_PLUGIN;
    }
}
function getStyleProp(renderType, actionTypeId) {
    return renderType === RENDER_STYLE ? actionTypeId.replace('STYLE_', '').toLowerCase() : null;
}
function renderHTMLElement(element, refState, actionState, eventId, actionItem, styleProp, elementApi, renderType, pluginInstance) {
    switch(renderType){
        case RENDER_TRANSFORM:
            {
                return renderTransform(element, refState, actionState, actionItem, elementApi);
            }
        case RENDER_STYLE:
            {
                return renderStyle(element, refState, actionState, actionItem, styleProp, elementApi);
            }
        case RENDER_GENERAL:
            {
                return renderGeneral(element, actionItem, elementApi);
            }
        case RENDER_PLUGIN:
            {
                const { actionTypeId } = actionItem;
                if ((0, _IX2VanillaPlugins.isPluginType)(actionTypeId)) {
                    return (0, _IX2VanillaPlugins.renderPlugin)(actionTypeId)(pluginInstance, refState, actionItem);
                }
            }
    }
}
const transformDefaults = {
    [TRANSFORM_MOVE]: Object.freeze({
        xValue: 0,
        yValue: 0,
        zValue: 0
    }),
    [TRANSFORM_SCALE]: Object.freeze({
        xValue: 1,
        yValue: 1,
        zValue: 1
    }),
    [TRANSFORM_ROTATE]: Object.freeze({
        xValue: 0,
        yValue: 0,
        zValue: 0
    }),
    [TRANSFORM_SKEW]: Object.freeze({
        xValue: 0,
        yValue: 0
    })
};
const filterDefaults = Object.freeze({
    blur: 0,
    'hue-rotate': 0,
    invert: 0,
    grayscale: 0,
    saturate: 100,
    sepia: 0,
    contrast: 100,
    brightness: 100
});
const fontVariationDefaults = Object.freeze({
    wght: 0,
    opsz: 0,
    wdth: 0,
    slnt: 0
});
// @ts-expect-error - TS7006 - Parameter 'filterType' implicitly has an 'any' type. | TS7006 - Parameter 'actionItemConfig' implicitly has an 'any' type.
const getFilterUnit = (filterType, actionItemConfig)=>{
    const filter = (0, _findLast.default)(actionItemConfig.filters, ({ type })=>type === filterType);
    if (filter && filter.unit) {
        return filter.unit;
    }
    switch(filterType){
        case 'blur':
            return 'px';
        case 'hue-rotate':
            return 'deg';
        default:
            return '%';
    }
};
const transformKeys = Object.keys(transformDefaults);
function renderTransform(element, refState, actionState, actionItem, elementApi) {
    const newTransform = transformKeys.map((actionTypeId)=>{
        // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ readonly TRANSFORM_MOVE: Readonly<{ xValue: 0; yValue: 0; zValue: 0; }>; readonly TRANSFORM_SCALE: Readonly<{ xValue: 1; yValue: 1; zValue: 1; }>; readonly TRANSFORM_ROTATE: Readonly<{ xValue: 0; yValue: 0; zValue: 0; }>; readonly TRANSFORM_SKEW: Readonly<...>; }'.
        const defaults = transformDefaults[actionTypeId];
        const { xValue = defaults.xValue, yValue = defaults.yValue, zValue = defaults.zValue, xUnit = '', yUnit = '', zUnit = '' } = refState[actionTypeId] || {};
        switch(actionTypeId){
            case TRANSFORM_MOVE:
                return `${TRANSLATE_3D}(${xValue}${xUnit}, ${yValue}${yUnit}, ${zValue}${zUnit})`;
            case TRANSFORM_SCALE:
                return `${SCALE_3D}(${xValue}${xUnit}, ${yValue}${yUnit}, ${zValue}${zUnit})`;
            case TRANSFORM_ROTATE:
                return `${ROTATE_X}(${xValue}${xUnit}) ${ROTATE_Y}(${yValue}${yUnit}) ${ROTATE_Z}(${zValue}${zUnit})`;
            case TRANSFORM_SKEW:
                return `${SKEW}(${xValue}${xUnit}, ${yValue}${yUnit})`;
            default:
                return '';
        }
    }).join(' ');
    const { setStyle } = elementApi;
    addWillChange(element, _IX2BrowserSupport.TRANSFORM_PREFIXED, elementApi);
    setStyle(element, _IX2BrowserSupport.TRANSFORM_PREFIXED, newTransform);
    // Set transform-style: preserve-3d
    if (hasDefined3dTransform(actionItem, actionState)) {
        setStyle(element, _IX2BrowserSupport.TRANSFORM_STYLE_PREFIXED, PRESERVE_3D);
    }
}
function renderFilter(element, actionState, // @ts-expect-error - TS7006 - Parameter 'actionItemConfig' implicitly has an 'any' type.
actionItemConfig, elementApi) {
    const filterValue = (0, _reduce.default)(actionState, (result, value, type)=>`${result} ${type}(${value}${getFilterUnit(type, actionItemConfig)})`, '');
    const { setStyle } = elementApi;
    addWillChange(element, FILTER, elementApi);
    setStyle(element, FILTER, filterValue);
}
function renderFontVariation(element, actionState, actionItemConfig, elementApi) {
    const fontVariationValue = (0, _reduce.default)(actionState, (result, value, type)=>{
        // @ts-expect-error - TS2345 - Argument of type 'string' is not assignable to parameter of type 'never'.
        result.push(`"${type}" ${value}`);
        return result;
    }, []).join(', ');
    const { setStyle } = elementApi;
    addWillChange(element, FONT_VARIATION_SETTINGS, elementApi);
    setStyle(element, FONT_VARIATION_SETTINGS, fontVariationValue);
}
// @ts-expect-error - TS7031 - Binding element 'actionTypeId' implicitly has an 'any' type. | TS7031 - Binding element 'xValue' implicitly has an 'any' type. | TS7031 - Binding element 'yValue' implicitly has an 'any' type. | TS7031 - Binding element 'zValue' implicitly has an 'any' type.
function hasDefined3dTransform({ actionTypeId }, { xValue, yValue, zValue }) {
    // TRANSLATE_Z
    return actionTypeId === TRANSFORM_MOVE && zValue !== undefined || // SCALE_Z
    actionTypeId === TRANSFORM_SCALE && zValue !== undefined || // ROTATE_X or ROTATE_Y
    actionTypeId === TRANSFORM_ROTATE && (xValue !== undefined || yValue !== undefined);
}
const paramCapture = '\\(([^)]+)\\)';
const rgbValidRegex = /^rgb/;
const rgbMatchRegex = RegExp(`rgba?${paramCapture}`);
function getFirstMatch(regex, value) {
    const match = regex.exec(value);
    return match ? match[1] : '';
}
// @ts-expect-error - TS7031 - Binding element 'element' implicitly has an 'any' type. | TS7031 - Binding element 'actionTypeId' implicitly has an 'any' type. | TS7031 - Binding element 'computedStyle' implicitly has an 'any' type. | TS7031 - Binding element 'getStyle' implicitly has an 'any' type.
function parseColor({ element, actionTypeId, computedStyle, getStyle }) {
    // @ts-expect-error - TS7053 - Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'Readonly<{ STYLE_BACKGROUND_COLOR: "backgroundColor"; STYLE_BORDER: "borderColor"; STYLE_TEXT_COLOR: "color"; }>'.
    const prop = colorStyleProps[actionTypeId];
    const inlineValue = getStyle(element, prop);
    const value = rgbValidRegex.test(inlineValue) ? inlineValue : computedStyle[prop];
    // @ts-expect-error - TS2532 - Object is possibly 'undefined'.
    const matches = getFirstMatch(rgbMatchRegex, value).split(COMMA_DELIMITER);
    return {
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
        rValue: (0, _defaultTo.default)(parseInt(matches[0], 10), 255),
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
        gValue: (0, _defaultTo.default)(parseInt(matches[1], 10), 255),
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
        bValue: (0, _defaultTo.default)(parseInt(matches[2], 10), 255),
        // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
        aValue: (0, _defaultTo.default)(parseFloat(matches[3]), 1)
    };
}
function renderStyle(element, refState, actionState, actionItem, styleProp, elementApi) {
    const { setStyle } = elementApi;
    switch(actionItem.actionTypeId){
        case STYLE_SIZE:
            {
                let { widthUnit = '', heightUnit = '' } = actionItem.config;
                const { widthValue, heightValue } = actionState;
                if (widthValue !== undefined) {
                    if (widthUnit === AUTO) {
                        widthUnit = 'px';
                    }
                    addWillChange(element, WIDTH, elementApi);
                    setStyle(element, WIDTH, widthValue + widthUnit);
                }
                if (heightValue !== undefined) {
                    if (heightUnit === AUTO) {
                        heightUnit = 'px';
                    }
                    addWillChange(element, HEIGHT, elementApi);
                    setStyle(element, HEIGHT, heightValue + heightUnit);
                }
                break;
            }
        case STYLE_FILTER:
            {
                renderFilter(element, actionState, actionItem.config, elementApi);
                break;
            }
        case STYLE_FONT_VARIATION:
            {
                renderFontVariation(element, actionState, actionItem.config, elementApi);
                break;
            }
        case STYLE_BACKGROUND_COLOR:
        case STYLE_BORDER:
        case STYLE_TEXT_COLOR:
            {
                const prop = colorStyleProps[actionItem.actionTypeId];
                const rValue = Math.round(actionState.rValue);
                const gValue = Math.round(actionState.gValue);
                const bValue = Math.round(actionState.bValue);
                const aValue = actionState.aValue;
                addWillChange(element, prop, elementApi);
                setStyle(element, prop, aValue >= 1 ? `rgb(${rValue},${gValue},${bValue})` : `rgba(${rValue},${gValue},${bValue},${aValue})`);
                break;
            }
        default:
            {
                // @ts-expect-error - TS2339 - Property 'unit' does not exist on type '{ delay: number; easing: IX2EasingType; duration: number; target: ActionItemTargetType; xValue: number | undefined; yValue: number | undefined; zValue: number | undefined; xUnit: "%" | ... 4 more ... | "VW"; yUnit: "%" | ... 4 more ... | "VW"; zUnit: "%" | ... 4 more ... | "VW"; } | ... 5 more ... | { ...; }'.
                const { unit = '' } = actionItem.config;
                addWillChange(element, styleProp, elementApi);
                setStyle(element, styleProp, actionState.value + unit);
                break;
            }
    }
}
function renderGeneral(element, actionItem, elementApi) {
    const { setStyle } = elementApi;
    switch(actionItem.actionTypeId){
        case GENERAL_DISPLAY:
            {
                const { value } = actionItem.config;
                if (value === FLEX && _IX2BrowserSupport.IS_BROWSER_ENV) {
                    setStyle(element, DISPLAY, _IX2BrowserSupport.FLEX_PREFIXED);
                } else {
                    setStyle(element, DISPLAY, value);
                }
                return;
            }
    }
}
// @ts-expect-error - TS7006 - Parameter 'element' implicitly has an 'any' type. | TS7006 - Parameter 'prop' implicitly has an 'any' type.
function addWillChange(element, prop, elementApi) {
    if (!_IX2BrowserSupport.IS_BROWSER_ENV) {
        return;
    }
    const validProp = willChangeProps[prop];
    if (!validProp) {
        return;
    }
    const { getStyle, setStyle } = elementApi;
    const value = getStyle(element, WILL_CHANGE);
    if (!value) {
        setStyle(element, WILL_CHANGE, validProp);
        return;
    }
    const values = value.split(COMMA_DELIMITER).map(trim);
    if (values.indexOf(validProp) === -1) {
        setStyle(element, WILL_CHANGE, values.concat(validProp).join(COMMA_DELIMITER));
    }
}
// @ts-expect-error - TS7006 - Parameter 'prop' implicitly has an 'any' type.
function removeWillChange(element, prop, elementApi) {
    if (!_IX2BrowserSupport.IS_BROWSER_ENV) {
        return;
    }
    const validProp = willChangeProps[prop];
    if (!validProp) {
        return;
    }
    const { getStyle, setStyle } = elementApi;
    const value = getStyle(element, WILL_CHANGE);
    if (!value || value.indexOf(validProp) === -1) {
        return;
    }
    setStyle(element, WILL_CHANGE, value.split(COMMA_DELIMITER).map(trim)// @ts-expect-error - TS7006 - Parameter 'v' implicitly has an 'any' type.
    .filter((v)=>v !== validProp).join(COMMA_DELIMITER));
}
function clearAllStyles({ store, elementApi }) {
    const { ixData } = store.getState();
    const { events = {}, actionLists = {} } = ixData;
    Object.keys(events).forEach((eventId)=>{
        const event = events[eventId];
        const { config } = event.action;
        const { actionListId } = config;
        const actionList = actionLists[actionListId];
        if (actionList) {
            clearActionListStyles({
                actionList,
                event,
                elementApi
            });
        }
    });
    Object.keys(actionLists).forEach((actionListId)=>{
        // @ts-expect-error - TS2345 - Argument of type '{ actionList: any; elementApi: any; }' is not assignable to parameter of type '{ actionList?: {} | undefined; event: any; elementApi: any; }'.
        clearActionListStyles({
            actionList: actionLists[actionListId],
            elementApi
        });
    });
}
// @ts-expect-error - TS7031 - Binding element 'event' implicitly has an 'any' type. | TS7031 - Binding element 'elementApi' implicitly has an 'any' type.
function clearActionListStyles({ actionList = {}, event, elementApi }) {
    // @ts-expect-error - TS2339 - Property 'actionItemGroups' does not exist on type '{}'. | TS2339 - Property 'continuousParameterGroups' does not exist on type '{}'.
    const { actionItemGroups, continuousParameterGroups } = actionList;
    actionItemGroups && // @ts-expect-error - TS7006 - Parameter 'actionGroup' implicitly has an 'any' type.
    actionItemGroups.forEach((actionGroup)=>{
        clearActionGroupStyles({
            actionGroup,
            event,
            elementApi
        });
    });
    continuousParameterGroups && // @ts-expect-error - TS7006 - Parameter 'paramGroup' implicitly has an 'any' type.
    continuousParameterGroups.forEach((paramGroup)=>{
        const { continuousActionGroups } = paramGroup;
        // @ts-expect-error - TS7006 - Parameter 'actionGroup' implicitly has an 'any' type.
        continuousActionGroups.forEach((actionGroup)=>{
            clearActionGroupStyles({
                actionGroup,
                event,
                elementApi
            });
        });
    });
}
// @ts-expect-error - TS7031 - Binding element 'actionGroup' implicitly has an 'any' type. | TS7031 - Binding element 'event' implicitly has an 'any' type. | TS7031 - Binding element 'elementApi' implicitly has an 'any' type.
function clearActionGroupStyles({ actionGroup, event, elementApi }) {
    const { actionItems } = actionGroup;
    // @ts-expect-error - TS7006 - Parameter 'actionItem' implicitly has an 'any' type.
    actionItems.forEach((actionItem)=>{
        const { actionTypeId, config } = actionItem;
        let clearElement;
        if ((0, _IX2VanillaPlugins.isPluginType)(actionTypeId)) {
            // @ts-expect-error - TS7006 - Parameter 'ref' implicitly has an 'any' type.
            clearElement = (ref)=>(0, _IX2VanillaPlugins.clearPlugin)(actionTypeId)(ref, actionItem);
        } else {
            clearElement = processElementByType({
                effect: clearStyleProp,
                actionTypeId,
                elementApi
            });
        }
        getAffectedElements({
            config,
            event,
            elementApi
        }).forEach(clearElement);
    });
}
function cleanupHTMLElement(element, actionItem, elementApi) {
    const { setStyle, getStyle } = elementApi;
    const { actionTypeId } = actionItem;
    if (actionTypeId === STYLE_SIZE) {
        const { config } = actionItem;
        if (config.widthUnit === AUTO) {
            setStyle(element, WIDTH, '');
        }
        if (config.heightUnit === AUTO) {
            setStyle(element, HEIGHT, '');
        }
    }
    if (getStyle(element, WILL_CHANGE)) {
        processElementByType({
            effect: removeWillChange,
            actionTypeId,
            elementApi
        })(element);
    }
}
const processElementByType = ({ effect, actionTypeId, elementApi })=>// @ts-expect-error - TS7006 - Parameter 'element' implicitly has an 'any' type.
    (element)=>{
        switch(actionTypeId){
            case TRANSFORM_MOVE:
            case TRANSFORM_SCALE:
            case TRANSFORM_ROTATE:
            case TRANSFORM_SKEW:
                effect(element, _IX2BrowserSupport.TRANSFORM_PREFIXED, elementApi);
                break;
            case STYLE_FILTER:
                effect(element, FILTER, elementApi);
                break;
            case STYLE_FONT_VARIATION:
                effect(element, FONT_VARIATION_SETTINGS, elementApi);
                break;
            case STYLE_OPACITY:
                effect(element, OPACITY, elementApi);
                break;
            case STYLE_SIZE:
                effect(element, WIDTH, elementApi);
                effect(element, HEIGHT, elementApi);
                break;
            case STYLE_BACKGROUND_COLOR:
            case STYLE_BORDER:
            case STYLE_TEXT_COLOR:
                effect(element, colorStyleProps[actionTypeId], elementApi);
                break;
            case GENERAL_DISPLAY:
                effect(element, DISPLAY, elementApi);
                break;
        }
    };
// @ts-expect-error - TS7006 - Parameter 'prop' implicitly has an 'any' type.
function clearStyleProp(element, prop, elementApi) {
    const { setStyle } = elementApi;
    removeWillChange(element, prop, elementApi);
    setStyle(element, prop, '');
    // Clear transform-style: preserve-3d
    if (prop === _IX2BrowserSupport.TRANSFORM_PREFIXED) {
        setStyle(element, _IX2BrowserSupport.TRANSFORM_STYLE_PREFIXED, '');
    }
}
function getMaxDurationItemIndex(actionItems) {
    let maxDuration = 0;
    let resultIndex = 0;
    // @ts-expect-error - TS7006 - Parameter 'actionItem' implicitly has an 'any' type. | TS7006 - Parameter 'index' implicitly has an 'any' type.
    actionItems.forEach((actionItem, index)=>{
        const { config } = actionItem;
        const total = config.delay + config.duration;
        if (total >= maxDuration) {
            maxDuration = total;
            resultIndex = index;
        }
    });
    return resultIndex;
}
function getActionListProgress(actionList, instance) {
    const { actionItemGroups, useFirstGroupAsInitialState } = actionList;
    const { actionItem: instanceItem, verboseTimeElapsed = 0 } = instance;
    let totalDuration = 0;
    let elapsedDuration = 0;
    // @ts-expect-error - TS7006 - Parameter 'group' implicitly has an 'any' type. | TS7006 - Parameter 'index' implicitly has an 'any' type.
    actionItemGroups.forEach((group, index)=>{
        if (useFirstGroupAsInitialState && index === 0) {
            return;
        }
        const { actionItems } = group;
        const carrierItem = actionItems[getMaxDurationItemIndex(actionItems)];
        const { config, actionTypeId } = carrierItem;
        if (instanceItem.id === carrierItem.id) {
            elapsedDuration = totalDuration + verboseTimeElapsed;
        }
        const duration = getRenderType(actionTypeId) === RENDER_GENERAL ? 0 : config.duration;
        totalDuration += config.delay + duration;
    });
    return totalDuration > 0 ? (0, _IX2EasingUtils.optimizeFloat)(elapsedDuration / totalDuration) : 0;
}
function reduceListToGroup({ actionList, actionItemId, rawData }) {
    // @ts-expect-error - FIXME - TS2339 - Property 'actionItemGroups' does not exist on type 'ActionListType'.
    const { actionItemGroups, continuousParameterGroups } = actionList;
    const newActionItems = [];
    const takeItemUntilMatch = (actionItem)=>{
        newActionItems.push((0, _timm.mergeIn)(actionItem, [
            'config'
        ], {
            delay: 0,
            duration: 0
        }));
        return actionItem.id === actionItemId;
    };
    actionItemGroups && actionItemGroups.some(({ actionItems })=>{
        return actionItems.some(takeItemUntilMatch);
    });
    continuousParameterGroups && continuousParameterGroups.some((paramGroup)=>{
        const { continuousActionGroups } = paramGroup;
        return continuousActionGroups.some(({ actionItems })=>{
            return actionItems.some(takeItemUntilMatch);
        });
    });
    return (0, _timm.setIn)(rawData, [
        'actionLists'
    ], {
        [actionList.id]: {
            id: actionList.id,
            actionItemGroups: [
                {
                    actionItems: newActionItems
                }
            ]
        }
    });
}
function shouldNamespaceEventParameter(eventTypeId, { basedOn }) {
    return eventTypeId === _sharedconstants.EventTypeConsts.SCROLLING_IN_VIEW && (basedOn === _sharedconstants.EventBasedOn.ELEMENT || basedOn == null) || eventTypeId === _sharedconstants.EventTypeConsts.MOUSE_MOVE && basedOn === _sharedconstants.EventBasedOn.ELEMENT;
}
function getNamespacedParameterId(eventStateKey, continuousParameterGroupId) {
    const namespacedParameterId = eventStateKey + COLON_DELIMITER + continuousParameterGroupId;
    return namespacedParameterId;
}
function shouldAllowMediaQuery(mediaQueries, mediaQueryKey) {
    // During design mode, current media query key does not exist
    if (mediaQueryKey == null) {
        return true;
    }
    return mediaQueries.indexOf(mediaQueryKey) !== -1;
}
function mediaQueriesEqual(listA, listB) {
    return (0, _shallowEqual.default)(listA && listA.sort(), listB && listB.sort());
}
function stringifyTarget(target) {
    if (typeof target === 'string') {
        return target;
    }
    if (target.pluginElement && target.objectId) {
        return target.pluginElement + BAR_DELIMITER + target.objectId;
    }
    if (target.objectId) {
        return target.objectId;
    }
    const { id = '', selector = '', useEventTarget = '' } = target;
    return id + BAR_DELIMITER + selector + BAR_DELIMITER + useEventTarget;
}

//# sourceMappingURL=data:application/json;base64,

}),
7164: (function (__unused_webpack_module, exports) {
"use strict";
// from https://github.com/acdlite/recompose/blob/master/src/packages/recompose/shallowEqual.js
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @providesModule shallowEqual
 * @typechecks
 */ /* eslint-disable no-self-compare */ /**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
function is(x, y) {
    // SameValue algorithm
    if (x === y) {
        // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        // Added the nonzero y check to make Flow happy, but it is redundant
        return x !== 0 || y !== 0 || 1 / x === 1 / y;
    }
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
}
/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */ function shallowEqual(objA, objB) {
    if (is(objA, objB)) {
        return true;
    }
    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
        return false;
    }
    const keysA = Object.keys(objA);
    const keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) {
        return false;
    }
    // Test for A's keys different from B.
    for(let i = 0; i < keysA.length; i++){
        if (!Object.hasOwn(objB, // @ts-expect-error - TS2345 - Argument of type 'string | undefined' is not assignable to parameter of type 'PropertyKey'.
        keysA[i]) || // @ts-expect-error - TS2538 - Type 'undefined' cannot be used as an index type. | TS2538 - Type 'undefined' cannot be used as an index type.
        !is(objA[keysA[i]], objB[keysA[i]])) {
            return false;
        }
    }
    return true;
}
const _default = shallowEqual;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoYWxsb3dFcXVhbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hY2RsaXRlL3JlY29tcG9zZS9ibG9iL21hc3Rlci9zcmMvcGFja2FnZXMvcmVjb21wb3NlL3NoYWxsb3dFcXVhbC5qc1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBwcm92aWRlc01vZHVsZSBzaGFsbG93RXF1YWxcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyogZXNsaW50LWRpc2FibGUgbm8tc2VsZi1jb21wYXJlICovXG5cbi8qKlxuICogaW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwgdG8gYXZvaWQgcmVxdWlyaW5nIGNvbnN1bWVycyBzaGlwIHRoZWlyIG93blxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvT2JqZWN0L2lzXG4gKi9cbmZ1bmN0aW9uIGlzKHg6IG51bWJlciB8IFJlY29yZDxhbnksIGFueT4sIHk6IG51bWJlciB8IFJlY29yZDxhbnksIGFueT4pIHtcbiAgLy8gU2FtZVZhbHVlIGFsZ29yaXRobVxuICBpZiAoeCA9PT0geSkge1xuICAgIC8vIFN0ZXBzIDEtNSwgNy0xMFxuICAgIC8vIFN0ZXBzIDYuYi02LmU6ICswICE9IC0wXG4gICAgLy8gQWRkZWQgdGhlIG5vbnplcm8geSBjaGVjayB0byBtYWtlIEZsb3cgaGFwcHksIGJ1dCBpdCBpcyByZWR1bmRhbnRcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfVxuICAvLyBTdGVwIDYuYTogTmFOID09IE5hTlxuICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xufVxuXG4vKipcbiAqIFBlcmZvcm1zIGVxdWFsaXR5IGJ5IGl0ZXJhdGluZyB0aHJvdWdoIGtleXMgb24gYW4gb2JqZWN0IGFuZCByZXR1cm5pbmcgZmFsc2VcbiAqIHdoZW4gYW55IGtleSBoYXMgdmFsdWVzIHdoaWNoIGFyZSBub3Qgc3RyaWN0bHkgZXF1YWwgYmV0d2VlbiB0aGUgYXJndW1lbnRzLlxuICogUmV0dXJucyB0cnVlIHdoZW4gdGhlIHZhbHVlcyBvZiBhbGwga2V5cyBhcmUgc3RyaWN0bHkgZXF1YWwuXG4gKi9cbmZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBOiBSZWNvcmQ8YW55LCBhbnk+LCBvYmpCOiBSZWNvcmQ8YW55LCBhbnk+KTogYm9vbGVhbiB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKFxuICAgIHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fFxuICAgIG9iakEgPT09IG51bGwgfHxcbiAgICB0eXBlb2Ygb2JqQiAhPT0gJ29iamVjdCcgfHxcbiAgICBvYmpCID09PSBudWxsXG4gICkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGNvbnN0IGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIGNvbnN0IGtleXNCID0gT2JqZWN0LmtleXMob2JqQik7XG5cbiAgaWYgKGtleXNBLmxlbmd0aCAhPT0ga2V5c0IubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzQS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChcbiAgICAgICFPYmplY3QuaGFzT3duKFxuICAgICAgICBvYmpCLFxuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gVFMyMzQ1IC0gQXJndW1lbnQgb2YgdHlwZSAnc3RyaW5nIHwgdW5kZWZpbmVkJyBpcyBub3QgYXNzaWduYWJsZSB0byBwYXJhbWV0ZXIgb2YgdHlwZSAnUHJvcGVydHlLZXknLlxuICAgICAgICBrZXlzQVtpXVxuICAgICAgKSB8fFxuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtIFRTMjUzOCAtIFR5cGUgJ3VuZGVmaW5lZCcgY2Fubm90IGJlIHVzZWQgYXMgYW4gaW5kZXggdHlwZS4gfCBUUzI1MzggLSBUeXBlICd1bmRlZmluZWQnIGNhbm5vdCBiZSB1c2VkIGFzIGFuIGluZGV4IHR5cGUuXG4gICAgICAhaXMob2JqQVtrZXlzQVtpXV0sIG9iakJba2V5c0FbaV1dKVxuICAgICkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzaGFsbG93RXF1YWw7XG4iXSwibmFtZXMiOlsiaXMiLCJ4IiwieSIsInNoYWxsb3dFcXVhbCIsIm9iakEiLCJvYmpCIiwia2V5c0EiLCJPYmplY3QiLCJrZXlzIiwia2V5c0IiLCJsZW5ndGgiLCJpIiwiaGFzT3duIl0sIm1hcHBpbmdzIjoiQUFBQSwrRkFBK0Y7QUFFL0Y7Ozs7Ozs7O0NBUUMsR0FFRCxrQ0FBa0MsR0FFbEM7OztDQUdDOzs7OytCQXlERDs7O2VBQUE7OztBQXhEQSxTQUFTQSxHQUFHQyxDQUE0QixFQUFFQyxDQUE0QjtJQUNwRSxzQkFBc0I7SUFDdEIsSUFBSUQsTUFBTUMsR0FBRztRQUNYLGtCQUFrQjtRQUNsQiwwQkFBMEI7UUFDMUIsb0VBQW9FO1FBQ3BFLE9BQU9ELE1BQU0sS0FBS0MsTUFBTSxLQUFLLElBQUlELE1BQU0sSUFBSUM7SUFDN0M7SUFDQSx1QkFBdUI7SUFDdkIsT0FBT0QsTUFBTUEsS0FBS0MsTUFBTUE7QUFDMUI7QUFFQTs7OztDQUlDLEdBQ0QsU0FBU0MsYUFBYUMsSUFBc0IsRUFBRUMsSUFBc0I7SUFDbEUsSUFBSUwsR0FBR0ksTUFBTUMsT0FBTztRQUNsQixPQUFPO0lBQ1Q7SUFFQSxJQUNFLE9BQU9ELFNBQVMsWUFDaEJBLFNBQVMsUUFDVCxPQUFPQyxTQUFTLFlBQ2hCQSxTQUFTLE1BQ1Q7UUFDQSxPQUFPO0lBQ1Q7SUFFQSxNQUFNQyxRQUFRQyxPQUFPQyxJQUFJLENBQUNKO0lBQzFCLE1BQU1LLFFBQVFGLE9BQU9DLElBQUksQ0FBQ0g7SUFFMUIsSUFBSUMsTUFBTUksTUFBTSxLQUFLRCxNQUFNQyxNQUFNLEVBQUU7UUFDakMsT0FBTztJQUNUO0lBRUEsc0NBQXNDO0lBQ3RDLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJTCxNQUFNSSxNQUFNLEVBQUVDLElBQUs7UUFDckMsSUFDRSxDQUFDSixPQUFPSyxNQUFNLENBQ1pQLE1BQ0EsMEhBQTBIO1FBQzFIQyxLQUFLLENBQUNLLEVBQUUsS0FFViw2SUFBNkk7UUFDN0ksQ0FBQ1gsR0FBR0ksSUFBSSxDQUFDRSxLQUFLLENBQUNLLEVBQUUsQ0FBQyxFQUFFTixJQUFJLENBQUNDLEtBQUssQ0FBQ0ssRUFBRSxDQUFDLEdBQ2xDO1lBQ0EsT0FBTztRQUNUO0lBQ0Y7SUFFQSxPQUFPO0FBQ1Q7TUFFQSxXQUFlUiJ9

}),
5861: (function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createElementState: function() {
        return createElementState;
    },
    ixElements: function() {
        return ixElements;
    },
    mergeActionState: function() {
        return mergeActionState;
    }
});
const _timm = __webpack_require__(1185);
const _sharedconstants = __webpack_require__(7087);
const { HTML_ELEMENT, PLAIN_OBJECT, ABSTRACT_NODE, CONFIG_X_VALUE, CONFIG_Y_VALUE, CONFIG_Z_VALUE, CONFIG_VALUE, CONFIG_X_UNIT, CONFIG_Y_UNIT, CONFIG_Z_UNIT, CONFIG_UNIT } = _sharedconstants.IX2EngineConstants;
const { IX2_SESSION_STOPPED, IX2_INSTANCE_ADDED, IX2_ELEMENT_STATE_CHANGED } = _sharedconstants.IX2EngineActionTypes;
const initialState = {};
const refState = 'refState';
const ixElements = (state = initialState, action = {})=>{
    switch(action.type){
        case IX2_SESSION_STOPPED:
            {
                return initialState;
            }
        case IX2_INSTANCE_ADDED:
            {
                const { elementId, element: ref, origin, actionItem, refType } = action.payload;
                const { actionTypeId } = actionItem;
                let newState = state;
                // Create new ref entry if it doesn't exist
                if ((0, _timm.getIn)(newState, [
                    elementId,
                    ref
                ]) !== ref) {
                    newState = createElementState(newState, ref, refType, elementId, actionItem);
                }
                // Merge origin values into ref state
                return mergeActionState(newState, elementId, actionTypeId, origin, actionItem);
            }
        case IX2_ELEMENT_STATE_CHANGED:
            {
                const { elementId, actionTypeId, current, actionItem } = action.payload;
                return mergeActionState(state, elementId, actionTypeId, current, actionItem);
            }
        default:
            {
                return state;
            }
    }
};
function createElementState(state, ref, refType, elementId, actionItem) {
    const refId = refType === PLAIN_OBJECT ? (0, _timm.getIn)(actionItem, [
        'config',
        'target',
        'objectId'
    ]) : null;
    return (0, _timm.mergeIn)(state, [
        elementId
    ], {
        id: elementId,
        ref,
        refId,
        refType
    });
}
function mergeActionState(state, elementId, actionTypeId, actionState, actionItem) {
    const units = pickUnits(actionItem);
    const mergePath = [
        elementId,
        refState,
        actionTypeId
    ];
    return (0, _timm.mergeIn)(state, mergePath, actionState, units);
}
const valueUnitPairs = [
    [
        CONFIG_X_VALUE,
        CONFIG_X_UNIT
    ],
    [
        CONFIG_Y_VALUE,
        CONFIG_Y_UNIT
    ],
    [
        CONFIG_Z_VALUE,
        CONFIG_Z_UNIT
    ],
    [
        CONFIG_VALUE,
        CONFIG_UNIT
    ]
];
function pickUnits(actionItem) {
    const { config } = actionItem;
    return valueUnitPairs.reduce((result, pair)=>{
        const valueKey = pair[0];
        const unitKey = pair[1];
        // @ts-expect-error - TS2538 - Type 'undefined' cannot be used as an index type.
        const configValue = config[valueKey];
        // @ts-expect-error - TS2538 - Type 'undefined' cannot be used as an index type.
        const configUnit = config[unitKey];
        if (configValue != null && configUnit != null) {
            // @ts-expect-error - TS2538 - Type 'undefined' cannot be used as an index type.
            result[unitKey] = configUnit;
        }
        return result;
    }, {});
}

//# sourceMappingURL=data:application/json;base64,

}),
8677: (function () {
/**
 * ----------------------------------------------------------------------
 * Webflow: Interactions 2.0: Init
 */
Webflow.require('ix2').init(
{"events":{"e-2":{"id":"e-2","name":"","animationType":"custom","eventTypeId":"TAB_ACTIVE","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-2","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-151"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".layout497_tab-link","originalId":"66c8a0fb54f84ec4a09644d5|9a424f7a-29b1-1458-a69c-dc97459573a3","appliesTo":"CLASS"},"targets":[{"selector":".layout497_tab-link","originalId":"66c8a0fb54f84ec4a09644d5|9a424f7a-29b1-1458-a69c-dc97459573a3","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1716289349039},"e-3":{"id":"e-3","name":"","animationType":"custom","eventTypeId":"TAB_INACTIVE","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-3","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-2"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".layout497_tab-link","originalId":"66c8a0fb54f84ec4a09644d5|9a424f7a-29b1-1458-a69c-dc97459573a3","appliesTo":"CLASS"},"targets":[{"selector":".layout497_tab-link","originalId":"66c8a0fb54f84ec4a09644d5|9a424f7a-29b1-1458-a69c-dc97459573a3","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1716289349039},"e-6":{"id":"e-6","name":"","animationType":"preset","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-4","affectedElements":{},"duration":0}},"mediaQueries":["main","medium"],"target":{"id":"b6dfa3d5-d6a6-4761-a3f9-d0f4f0f1dea1","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"b6dfa3d5-d6a6-4761-a3f9-d0f4f0f1dea1","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-4-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1718983840830},"e-7":{"id":"e-7","name":"","animationType":"preset","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-5","affectedElements":{},"duration":0}},"mediaQueries":["small","tiny"],"target":{"id":"b6dfa3d5-d6a6-4761-a3f9-d0f4f0f1dea1","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"b6dfa3d5-d6a6-4761-a3f9-d0f4f0f1dea1","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-5-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1718983840830},"e-10":{"id":"e-10","name":"","animationType":"preset","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-6","affectedElements":{},"duration":0}},"mediaQueries":["main","medium"],"target":{"id":"b6dfa3d5-d6a6-4761-a3f9-d0f4f0f1dea2","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"b6dfa3d5-d6a6-4761-a3f9-d0f4f0f1dea2","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-6-p","smoothing":90,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1718984372137},"e-12":{"id":"e-12","name":"","animationType":"preset","eventTypeId":"NAVBAR_OPEN","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-8","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-407"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1626227992075},"e-13":{"id":"e-13","name":"","animationType":"preset","eventTypeId":"NAVBAR_CLOSE","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-9","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-590"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1626227992075},"e-14":{"id":"e-14","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-15","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-15"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".team_founders-item-wrapper","originalId":"66c8a0fb54f84ec4a09643c9|6da2deb5-09cf-721d-f08a-eaaf6fb6fbee","appliesTo":"CLASS"},"targets":[{"selector":".team_founders-item-wrapper","originalId":"66c8a0fb54f84ec4a09643c9|6da2deb5-09cf-721d-f08a-eaaf6fb6fbee","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719601335808},"e-15":{"id":"e-15","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-16","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-14"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".team_founders-item-wrapper","originalId":"66c8a0fb54f84ec4a09643c9|6da2deb5-09cf-721d-f08a-eaaf6fb6fbee","appliesTo":"CLASS"},"targets":[{"selector":".team_founders-item-wrapper","originalId":"66c8a0fb54f84ec4a09643c9|6da2deb5-09cf-721d-f08a-eaaf6fb6fbee","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719601335809},"e-18":{"id":"e-18","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInBottom","autoStopEventId":"e-19"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|95063868-bc6a-1ffe-f299-6119a8952490","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|95063868-bc6a-1ffe-f299-6119a8952490","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":25,"scrollOffsetUnit":"%","delay":0,"direction":"BOTTOM","effectIn":true},"createdOn":1719675048087},"e-30":{"id":"e-30","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-19","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-31"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"cb0dd916-b9f1-41e9-bb3e-2fc2081cf682","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"cb0dd916-b9f1-41e9-bb3e-2fc2081cf682","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719676271965},"e-31":{"id":"e-31","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-20","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-30"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"cb0dd916-b9f1-41e9-bb3e-2fc2081cf682","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"cb0dd916-b9f1-41e9-bb3e-2fc2081cf682","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719676271965},"e-32":{"id":"e-32","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-19","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-33"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a096441d|fb0fe448-39b1-9f34-2c41-7aedc29c5acc","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a096441d|fb0fe448-39b1-9f34-2c41-7aedc29c5acc","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719681416467},"e-33":{"id":"e-33","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-20","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-32"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a096441d|fb0fe448-39b1-9f34-2c41-7aedc29c5acc","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a096441d|fb0fe448-39b1-9f34-2c41-7aedc29c5acc","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719681416467},"e-34":{"id":"e-34","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-19","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-35"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a096441d|e4cc88e2-954f-acef-390f-176d10a696c7","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a096441d|e4cc88e2-954f-acef-390f-176d10a696c7","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719681480997},"e-35":{"id":"e-35","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-20","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-34"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a096441d|e4cc88e2-954f-acef-390f-176d10a696c7","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a096441d|e4cc88e2-954f-acef-390f-176d10a696c7","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719681480997},"e-36":{"id":"e-36","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-21","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-37"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".cross-banner_component","originalId":"66c8a0fb54f84ec4a096441d|27e4251e-56f1-0cd5-d211-e4c36661f98a","appliesTo":"CLASS"},"targets":[{"selector":".cross-banner_component","originalId":"66c8a0fb54f84ec4a096441d|27e4251e-56f1-0cd5-d211-e4c36661f98a","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":10,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1719682548710},"e-38":{"id":"e-38","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-22","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".section_story","originalId":"66c8a0fb54f84ec4a096441d|201195b2-be0d-79d4-ce6b-8a0d7c886b4d","appliesTo":"CLASS"},"targets":[{"selector":".section_story","originalId":"66c8a0fb54f84ec4a096441d|201195b2-be0d-79d4-ce6b-8a0d7c886b4d","appliesTo":"CLASS"}],"config":[{"continuousParameterGroupId":"a-22-p","smoothing":95,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1719687033055},"e-39":{"id":"e-39","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-23","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-40"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"3b69a2d4-86d4-4f5e-c66c-ba5c32502e42","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"3b69a2d4-86d4-4f5e-c66c-ba5c32502e42","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719688064778},"e-41":{"id":"e-41","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-24","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-158"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"3b69a2d4-86d4-4f5e-c66c-ba5c32502e45","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"3b69a2d4-86d4-4f5e-c66c-ba5c32502e45","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719688064778},"e-43":{"id":"e-43","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-25","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-44"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"3b69a2d4-86d4-4f5e-c66c-ba5c32502e48","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"3b69a2d4-86d4-4f5e-c66c-ba5c32502e48","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719688064778},"e-45":{"id":"e-45","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"FADE_EFFECT","instant":false,"config":{"actionListId":"fadeIn","autoStopEventId":"e-46"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".measure-lines","originalId":"135fd238-dd63-50e4-767f-85a9b4cef963","appliesTo":"CLASS"},"targets":[{"selector":".measure-lines","originalId":"135fd238-dd63-50e4-767f-85a9b4cef963","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":10,"scrollOffsetUnit":"%","delay":0,"direction":null,"effectIn":true},"createdOn":1719692594574},"e-47":{"id":"e-47","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-26","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-48"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a0964443|e3ef3deb-d9b2-4630-0b98-8e6b45519235","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a0964443|e3ef3deb-d9b2-4630-0b98-8e6b45519235","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719798193456},"e-48":{"id":"e-48","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-27","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-47"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a0964443|e3ef3deb-d9b2-4630-0b98-8e6b45519235","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a0964443|e3ef3deb-d9b2-4630-0b98-8e6b45519235","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1719798193456},"e-49":{"id":"e-49","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInBottom","autoStopEventId":"e-50"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".footer_bottom","originalId":"3f706e72-acb3-1119-b4f4-161346770ef0","appliesTo":"CLASS"},"targets":[{"selector":".footer_bottom","originalId":"3f706e72-acb3-1119-b4f4-161346770ef0","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":500,"direction":"BOTTOM","effectIn":true},"createdOn":1719798722202},"e-51":{"id":"e-51","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-28","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".holistic_ix-trigger","originalId":"b6dfa3d5-d6a6-4761-a3f9-d0f4f0f1dea1","appliesTo":"CLASS"},"targets":[{"selector":".holistic_ix-trigger","originalId":"b6dfa3d5-d6a6-4761-a3f9-d0f4f0f1dea1","appliesTo":"CLASS"}],"config":[{"continuousParameterGroupId":"a-28-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":true,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1719856799019},"e-52":{"id":"e-52","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"FADE_EFFECT","instant":false,"config":{"actionListId":"fadeIn","autoStopEventId":"e-53"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".measure-lines","originalId":"66c8a0fb54f84ec4a0964443|7f5d3b29-33b2-f5b3-8f6d-ee4e6e5d006b","appliesTo":"CLASS"},"targets":[{"selector":".measure-lines","originalId":"66c8a0fb54f84ec4a0964443|7f5d3b29-33b2-f5b3-8f6d-ee4e6e5d006b","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":10,"scrollOffsetUnit":"%","delay":0,"direction":null,"effectIn":true},"createdOn":1720094709909},"e-62":{"id":"e-62","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInBottom","autoStopEventId":"e-63"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a096441d|111d8318-53ac-ba5e-af29-905de9c645c2","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a096441d|111d8318-53ac-ba5e-af29-905de9c645c2","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":100,"direction":"BOTTOM","effectIn":true},"createdOn":1720468548083},"e-64":{"id":"e-64","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInBottom","autoStopEventId":"e-65"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a096441d|111d8318-53ac-ba5e-af29-905de9c645c9","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a096441d|111d8318-53ac-ba5e-af29-905de9c645c9","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":200,"direction":"BOTTOM","effectIn":true},"createdOn":1720468568170},"e-66":{"id":"e-66","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"FADE_EFFECT","instant":false,"config":{"actionListId":"fadeIn","autoStopEventId":"e-67"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".measure-lines","originalId":"61177557-bccb-c286-f3eb-68d131419f6f","appliesTo":"CLASS"},"targets":[{"selector":".measure-lines","originalId":"61177557-bccb-c286-f3eb-68d131419f6f","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":10,"scrollOffsetUnit":"%","delay":0,"direction":null,"effectIn":true},"createdOn":1720470312551},"e-68":{"id":"e-68","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInTop","autoStopEventId":"e-192"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".navbar_component","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"},"targets":[{"selector":".navbar_component","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":300,"direction":"TOP","effectIn":true},"createdOn":1720530656747},"e-70":{"id":"e-70","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-30","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a0964443|b0d15133-777e-f29d-a8f2-f6928d17434d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a0964443|b0d15133-777e-f29d-a8f2-f6928d17434d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-30-p","smoothing":90,"startsEntering":false,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1720531963531},"e-73":{"id":"e-73","name":"","animationType":"custom","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-32","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-201"}},"mediaQueries":["main","medium"],"target":{"selector":".process_list","originalId":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d859","appliesTo":"CLASS"},"targets":[{"selector":".process_list","originalId":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d859","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":15,"scrollOffsetUnit":"%","delay":null,"direction":null,"effectIn":null},"createdOn":1721307386962},"e-77":{"id":"e-77","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"FADE_EFFECT","instant":false,"config":{"actionListId":"fadeIn","autoStopEventId":"e-199"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".measure-lines","originalId":"66c8a0fb54f84ec4a0964443|a60c9785-5b2a-a0e1-9391-824557376f4b","appliesTo":"CLASS"},"targets":[{"selector":".measure-lines","originalId":"66c8a0fb54f84ec4a0964443|a60c9785-5b2a-a0e1-9391-824557376f4b","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":10,"scrollOffsetUnit":"%","delay":0,"direction":null,"effectIn":true},"createdOn":1724900419636},"e-83":{"id":"e-83","name":"","animationType":"preset","eventTypeId":"NAVBAR_OPEN","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-8","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-407"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"bc9561d2-f6da-3010-edbe-28ff22e1ecf0","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"bc9561d2-f6da-3010-edbe-28ff22e1ecf0","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1626227992075},"e-84":{"id":"e-84","name":"","animationType":"preset","eventTypeId":"NAVBAR_CLOSE","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-9","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-590"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"bc9561d2-f6da-3010-edbe-28ff22e1ecf0","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"bc9561d2-f6da-3010-edbe-28ff22e1ecf0","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1626227992075},"e-85":{"id":"e-85","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInBottom","autoStopEventId":"e-86"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".footer_bottom","originalId":"66d7c59e48d6fd6e40b8118f|4125d4fe-298a-0f6a-7453-0f70ccb5d92a","appliesTo":"CLASS"},"targets":[{"selector":".footer_bottom","originalId":"66d7c59e48d6fd6e40b8118f|4125d4fe-298a-0f6a-7453-0f70ccb5d92a","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":500,"direction":"BOTTOM","effectIn":true},"createdOn":1725416888216},"e-91":{"id":"e-91","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-114"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|b3acc3e5-016c-983a-8053-6ff02dff4923","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|b3acc3e5-016c-983a-8053-6ff02dff4923","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1728323885595},"e-92":{"id":"e-92","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-113"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|b3acc3e5-016c-983a-8053-6ff02dff4923","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|b3acc3e5-016c-983a-8053-6ff02dff4923","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728323885595},"e-93":{"id":"e-93","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-228"}},"mediaQueries":["small","tiny"],"target":{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe8a","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe8a","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728323911714},"e-94":{"id":"e-94","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-35","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-227"}},"mediaQueries":["small","tiny"],"target":{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe8a","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe8a","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728323911714},"e-95":{"id":"e-95","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-118"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|a146c4cf-7dd9-47e2-2eea-5827de3d973e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|a146c4cf-7dd9-47e2-2eea-5827de3d973e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1728324350041},"e-96":{"id":"e-96","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-117"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|a146c4cf-7dd9-47e2-2eea-5827de3d973e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|a146c4cf-7dd9-47e2-2eea-5827de3d973e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324350041},"e-97":{"id":"e-97","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-116"}},"mediaQueries":["small","tiny"],"target":{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe93","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe93","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324366046},"e-98":{"id":"e-98","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-35","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-115"}},"mediaQueries":["small","tiny"],"target":{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe93","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe93","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324366046},"e-99":{"id":"e-99","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-122"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|2abdfc59-b615-2646-458c-176276cc619d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|2abdfc59-b615-2646-458c-176276cc619d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1728324391760},"e-100":{"id":"e-100","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-121"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|2abdfc59-b615-2646-458c-176276cc619d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|2abdfc59-b615-2646-458c-176276cc619d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324391760},"e-101":{"id":"e-101","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-126"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|62c80d7f-3a52-d2bd-a517-fe731fa0fa02","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|62c80d7f-3a52-d2bd-a517-fe731fa0fa02","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1728324426192},"e-102":{"id":"e-102","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-125"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|62c80d7f-3a52-d2bd-a517-fe731fa0fa02","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|62c80d7f-3a52-d2bd-a517-fe731fa0fa02","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324426192},"e-105":{"id":"e-105","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-124"}},"mediaQueries":["small","tiny"],"target":{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbea4","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbea4","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324471666},"e-106":{"id":"e-106","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-35","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-123"}},"mediaQueries":["small","tiny"],"target":{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbea4","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbea4","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324471667},"e-107":{"id":"e-107","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-226"}},"mediaQueries":["small","tiny"],"target":{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe81","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe81","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1729106028599},"e-108":{"id":"e-108","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-35","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-225"}},"mediaQueries":["small","tiny"],"target":{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe81","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe81","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1729106028600},"e-109":{"id":"e-109","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-226"}},"mediaQueries":["small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52aaa","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52aaa","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1729106028599},"e-110":{"id":"e-110","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-35","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-225"}},"mediaQueries":["small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52aaa","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52aaa","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1729106028600},"e-111":{"id":"e-111","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-228"}},"mediaQueries":["small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52ab5","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52ab5","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728323911714},"e-112":{"id":"e-112","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-35","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-227"}},"mediaQueries":["small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52ab5","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52ab5","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728323911714},"e-113":{"id":"e-113","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-114"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52abc","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52abc","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1728323885595},"e-114":{"id":"e-114","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-113"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52abc","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52abc","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728323885595},"e-115":{"id":"e-115","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-116"}},"mediaQueries":["small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52ac0","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52ac0","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324366046},"e-116":{"id":"e-116","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-35","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-115"}},"mediaQueries":["small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52ac0","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52ac0","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324366046},"e-117":{"id":"e-117","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-118"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52ac6","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52ac6","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1728324350041},"e-118":{"id":"e-118","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-117"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52ac6","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52ac6","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324350041},"e-123":{"id":"e-123","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-124"}},"mediaQueries":["small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52ad5","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52ad5","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324471666},"e-124":{"id":"e-124","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-35","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-123"}},"mediaQueries":["small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52ad5","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52ad5","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324471667},"e-125":{"id":"e-125","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-126"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52adc","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52adc","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1728324426192},"e-126":{"id":"e-126","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-125"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"4ebd2f1c-d431-87de-e855-e59948e52adc","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"4ebd2f1c-d431-87de-e855-e59948e52adc","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1728324426192},"e-127":{"id":"e-127","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-128"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|e69c6a8a-d0ea-d4b7-0eee-fd69e23a1b10","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|e69c6a8a-d0ea-d4b7-0eee-fd69e23a1b10","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1731597836695},"e-128":{"id":"e-128","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-127"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9|e69c6a8a-d0ea-d4b7-0eee-fd69e23a1b10","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9|e69c6a8a-d0ea-d4b7-0eee-fd69e23a1b10","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1731597836695},"e-129":{"id":"e-129","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-130"}},"mediaQueries":["small","tiny"],"target":{"id":"3c7f2173-7931-128c-dc0b-086b496f3801","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"3c7f2173-7931-128c-dc0b-086b496f3801","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1731597983678},"e-130":{"id":"e-130","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-35","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-129"}},"mediaQueries":["small","tiny"],"target":{"id":"3c7f2173-7931-128c-dc0b-086b496f3801","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"3c7f2173-7931-128c-dc0b-086b496f3801","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1731597983678},"e-131":{"id":"e-131","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-132"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"3c7f2173-7931-128c-dc0b-086b496f3808","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"3c7f2173-7931-128c-dc0b-086b496f3808","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1731597983678},"e-132":{"id":"e-132","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-131"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"3c7f2173-7931-128c-dc0b-086b496f3808","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"3c7f2173-7931-128c-dc0b-086b496f3808","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1731597983678},"e-133":{"id":"e-133","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-134"}},"mediaQueries":["small","tiny"],"target":{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe9c","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe9c","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1731615276245},"e-134":{"id":"e-134","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-35","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-133"}},"mediaQueries":["small","tiny"],"target":{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe9c","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"0d13a2a1-1513-2a7d-e082-c2848b7dbe9c","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1731615276246},"e-135":{"id":"e-135","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInTop","autoStopEventId":"e-192"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".navbar_component-2","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"},"targets":[{"selector":".navbar_component-2","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":300,"direction":"TOP","effectIn":true},"createdOn":1720530656747},"e-137":{"id":"e-137","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-36","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-138"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"b18989dc-cf91-3fa4-07d6-2ef47cd1da83","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"b18989dc-cf91-3fa4-07d6-2ef47cd1da83","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1720467412200},"e-141":{"id":"e-141","name":"","animationType":"custom","eventTypeId":"PAGE_START","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-37","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-142"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1733941422185},"e-147":{"id":"e-147","name":"","animationType":"custom","eventTypeId":"PAGE_START","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-37","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-148"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a0964442","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a0964442","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1734026232292},"e-149":{"id":"e-149","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInTop","autoStopEventId":"e-150"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".navbar_component-3","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"},"targets":[{"selector":".navbar_component-3","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":300,"direction":"TOP","effectIn":true},"createdOn":1720530656747},"e-151":{"id":"e-151","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInBottom","autoStopEventId":"e-152"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".footer_bottom-2","originalId":"67ae3834291568c43ea5cc1d|4125d4fe-298a-0f6a-7453-0f70ccb5d92a","appliesTo":"CLASS"},"targets":[{"selector":".footer_bottom-2","originalId":"67ae3834291568c43ea5cc1d|4125d4fe-298a-0f6a-7453-0f70ccb5d92a","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":500,"direction":"BOTTOM","effectIn":true},"createdOn":1725416888216},"e-153":{"id":"e-153","name":"","animationType":"custom","eventTypeId":"PAGE_START","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-39","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-154"}},"mediaQueries":["main"],"target":{"id":"681e4517a4dc858d5c2c0a87","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"681e4517a4dc858d5c2c0a87","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":true,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1746814510620},"e-155":{"id":"e-155","name":"","animationType":"custom","eventTypeId":"PAGE_START","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-40","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-156"}},"mediaQueries":["small","tiny"],"target":{"id":"681e4517a4dc858d5c2c0a87","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"681e4517a4dc858d5c2c0a87","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":true,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1746814776879},"e-157":{"id":"e-157","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-41","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-158"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"681e4517a4dc858d5c2c0a87|15a20533-aa1e-11e4-5b73-bb67a6eab7f8","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"681e4517a4dc858d5c2c0a87|15a20533-aa1e-11e4-5b73-bb67a6eab7f8","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1746817003265},"e-158":{"id":"e-158","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-42","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-157"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"681e4517a4dc858d5c2c0a87|15a20533-aa1e-11e4-5b73-bb67a6eab7f8","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"681e4517a4dc858d5c2c0a87|15a20533-aa1e-11e4-5b73-bb67a6eab7f8","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1746817003265},"e-161":{"id":"e-161","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-162"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|b3acc3e5-016c-983a-8053-6ff02dff4923","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|b3acc3e5-016c-983a-8053-6ff02dff4923","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1749142823217},"e-162":{"id":"e-162","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-161"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|b3acc3e5-016c-983a-8053-6ff02dff4923","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|b3acc3e5-016c-983a-8053-6ff02dff4923","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749142823217},"e-163":{"id":"e-163","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-164"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|a146c4cf-7dd9-47e2-2eea-5827de3d973e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|a146c4cf-7dd9-47e2-2eea-5827de3d973e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1749142823217},"e-164":{"id":"e-164","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-163"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|a146c4cf-7dd9-47e2-2eea-5827de3d973e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|a146c4cf-7dd9-47e2-2eea-5827de3d973e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749142823217},"e-165":{"id":"e-165","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-166"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|2abdfc59-b615-2646-458c-176276cc619d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|2abdfc59-b615-2646-458c-176276cc619d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1749142823217},"e-166":{"id":"e-166","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-165"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|2abdfc59-b615-2646-458c-176276cc619d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|2abdfc59-b615-2646-458c-176276cc619d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749142823217},"e-167":{"id":"e-167","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-168"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|62c80d7f-3a52-d2bd-a517-fe731fa0fa02","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|62c80d7f-3a52-d2bd-a517-fe731fa0fa02","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1749142823217},"e-168":{"id":"e-168","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-167"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|62c80d7f-3a52-d2bd-a517-fe731fa0fa02","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|62c80d7f-3a52-d2bd-a517-fe731fa0fa02","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749142823217},"e-169":{"id":"e-169","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-170"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|e69c6a8a-d0ea-d4b7-0eee-fd69e23a1b10","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|e69c6a8a-d0ea-d4b7-0eee-fd69e23a1b10","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":0,"direction":null,"effectIn":true},"createdOn":1749142823217},"e-170":{"id":"e-170","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-34","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-169"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|e69c6a8a-d0ea-d4b7-0eee-fd69e23a1b10","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|e69c6a8a-d0ea-d4b7-0eee-fd69e23a1b10","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749142823217},"e-173":{"id":"e-173","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-43","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-174"}},"mediaQueries":["small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde4d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde4d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749143638132},"e-174":{"id":"e-174","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-44","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-173"}},"mediaQueries":["small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde4d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde4d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749143638132},"e-175":{"id":"e-175","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-43","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-176"}},"mediaQueries":["small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde58","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde58","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749143638132},"e-176":{"id":"e-176","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-44","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-175"}},"mediaQueries":["small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde58","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde58","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749143638132},"e-177":{"id":"e-177","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-43","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-178"}},"mediaQueries":["small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde6d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde6d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749143638132},"e-178":{"id":"e-178","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-44","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-177"}},"mediaQueries":["small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde6d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde6d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749143638132},"e-179":{"id":"e-179","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-43","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-180"}},"mediaQueries":["small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde42","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde42","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749143638132},"e-180":{"id":"e-180","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-44","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-179"}},"mediaQueries":["small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde42","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde42","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749143638132},"e-181":{"id":"e-181","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-43","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-182"}},"mediaQueries":["small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde63","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde63","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749143638132},"e-182":{"id":"e-182","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-44","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-181"}},"mediaQueries":["small","tiny"],"target":{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde63","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6841cd26a53cb3c349f1cf28|9848a86e-ed96-63eb-104d-8537765bde63","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1749143638132},"e-183":{"id":"e-183","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInTop","autoStopEventId":"e-184"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".navbar_component-4","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"},"targets":[{"selector":".navbar_component-4","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":300,"direction":"TOP","effectIn":true},"createdOn":1720530656747},"e-185":{"id":"e-185","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInBottom","autoStopEventId":"e-186"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".footer_bottom-3","originalId":"67ae3834291568c43ea5cc1d|4125d4fe-298a-0f6a-7453-0f70ccb5d92a","appliesTo":"CLASS"},"targets":[{"selector":".footer_bottom-3","originalId":"67ae3834291568c43ea5cc1d|4125d4fe-298a-0f6a-7453-0f70ccb5d92a","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":500,"direction":"BOTTOM","effectIn":true},"createdOn":1725416888216},"e-187":{"id":"e-187","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-45","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-188"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"686c074d24676a6f4bccdf83|a0a79b98-f52f-02bd-3972-76334d9cacea","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"686c074d24676a6f4bccdf83|a0a79b98-f52f-02bd-3972-76334d9cacea","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1750964757188},"e-188":{"id":"e-188","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-46","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-187"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"686c074d24676a6f4bccdf83|a0a79b98-f52f-02bd-3972-76334d9cacea","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"686c074d24676a6f4bccdf83|a0a79b98-f52f-02bd-3972-76334d9cacea","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1750964757188},"e-189":{"id":"e-189","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-47","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-190"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"686c074d24676a6f4bccdf83|3b441781-84a2-fb1a-6eb6-99a843613492","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"686c074d24676a6f4bccdf83|3b441781-84a2-fb1a-6eb6-99a843613492","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1751050134781},"e-190":{"id":"e-190","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-48","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-189"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"686c074d24676a6f4bccdf83|3b441781-84a2-fb1a-6eb6-99a843613492","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"686c074d24676a6f4bccdf83|3b441781-84a2-fb1a-6eb6-99a843613492","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1751050134781},"e-191":{"id":"e-191","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInTop","autoStopEventId":"e-192"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".navbar_component-5","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"},"targets":[{"selector":".navbar_component-5","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":300,"direction":"TOP","effectIn":true},"createdOn":1720530656747},"e-194":{"id":"e-194","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-49","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-200"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7deac","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7deac","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753470117285},"e-195":{"id":"e-195","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-49","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-204"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7dec1","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7dec1","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753470143497},"e-196":{"id":"e-196","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInBottom","autoStopEventId":"e-193"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".footer_bottom-4","originalId":"67ae3834291568c43ea5cc1d|4125d4fe-298a-0f6a-7453-0f70ccb5d92a","appliesTo":"CLASS"},"targets":[{"selector":".footer_bottom-4","originalId":"67ae3834291568c43ea5cc1d|4125d4fe-298a-0f6a-7453-0f70ccb5d92a","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":500,"direction":"BOTTOM","effectIn":true},"createdOn":1725416888216},"e-197":{"id":"e-197","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-50","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-203"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7de98","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7de98","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753469604121},"e-199":{"id":"e-199","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-50","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-205"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7deb6","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7deb6","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753470130066},"e-200":{"id":"e-200","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-50","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-194"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7deac","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7deac","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753470117285},"e-201":{"id":"e-201","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-50","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-202"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7dea2","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7dea2","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753470102113},"e-202":{"id":"e-202","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-49","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-201"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7dea2","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7dea2","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753470102113},"e-203":{"id":"e-203","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-49","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-197"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7de98","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7de98","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753469604121},"e-204":{"id":"e-204","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-50","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-195"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7dec1","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7dec1","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753470143497},"e-205":{"id":"e-205","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-49","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-199"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7deb6","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|7a90b34a-083e-08af-1790-ce244af7deb6","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753470130066},"e-206":{"id":"e-206","name":"","animationType":"preset","eventTypeId":"SCROLL_INTO_VIEW","action":{"id":"","actionTypeId":"SLIDE_EFFECT","instant":false,"config":{"actionListId":"slideInTop","autoStopEventId":"e-198"}},"mediaQueries":["main","medium","small","tiny"],"target":{"selector":".navbar_component-6","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"},"targets":[{"selector":".navbar_component-6","originalId":"c245f08e-e3eb-517d-14f0-e393936b5982","appliesTo":"CLASS"}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":0,"scrollOffsetUnit":"%","delay":300,"direction":"TOP","effectIn":true},"createdOn":1720530656747},"e-207":{"id":"e-207","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-41","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-208"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|16a61f2c-9a4c-277b-2932-fb7fc1629eb8","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|16a61f2c-9a4c-277b-2932-fb7fc1629eb8","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753730831937},"e-208":{"id":"e-208","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-42","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-207"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"6887bfe1bb84105e57c6ec31|16a61f2c-9a4c-277b-2932-fb7fc1629eb8","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"6887bfe1bb84105e57c6ec31|16a61f2c-9a4c-277b-2932-fb7fc1629eb8","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1753730831937},"e-211":{"id":"e-211","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-41","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-212"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68a8ae3134192c3a6709b323|e2836b1d-ae75-69b0-487f-d3d4231561ea","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68a8ae3134192c3a6709b323|e2836b1d-ae75-69b0-487f-d3d4231561ea","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1756841978435},"e-212":{"id":"e-212","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-42","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-211"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68a8ae3134192c3a6709b323|e2836b1d-ae75-69b0-487f-d3d4231561ea","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68a8ae3134192c3a6709b323|e2836b1d-ae75-69b0-487f-d3d4231561ea","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1756841978435},"e-213":{"id":"e-213","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-41","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-214"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68a8ae3134192c3a6709b323|3ebe7690-4ec0-7323-117e-059877f05008","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68a8ae3134192c3a6709b323|3ebe7690-4ec0-7323-117e-059877f05008","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1756841996399},"e-214":{"id":"e-214","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-42","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-213"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68a8ae3134192c3a6709b323|3ebe7690-4ec0-7323-117e-059877f05008","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68a8ae3134192c3a6709b323|3ebe7690-4ec0-7323-117e-059877f05008","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1756841996400},"e-215":{"id":"e-215","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-41","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-216"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68a8ae3134192c3a6709b323|37eef7a1-cb16-3f51-4c33-aaf45ff64dd7","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68a8ae3134192c3a6709b323|37eef7a1-cb16-3f51-4c33-aaf45ff64dd7","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1756842019383},"e-216":{"id":"e-216","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-42","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-215"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68a8ae3134192c3a6709b323|37eef7a1-cb16-3f51-4c33-aaf45ff64dd7","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68a8ae3134192c3a6709b323|37eef7a1-cb16-3f51-4c33-aaf45ff64dd7","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1756842019383},"e-217":{"id":"e-217","name":"","animationType":"preset","eventTypeId":"PAGE_START","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-37","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-218"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68c1f7a3653eba0244192522","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"68c1f7a3653eba0244192522","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1757542307951},"e-219":{"id":"e-219","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-53","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-220"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"321cd59c-8e2a-a700-9d56-634d9b42e44f","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"321cd59c-8e2a-a700-9d56-634d9b42e44f","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1757545405789},"e-221":{"id":"e-221","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-53","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-222"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"321cd59c-8e2a-a700-9d56-634d9b42e46e","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"321cd59c-8e2a-a700-9d56-634d9b42e46e","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1758031122870},"e-223":{"id":"e-223","name":"","animationType":"custom","eventTypeId":"PAGE_START","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-56","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-224"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"66c8a0fb54f84ec4a09643c9","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"66c8a0fb54f84ec4a09643c9","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1759864607488},"e-225":{"id":"e-225","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-57","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-226"}},"mediaQueries":["main","medium"],"target":{"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad995","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad995","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1757622215116},"e-226":{"id":"e-226","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-58","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-225"}},"mediaQueries":["main","medium"],"target":{"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad995","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad995","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1757622215117},"e-227":{"id":"e-227","name":"","animationType":"custom","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-59","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-228"}},"mediaQueries":["tiny"],"target":{"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad9c2","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad9c2","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1758116769976},"e-228":{"id":"e-228","name":"","animationType":"custom","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-60","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-227"}},"mediaQueries":["tiny"],"target":{"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad9c2","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad9c2","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1758116769976},"e-229":{"id":"e-229","name":"","animationType":"preset","eventTypeId":"MOUSE_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-47","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-230"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68e56c7dd1f5a4689ff4c3bf|43a84995-03bc-7ea4-9b96-d5a7d74f527d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68e56c7dd1f5a4689ff4c3bf|43a84995-03bc-7ea4-9b96-d5a7d74f527d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1760109585825},"e-230":{"id":"e-230","name":"","animationType":"preset","eventTypeId":"MOUSE_SECOND_CLICK","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-48","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-229"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68e56c7dd1f5a4689ff4c3bf|43a84995-03bc-7ea4-9b96-d5a7d74f527d","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68e56c7dd1f5a4689ff4c3bf|43a84995-03bc-7ea4-9b96-d5a7d74f527d","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1760109585825},"e-233":{"id":"e-233","name":"","animationType":"custom","eventTypeId":"PAGE_START","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-67","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-234"}},"mediaQueries":["tiny"],"target":{"id":"68f27b8e98ec7053563a1092","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":false,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1760725890185},"e-237":{"id":"e-237","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-63","affectedElements":{},"duration":0}},"mediaQueries":["main","medium"],"target":{"id":"68f27b8e98ec7053563a1092|d4467e60-f58e-c4c2-4dc6-be8847403bde","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092|d4467e60-f58e-c4c2-4dc6-be8847403bde","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-63-p","smoothing":66,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1760968938359},"e-238":{"id":"e-238","name":"","animationType":"custom","eventTypeId":"PAGE_START","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-65","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-239"}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68f27b8e98ec7053563a1092","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":true,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1761050069071},"e-240":{"id":"e-240","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-66","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68f27b8e98ec7053563a1092|795f8da1-99b1-65bb-9f48-5a4ffcb3eea5","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092|795f8da1-99b1-65bb-9f48-5a4ffcb3eea5","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-66-p","smoothing":78,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761070037824},"e-241":{"id":"e-241","name":"","animationType":"custom","eventTypeId":"PAGE_START","action":{"id":"","actionTypeId":"GENERAL_START_ACTION","config":{"delay":0,"easing":"","duration":0,"actionListId":"a-61","affectedElements":{},"playInReverse":false,"autoStopEventId":"e-242"}},"mediaQueries":["main","medium","small"],"target":{"id":"68f27b8e98ec7053563a1092","appliesTo":"PAGE","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092","appliesTo":"PAGE","styleBlockIds":[]}],"config":{"loop":true,"playInReverse":false,"scrollOffsetValue":null,"scrollOffsetUnit":null,"delay":null,"direction":null,"effectIn":null},"createdOn":1761077192018},"e-243":{"id":"e-243","name":"","animationType":"preset","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-63","affectedElements":{},"duration":0}},"mediaQueries":["main","medium"],"target":{"id":"68fa2e7260fdd6766f55e951|5934f4a2-f787-955f-ac41-d382d5b56e50","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68fa2e7260fdd6766f55e951|5934f4a2-f787-955f-ac41-d382d5b56e50","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-63-p","smoothing":66,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761226387714},"e-244":{"id":"e-244","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-68","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68fa2e7260fdd6766f55e951|a585bfc2-567f-d2ea-0600-238a8744fb6f","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68fa2e7260fdd6766f55e951|a585bfc2-567f-d2ea-0600-238a8744fb6f","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-68-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761335894127},"e-245":{"id":"e-245","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-68","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68fa2e7260fdd6766f55e951|3513ee71-a1d8-c251-c283-fcdaed7e15c1","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68fa2e7260fdd6766f55e951|3513ee71-a1d8-c251-c283-fcdaed7e15c1","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-68-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761336028494},"e-246":{"id":"e-246","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-68","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68fa2e7260fdd6766f55e951|ad86a598-640c-68c6-821d-170234b2cc47","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68fa2e7260fdd6766f55e951|ad86a598-640c-68c6-821d-170234b2cc47","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-68-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761336048319},"e-247":{"id":"e-247","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-68","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68fa2e7260fdd6766f55e951|e8c3a397-7702-7409-e284-9945a6c55ba7","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68fa2e7260fdd6766f55e951|e8c3a397-7702-7409-e284-9945a6c55ba7","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-68-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761336058479},"e-248":{"id":"e-248","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-69","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68f27b8e98ec7053563a1092|c3f2d3da-49ee-67fa-c43a-3ce465b73988","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092|c3f2d3da-49ee-67fa-c43a-3ce465b73988","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-69-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761336944844},"e-249":{"id":"e-249","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-69","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68f27b8e98ec7053563a1092|881ffcfc-cf9c-54f3-2219-0660765c7cb8","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092|881ffcfc-cf9c-54f3-2219-0660765c7cb8","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-69-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761337038427},"e-250":{"id":"e-250","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-69","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68f27b8e98ec7053563a1092|35db7ca2-6c4b-886f-8619-00f04b906b05","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092|35db7ca2-6c4b-886f-8619-00f04b906b05","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-69-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761337045396},"e-251":{"id":"e-251","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-68","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68f27b8e98ec7053563a1092|fb8de767-3ae5-b524-ebef-bf176fb19b54","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092|fb8de767-3ae5-b524-ebef-bf176fb19b54","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-68-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761337602834},"e-252":{"id":"e-252","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-68","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68f27b8e98ec7053563a1092|c9567ee1-7b33-b6b3-cc08-071ce6de2a00","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092|c9567ee1-7b33-b6b3-cc08-071ce6de2a00","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-68-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761337614885},"e-253":{"id":"e-253","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-68","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68f27b8e98ec7053563a1092|b32d941c-c809-d2bc-3b25-cd13823458a9","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092|b32d941c-c809-d2bc-3b25-cd13823458a9","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-68-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761337623085},"e-254":{"id":"e-254","name":"","animationType":"custom","eventTypeId":"SCROLLING_IN_VIEW","action":{"id":"","actionTypeId":"GENERAL_CONTINUOUS_ACTION","config":{"actionListId":"a-68","affectedElements":{},"duration":0}},"mediaQueries":["main","medium","small","tiny"],"target":{"id":"68f27b8e98ec7053563a1092|94937cf3-24b1-9e95-a5ae-c2c6814b56f6","appliesTo":"ELEMENT","styleBlockIds":[]},"targets":[{"id":"68f27b8e98ec7053563a1092|94937cf3-24b1-9e95-a5ae-c2c6814b56f6","appliesTo":"ELEMENT","styleBlockIds":[]}],"config":[{"continuousParameterGroupId":"a-68-p","smoothing":50,"startsEntering":true,"addStartOffset":false,"addOffsetValue":50,"startsExiting":false,"addEndOffset":false,"endOffsetValue":50}],"createdOn":1761337631614}},"actionLists":{"a-2":{"id":"a-2","title":"Layout 497 [Tab In]","actionItemGroups":[{"actionItems":[{"id":"a-2-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{},"widthValue":100,"heightValue":0,"widthUnit":"%","heightUnit":"px","locked":false}}]},{"actionItems":[{"id":"a-2-n-2","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":400,"target":{},"widthValue":100,"widthUnit":"%","heightUnit":"AUTO","locked":false}}]}],"useFirstGroupAsInitialState":true,"createdOn":1716286754756},"a-3":{"id":"a-3","title":"Layout 497 [Tab Out]","actionItemGroups":[{"actionItems":[{"id":"a-3-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":400,"target":{},"widthValue":100,"heightValue":0,"widthUnit":"%","heightUnit":"px","locked":false}}]}],"useFirstGroupAsInitialState":false,"createdOn":1716287231981},"a-4":{"id":"a-4","title":"holistic [Scroll] [Desktop]","continuousParameterGroups":[{"id":"a-4-p","type":"SCROLL_PROGRESS","parameterLabel":"Scroll","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-4-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-1","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ac"]},"yValue":0,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-4-n-2","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-1","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ac"]},"value":1,"unit":""}},{"id":"a-4-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-2","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ad"]},"yValue":0,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":22,"actionItems":[{"id":"a-4-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-1","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ac"]},"yValue":-100,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-4-n-5","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-1","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ac"]},"value":0,"unit":""}},{"id":"a-4-n-6","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-2","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ad"]},"value":1,"unit":""}},{"id":"a-4-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-2","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ad"]},"yValue":-100,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-4-n-8","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-3","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ae"]},"yValue":-100,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":44,"actionItems":[{"id":"a-4-n-9","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-2","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ad"]},"yValue":-200,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-4-n-10","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-2","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ad"]},"value":0,"unit":""}},{"id":"a-4-n-11","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-3","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ae"]},"yValue":-200,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-4-n-12","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-3","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ae"]},"value":1,"unit":""}},{"id":"a-4-n-13","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-4","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98af"]},"yValue":-200,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":66,"actionItems":[{"id":"a-4-n-14","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-3","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ae"]},"yValue":-300,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-4-n-15","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-3","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ae"]},"value":0,"unit":""}},{"id":"a-4-n-16","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-4","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98af"]},"yValue":-300,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]}]}],"createdOn":1691744175161},"a-5":{"id":"a-5","title":"holistic [Scroll] [Mobile]","continuousParameterGroups":[{"id":"a-5-p","type":"SCROLL_PROGRESS","parameterLabel":"Scroll","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-5-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-1","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ac"]},"yValue":0,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-5-n-2","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-1","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ac"]},"value":1,"unit":""}},{"id":"a-5-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-2","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ad"]},"yValue":0,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":16,"actionItems":[{"id":"a-5-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-1","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ac"]},"yValue":-100,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-5-n-5","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-1","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ac"]},"value":0,"unit":""}},{"id":"a-5-n-6","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-2","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ad"]},"value":1,"unit":""}},{"id":"a-5-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-2","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ad"]},"yValue":-100,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-5-n-8","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-3","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ae"]},"yValue":-100,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":32,"actionItems":[{"id":"a-5-n-9","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-2","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ad"]},"yValue":-200,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-5-n-10","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-2","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ad"]},"value":0,"unit":""}},{"id":"a-5-n-11","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-3","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ae"]},"yValue":-200,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-5-n-12","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-3","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ae"]},"value":1,"unit":""}},{"id":"a-5-n-13","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-4","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98af"]},"yValue":-200,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":48,"actionItems":[{"id":"a-5-n-14","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-3","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ae"]},"yValue":-300,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-5-n-15","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-3","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98ae"]},"value":0,"unit":""}},{"id":"a-5-n-16","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_heading.heading-4","selectorGuids":["7bccd1a2-39a2-158a-16a1-1217616f98a8","7bccd1a2-39a2-158a-16a1-1217616f98af"]},"yValue":-300,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]}]}],"createdOn":1691744175161},"a-6":{"id":"a-6","title":"Cascade [Scroll] [Desktop]","continuousParameterGroups":[{"id":"a-6-p","type":"SCROLL_PROGRESS","parameterLabel":"Scroll","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-6-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic-cascade_image-list","selectorGuids":["d244e0e1-e2b1-f73e-9574-c1760be20d67"]},"yValue":0,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-6-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic-cascade_image-list.image-list-right","selectorGuids":["d244e0e1-e2b1-f73e-9574-c1760be20d67","d244e0e1-e2b1-f73e-9574-c1760be20d71"]},"yValue":0,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-6-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic-cascade_image-list","selectorGuids":["d244e0e1-e2b1-f73e-9574-c1760be20d67"]},"yValue":-85,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-6-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic-cascade_image-list.image-list-right","selectorGuids":["d244e0e1-e2b1-f73e-9574-c1760be20d67","d244e0e1-e2b1-f73e-9574-c1760be20d71"]},"yValue":-60,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]}]}],"createdOn":1669364366884},"a-8":{"id":"a-8","title":"Navbar 1 menu [Close]","actionItemGroups":[{"actionItems":[{"id":"a-8-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"inOutQuint","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".menu-icon1_line-middle","selectorGuids":["239c28e9-03c0-d951-686e-36d3d831e5ee"]},"widthValue":0,"widthUnit":"px","heightUnit":"PX","locked":false}},{"id":"a-8-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"inOutQuint","duration":400,"target":{"useEventTarget":"CHILDREN","selector":".menu-icon1_line-bottom","selectorGuids":["239c28e9-03c0-d951-686e-36d3d831e5f0"]},"yValue":-8,"xUnit":"PX","yUnit":"px","zUnit":"PX"}},{"id":"a-8-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"inOutQuint","duration":400,"target":{"useEventTarget":"CHILDREN","selector":".menu-icon1_line-top","selectorGuids":["239c28e9-03c0-d951-686e-36d3d831e5ed"]},"yValue":8,"xUnit":"PX","yUnit":"px","zUnit":"PX"}},{"id":"a-8-n-4","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"inOutQuint","duration":600,"target":{"useEventTarget":"CHILDREN","selector":".menu-icon1_line-top","selectorGuids":["239c28e9-03c0-d951-686e-36d3d831e5ed"]},"zValue":-45,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-8-n-5","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"inOutQuint","duration":600,"target":{"useEventTarget":"CHILDREN","selector":".menu-icon1_line-bottom","selectorGuids":["239c28e9-03c0-d951-686e-36d3d831e5f0"]},"zValue":45,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1626168378054},"a-9":{"id":"a-9","title":"Navbar 1 menu [Open]","actionItemGroups":[{"actionItems":[{"id":"a-9-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"inOutQuint","duration":600,"target":{"useEventTarget":"CHILDREN","selector":".menu-icon1_line-bottom","selectorGuids":["239c28e9-03c0-d951-686e-36d3d831e5f0"]},"yValue":0,"xUnit":"PX","yUnit":"px","zUnit":"PX"}},{"id":"a-9-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"inOutQuint","duration":600,"target":{"useEventTarget":"CHILDREN","selector":".menu-icon1_line-top","selectorGuids":["239c28e9-03c0-d951-686e-36d3d831e5ed"]},"yValue":0,"xUnit":"PX","yUnit":"px","zUnit":"PX"}},{"id":"a-9-n-3","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"inOutQuint","duration":400,"target":{"useEventTarget":"CHILDREN","selector":".menu-icon1_line-bottom","selectorGuids":["239c28e9-03c0-d951-686e-36d3d831e5f0"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-9-n-4","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"inOutQuint","duration":400,"target":{"useEventTarget":"CHILDREN","selector":".menu-icon1_line-top","selectorGuids":["239c28e9-03c0-d951-686e-36d3d831e5ed"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-9-n-5","actionTypeId":"STYLE_SIZE","config":{"delay":400,"easing":"inOutQuint","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".menu-icon1_line-middle","selectorGuids":["239c28e9-03c0-d951-686e-36d3d831e5ee"]},"widthValue":24,"widthUnit":"px","heightUnit":"PX","locked":false}}]}],"useFirstGroupAsInitialState":false,"createdOn":1626168766736},"a-15":{"id":"a-15","title":"Founder IN","actionItemGroups":[{"actionItems":[{"id":"a-15-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".team_founders-content","selectorGuids":["a8a060fe-5327-0c00-2dca-557ce3e20f1d"]},"yValue":100,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-15-n-3","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".button-line.is-vertical","selectorGuids":["4c30f984-5219-9e82-7f5f-dc5f66ba3acf","6c8e5154-9312-63f0-4ffd-5bbd21cc6ea3"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]},{"actionItems":[{"id":"a-15-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"outQuad","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".team_founders-content","selectorGuids":["a8a060fe-5327-0c00-2dca-557ce3e20f1d"]},"yValue":0,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-15-n-4","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".button-line.is-vertical","selectorGuids":["4c30f984-5219-9e82-7f5f-dc5f66ba3acf","6c8e5154-9312-63f0-4ffd-5bbd21cc6ea3"]},"zValue":90,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1719601340314},"a-16":{"id":"a-16","title":"Founder OUT","actionItemGroups":[{"actionItems":[{"id":"a-16-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".team_founders-content","selectorGuids":["a8a060fe-5327-0c00-2dca-557ce3e20f1d"]},"yValue":100,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-16-n-2","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".button-line.is-vertical","selectorGuids":["4c30f984-5219-9e82-7f5f-dc5f66ba3acf","6c8e5154-9312-63f0-4ffd-5bbd21cc6ea3"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1719601340314},"a-19":{"id":"a-19","title":"FAQ accordion [Open]","actionItemGroups":[{"actionItems":[{"id":"a-19-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".faq_answer","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f252"]},"widthValue":100,"heightValue":0,"widthUnit":"%","heightUnit":"px","locked":false}}]},{"actionItems":[{"id":"a-19-n-2","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":400,"target":{"useEventTarget":"SIBLINGS","selector":".faq_answer","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f252"]},"widthValue":100,"widthUnit":"%","heightUnit":"AUTO","locked":false}},{"id":"a-19-n-3","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"ease","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".faq_icon-wrapper","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f251"]},"zValue":45,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1628385361827},"a-20":{"id":"a-20","title":"FAQ accordion [Close]","actionItemGroups":[{"actionItems":[{"id":"a-20-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":400,"target":{"useEventTarget":"SIBLINGS","selector":".faq_answer","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f252"]},"widthValue":100,"heightValue":0,"widthUnit":"%","heightUnit":"px","locked":false}},{"id":"a-20-n-2","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"ease","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".faq_icon-wrapper","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f251"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1628385361827},"a-21":{"id":"a-21","title":"Cross Banner [IN]","actionItemGroups":[{"actionItems":[{"id":"a-21-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a096441d|bc9b922e-9d05-7793-f2b7-553393ee307b"},"xValue":-50,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-21-n-3","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".cross-banner_row","selectorGuids":["bf1a6e9d-2414-e870-5ccb-3b18bbaa4e4f"]},"value":0,"unit":""}},{"id":"a-21-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a096441d|6621e379-8fee-4d64-1a76-8dd41453df34"},"xValue":50,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]},{"actionItems":[{"id":"a-21-n-4","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"easeInOut","duration":800,"target":{"useEventTarget":"CHILDREN","selector":".cross-banner_row","selectorGuids":["bf1a6e9d-2414-e870-5ccb-3b18bbaa4e4f"]},"value":1,"unit":""}},{"id":"a-21-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"easeInOut","duration":800,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a096441d|6621e379-8fee-4d64-1a76-8dd41453df34"},"xValue":0,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-21-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"easeInOut","duration":800,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a096441d|bc9b922e-9d05-7793-f2b7-553393ee307b"},"xValue":0,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1719682554602},"a-22":{"id":"a-22","title":"Story Parallax","continuousParameterGroups":[{"id":"a-22-p","type":"SCROLL_PROGRESS","parameterLabel":"Scroll","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-22-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".story_shape.is-right","selectorGuids":["f4c0d6f2-8f6d-0442-888c-8f88cc81a9dd","5d6c1e1d-ab72-900f-895f-d1bb98e823d4"]},"yValue":0,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-22-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".story_shape.is-left","selectorGuids":["f4c0d6f2-8f6d-0442-888c-8f88cc81a9dd","c767cef9-125b-f360-f52b-a4e7ae29fe5e"]},"yValue":0,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-22-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".story_shape.is-right","selectorGuids":["f4c0d6f2-8f6d-0442-888c-8f88cc81a9dd","5d6c1e1d-ab72-900f-895f-d1bb98e823d4"]},"yValue":-100,"xUnit":"PX","yUnit":"%","zUnit":"PX"}},{"id":"a-22-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".story_shape.is-left","selectorGuids":["f4c0d6f2-8f6d-0442-888c-8f88cc81a9dd","c767cef9-125b-f360-f52b-a4e7ae29fe5e"]},"yValue":100,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]}]}],"createdOn":1719687038306},"a-23":{"id":"a-23","title":"pricing-tab-1","actionItemGroups":[{"actionItems":[{"id":"a-23-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"easeIn","duration":300,"target":{"selector":".pricing_tab-background","selectorGuids":["5225edba-6ac9-5cd7-9904-b7d419a45401"]},"xValue":-200,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1702425871515},"a-24":{"id":"a-24","title":"pricing-tab-2","actionItemGroups":[{"actionItems":[{"id":"a-24-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"easeIn","duration":300,"target":{"selector":".pricing_tab-background","selectorGuids":["5225edba-6ac9-5cd7-9904-b7d419a45401"]},"xValue":-100,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1702425871515},"a-25":{"id":"a-25","title":"pricing-tab-3","actionItemGroups":[{"actionItems":[{"id":"a-25-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"easeIn","duration":300,"target":{"selector":".pricing_tab-background","selectorGuids":["5225edba-6ac9-5cd7-9904-b7d419a45401"]},"xValue":0,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1702425871515},"a-26":{"id":"a-26","title":"FAQ accordion [Open] 2","actionItemGroups":[{"actionItems":[{"id":"a-26-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".faq_answer","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f252"]},"widthValue":100,"heightValue":0,"widthUnit":"%","heightUnit":"px","locked":false}}]},{"actionItems":[{"id":"a-26-n-2","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":400,"target":{"useEventTarget":"SIBLINGS","selector":".faq_answer","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f252"]},"widthValue":100,"widthUnit":"%","heightUnit":"AUTO","locked":false}},{"id":"a-26-n-3","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"ease","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".faq_icon-wrapper","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f251"]},"zValue":45,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1628385361827},"a-27":{"id":"a-27","title":"FAQ accordion [Close] 2","actionItemGroups":[{"actionItems":[{"id":"a-27-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"ease","duration":400,"target":{"useEventTarget":"SIBLINGS","selector":".faq_answer","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f252"]},"widthValue":100,"heightValue":0,"widthUnit":"%","heightUnit":"px","locked":false}},{"id":"a-27-n-2","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"ease","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".faq_icon-wrapper","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f251"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1628385361827},"a-28":{"id":"a-28","title":"Cascade [Scroll] [Mobile]","continuousParameterGroups":[{"id":"a-28-p","type":"SCROLL_PROGRESS","parameterLabel":"Scroll","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-28-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_mobile-tracker","selectorGuids":["eb056f7d-93e1-3e57-3043-f443d81afcaf"]},"xValue":0,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]},{"keyframe":100,"actionItems":[{"id":"a-28-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".holistic_mobile-tracker","selectorGuids":["eb056f7d-93e1-3e57-3043-f443d81afcaf"]},"xValue":-85,"xUnit":"%","yUnit":"PX","zUnit":"PX"}}]}]}],"createdOn":1719856668696},"a-30":{"id":"a-30","title":"Compounded Hero","continuousParameterGroups":[{"id":"a-30-p","type":"SCROLL_PROGRESS","parameterLabel":"Scroll","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-30-n","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".hero-simple_image","selectorGuids":["cef175a4-441c-02ed-9aa4-92dc87274fe0"]},"xValue":1,"yValue":1,"locked":true}}]},{"keyframe":100,"actionItems":[{"id":"a-30-n-2","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".hero-simple_image","selectorGuids":["cef175a4-441c-02ed-9aa4-92dc87274fe0"]},"xValue":1.2,"yValue":1.2,"locked":true}}]}]}],"createdOn":1720531972844},"a-32":{"id":"a-32","title":"Process Timeline","actionItemGroups":[{"actionItems":[{"id":"a-32-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d861"},"widthValue":0,"widthUnit":"%","heightUnit":"PX","locked":false}},{"id":"a-32-n-18","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d88c"},"value":0,"unit":""}},{"id":"a-32-n-17","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d886"},"value":0,"unit":""}},{"id":"a-32-n-16","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d876"},"value":0,"unit":""}},{"id":"a-32-n-15","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d870"},"value":0,"unit":""}},{"id":"a-32-n-13","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d860"},"value":0,"unit":""}},{"id":"a-32-n-11","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".process_fade-overlay-right","selectorGuids":["a9375ade-69b9-95e1-f192-9508b32cd485"]},"value":0,"unit":""}},{"id":"a-32-n-9","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d88d"},"widthValue":0,"widthUnit":"%","heightUnit":"PX","locked":false}},{"id":"a-32-n-8","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d887"},"widthValue":0,"widthUnit":"%","heightUnit":"PX","locked":false}},{"id":"a-32-n-5","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d877"},"widthValue":0,"widthUnit":"%","heightUnit":"PX","locked":false}},{"id":"a-32-n-3","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d871"},"widthValue":0,"widthUnit":"%","heightUnit":"PX","locked":false}}]},{"actionItems":[{"id":"a-32-n-2","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d861"},"widthValue":100,"widthUnit":"%","heightUnit":"PX","locked":false}},{"id":"a-32-n-14","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d860"},"value":1,"unit":""}}]},{"actionItems":[{"id":"a-32-n-4","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d871"},"widthValue":100,"widthUnit":"%","heightUnit":"PX","locked":false}},{"id":"a-32-n-22","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d870"},"value":1,"unit":""}}]},{"actionItems":[{"id":"a-32-n-6","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d877"},"widthValue":100,"widthUnit":"%","heightUnit":"PX","locked":false}},{"id":"a-32-n-21","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d876"},"value":1,"unit":""}}]},{"actionItems":[{"id":"a-32-n-7","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d887"},"widthValue":100,"widthUnit":"%","heightUnit":"PX","locked":false}},{"id":"a-32-n-20","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d886"},"value":1,"unit":""}}]},{"actionItems":[{"id":"a-32-n-10","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d88d"},"widthValue":100,"widthUnit":"%","heightUnit":"PX","locked":false}},{"id":"a-32-n-19","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","id":"66c8a0fb54f84ec4a09643c9|dae36cac-25cc-0350-e462-48be3423d88c"},"value":1,"unit":""}},{"id":"a-32-n-12","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"easeInOut","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".process_fade-overlay-right","selectorGuids":["a9375ade-69b9-95e1-f192-9508b32cd485"]},"value":1,"unit":""}}]}],"useFirstGroupAsInitialState":true,"createdOn":1721307431662},"a-34":{"id":"a-34","title":"Bento grid","actionItemGroups":[{"actionItems":[{"id":"a-34-n-2","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".faq_icon-wrapper","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f251"]},"zValue":45,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-34-n","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".paragraph-hidden","selectorGuids":["509bac2c-fc83-00ef-fadc-37c419d9276a"]},"value":"flex"}},{"id":"a-34-n-3","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".holistic-bento_card-small-image","selectorGuids":["c095bdce-9a49-c48b-a988-9b3e134a9710"]},"value":"flex"}},{"id":"a-34-n-4","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".holistic-bento_card-large-image-wrapper","selectorGuids":["c095bdce-9a49-c48b-a988-9b3e134a970a"]},"value":"flex"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1728323065217},"a-35":{"id":"a-35","title":"Bento grid hide","actionItemGroups":[{"actionItems":[{"id":"a-35-n-2","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".faq_icon-wrapper","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f251"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-35-n-3","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".holistic-bento_card-small-image","selectorGuids":["c095bdce-9a49-c48b-a988-9b3e134a9710"]},"value":"none"}},{"id":"a-35-n-4","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".holistic-bento_card-large-image-wrapper","selectorGuids":["c095bdce-9a49-c48b-a988-9b3e134a970a"]},"value":"none"}},{"id":"a-35-n","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".paragraph-hidden","selectorGuids":["509bac2c-fc83-00ef-fadc-37c419d9276a"]},"value":"none"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1728323065217},"a-36":{"id":"a-36","title":"Close Modal","actionItemGroups":[{"actionItems":[{"id":"a-36-n","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"","duration":0,"target":{"selector":".modal-overlay","selectorGuids":["aaf6e96a-4113-ec19-52fd-114fdac150cf"]},"value":"flex"}}]},{"actionItems":[{"id":"a-36-n-2","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"","duration":0,"target":{"selector":".modal-overlay","selectorGuids":["aaf6e96a-4113-ec19-52fd-114fdac150cf"]},"value":"none"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1720467421001},"a-37":{"id":"a-37","title":"Modal Opens - 6s","actionItemGroups":[{"actionItems":[{"id":"a-37-n","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"","duration":0,"target":{"selector":".modal-overlay","selectorGuids":["aaf6e96a-4113-ec19-52fd-114fdac150cf"]},"value":"none"}}]},{"actionItems":[{"id":"a-37-n-2","actionTypeId":"GENERAL_DISPLAY","config":{"delay":6000,"easing":"","duration":0,"target":{"selector":".modal-overlay","selectorGuids":["aaf6e96a-4113-ec19-52fd-114fdac150cf"]},"value":"flex"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1733941428735},"a-39":{"id":"a-39","title":"Changer","actionItemGroups":[{"actionItems":[{"id":"a-39-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":0,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-39-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":-13,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"actionItems":[{"id":"a-39-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"xValue":0,"yValue":-30,"xUnit":"%","yUnit":"%","zUnit":"PX"}}]},{"actionItems":[{"id":"a-39-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":-45,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"actionItems":[{"id":"a-39-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":-60,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"actionItems":[{"id":"a-39-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":-73,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"actionItems":[{"id":"a-39-n-8","actionTypeId":"TRANSFORM_MOVE","config":{"delay":3000,"easing":"","duration":0,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":0,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1746814523716},"a-40":{"id":"a-40","title":"Changer Mobile","actionItemGroups":[{"actionItems":[{"id":"a-40-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":0,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-40-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":-15,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"actionItems":[{"id":"a-40-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":-29,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"actionItems":[{"id":"a-40-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":-44,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"actionItems":[{"id":"a-40-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":-58,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"actionItems":[{"id":"a-40-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"outQuad","duration":500,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":-72,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"actionItems":[{"id":"a-40-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":3000,"easing":"outQuad","duration":0,"target":{"id":"681e4517a4dc858d5c2c0a87|2e945032-03a7-83c3-86f0-bc25aa8ff2ad"},"yValue":0,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1746814792273},"a-41":{"id":"a-41","title":"Accordion Open Icon","actionItemGroups":[{"actionItems":[{"id":"a-41-n","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","82da3e97-042b-ef66-806e-e32d8910703e"]},"xValue":0,"yValue":0,"zValue":0,"xUnit":"deg","yUnit":"deg","zUnit":"deg"}},{"id":"a-41-n-5","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".accordion-text-container","selectorGuids":["d3625429-5c6e-800e-b55b-04272ccb1774"]},"heightValue":0,"widthUnit":"PX","heightUnit":"px","locked":false}}]},{"actionItems":[{"id":"a-41-n-3","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","82da3e97-042b-ef66-806e-e32d8910703e"]},"zValue":90,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-41-n-6","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".accordion-text-container","selectorGuids":["d3625429-5c6e-800e-b55b-04272ccb1774"]},"widthUnit":"PX","heightUnit":"AUTO","locked":false}}]}],"useFirstGroupAsInitialState":true,"createdOn":1741975737674},"a-42":{"id":"a-42","title":"Accordion Icon Close","actionItemGroups":[{"actionItems":[{"id":"a-42-n-2","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","82da3e97-042b-ef66-806e-e32d8910703e"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-42-n-4","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".accordion-text-container","selectorGuids":["d3625429-5c6e-800e-b55b-04272ccb1774"]},"heightValue":0,"widthUnit":"PX","heightUnit":"px","locked":false}}]}],"useFirstGroupAsInitialState":false,"createdOn":1741976704802},"a-43":{"id":"a-43","title":"Bento grid 2","actionItemGroups":[{"actionItems":[{"id":"a-43-n","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".faq_icon-wrapper","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f251"]},"zValue":45,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-43-n-2","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".paragraph-hidden","selectorGuids":["509bac2c-fc83-00ef-fadc-37c419d9276a"]},"value":"flex"}},{"id":"a-43-n-3","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".holistic-bento_card-small-image","selectorGuids":["c095bdce-9a49-c48b-a988-9b3e134a9710"]},"value":"flex"}},{"id":"a-43-n-4","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".holistic-bento_card-large-image-wrapper","selectorGuids":["c095bdce-9a49-c48b-a988-9b3e134a970a"]},"value":"flex"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1728323065217},"a-44":{"id":"a-44","title":"Bento grid hide 2","actionItemGroups":[{"actionItems":[{"id":"a-44-n","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".faq_icon-wrapper","selectorGuids":["5ba22ace-b264-8f96-6650-dab9cce3f251"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-44-n-2","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".holistic-bento_card-small-image","selectorGuids":["c095bdce-9a49-c48b-a988-9b3e134a9710"]},"value":"none"}},{"id":"a-44-n-3","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".holistic-bento_card-large-image-wrapper","selectorGuids":["c095bdce-9a49-c48b-a988-9b3e134a970a"]},"value":"none"}},{"id":"a-44-n-4","actionTypeId":"GENERAL_DISPLAY","config":{"delay":100,"easing":"","duration":0,"target":{"useEventTarget":"CHILDREN","selector":".paragraph-hidden","selectorGuids":["509bac2c-fc83-00ef-fadc-37c419d9276a"]},"value":"none"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1728323065217},"a-45":{"id":"a-45","title":"Accordion Open Icon 2","actionItemGroups":[{"actionItems":[{"id":"a-45-n","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","82da3e97-042b-ef66-806e-e32d8910703e"]},"xValue":0,"yValue":0,"zValue":0,"xUnit":"deg","yUnit":"deg","zUnit":"deg"}},{"id":"a-45-n-2","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".accordion-text-container-2","selectorGuids":["1680d45e-1bab-41f1-19a9-e994f59d004b"]},"heightValue":0,"widthUnit":"PX","heightUnit":"px","locked":false}}]},{"actionItems":[{"id":"a-45-n-3","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","82da3e97-042b-ef66-806e-e32d8910703e"]},"zValue":90,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-45-n-4","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".accordion-text-container-2","selectorGuids":["1680d45e-1bab-41f1-19a9-e994f59d004b"]},"widthUnit":"PX","heightUnit":"AUTO","locked":false}}]}],"useFirstGroupAsInitialState":true,"createdOn":1741975737674},"a-46":{"id":"a-46","title":"Accordion Icon Close 2","actionItemGroups":[{"actionItems":[{"id":"a-46-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".accordion-text-container-2","selectorGuids":["1680d45e-1bab-41f1-19a9-e994f59d004b"]},"heightValue":0,"widthUnit":"PX","heightUnit":"px","locked":false}},{"id":"a-46-n-2","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","82da3e97-042b-ef66-806e-e32d8910703e"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1741976704802},"a-47":{"id":"a-47","title":"Accordion Open Icon 3","actionItemGroups":[{"actionItems":[{"id":"a-47-n","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","613ff055-cfab-0531-e01b-eb3d53dd5b68"]},"xValue":0,"yValue":0,"zValue":0,"xUnit":"deg","yUnit":"deg","zUnit":"deg"}},{"id":"a-47-n-2","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".accordion-text-container","selectorGuids":["d3625429-5c6e-800e-b55b-04272ccb1774"]},"heightValue":0,"widthUnit":"PX","heightUnit":"px","locked":false}}]},{"actionItems":[{"id":"a-47-n-3","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","613ff055-cfab-0531-e01b-eb3d53dd5b68"]},"zValue":90,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-47-n-4","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".accordion-text-container","selectorGuids":["d3625429-5c6e-800e-b55b-04272ccb1774"]},"widthUnit":"PX","heightUnit":"AUTO","locked":false}}]}],"useFirstGroupAsInitialState":true,"createdOn":1741975737674},"a-48":{"id":"a-48","title":"Accordion Icon Close 3","actionItemGroups":[{"actionItems":[{"id":"a-48-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".accordion-text-container","selectorGuids":["d3625429-5c6e-800e-b55b-04272ccb1774"]},"heightValue":0,"widthUnit":"PX","heightUnit":"px","locked":false}},{"id":"a-48-n-2","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","613ff055-cfab-0531-e01b-eb3d53dd5b68"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1741976704802},"a-49":{"id":"a-49","title":"Accordion Open Icon 4","actionItemGroups":[{"actionItems":[{"id":"a-49-n","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","613ff055-cfab-0531-e01b-eb3d53dd5b68"]},"xValue":0,"yValue":0,"zValue":0,"xUnit":"deg","yUnit":"deg","zUnit":"deg"}},{"id":"a-49-n-2","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".accordion-text-container-3","selectorGuids":["1c245d51-7a64-d2de-8fe4-b634b7bf5f5e"]},"heightValue":0,"widthUnit":"PX","heightUnit":"px","locked":false}}]},{"actionItems":[{"id":"a-49-n-3","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","613ff055-cfab-0531-e01b-eb3d53dd5b68"]},"zValue":90,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}},{"id":"a-49-n-4","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"SIBLINGS","selector":".accordion-text-container-3","selectorGuids":["1c245d51-7a64-d2de-8fe4-b634b7bf5f5e"]},"widthUnit":"PX","heightUnit":"AUTO","locked":false}}]}],"useFirstGroupAsInitialState":true,"createdOn":1741975737674},"a-50":{"id":"a-50","title":"Accordion Icon Close 4","actionItemGroups":[{"actionItems":[{"id":"a-50-n","actionTypeId":"STYLE_SIZE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".accordion-text-container-3","selectorGuids":["1c245d51-7a64-d2de-8fe4-b634b7bf5f5e"]},"heightValue":0,"widthUnit":"PX","heightUnit":"px","locked":false}},{"id":"a-50-n-2","actionTypeId":"TRANSFORM_ROTATE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".trigger-line.vertical","selectorGuids":["82da3e97-042b-ef66-806e-e32d8910703d","613ff055-cfab-0531-e01b-eb3d53dd5b68"]},"zValue":0,"xUnit":"DEG","yUnit":"DEG","zUnit":"deg"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1741976704802},"a-53":{"id":"a-53","title":"Close MP Animation","actionItemGroups":[{"actionItems":[{"id":"a-53-n-2","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"","duration":0,"target":{"useEventTarget":"PARENT","selector":".mp-background","selectorGuids":["2ecc738f-0367-a498-73f6-e3d4f1693110"]},"value":"none"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1757545423640},"a-56":{"id":"a-56","title":"New Timed Animation","actionItemGroups":[{"actionItems":[{"id":"a-56-n","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":1000,"target":{"id":"66c8a0fb54f84ec4a09643c9|daae68b4-6116-cccd-2bcd-d404d548704e"},"value":0,"unit":""}}]},{"actionItems":[{"id":"a-56-n-2","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"easeIn","duration":300,"target":{"id":"66c8a0fb54f84ec4a09643c9|daae68b4-6116-cccd-2bcd-d404d548704e"},"value":1,"unit":""}}]}],"useFirstGroupAsInitialState":true,"createdOn":1759864632673},"a-57":{"id":"a-57","title":"Custom Switch On","actionItemGroups":[{"actionItems":[{"id":"a-57-n","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"useEventTarget":true,"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad995"},"globalSwatchId":"@var_variable-049f1359-16df-ac4b-6de8-6cf5d4372015","rValue":253,"bValue":244,"gValue":244,"aValue":1}},{"id":"a-57-n-2","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".img-grid__right","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ea0"]},"value":0.4,"unit":""}},{"id":"a-57-n-3","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".chips-stack__item.is-red","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ecf","b9cc8399-b9fd-7ba6-c467-c27c85ed2f16"]},"value":0.6,"unit":""}},{"id":"a-57-n-4","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".img-grid__left","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ee1"]},"value":1,"unit":""}},{"id":"a-57-n-5","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".chips-stack__item.is-white","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ecf","b9cc8399-b9fd-7ba6-c467-c27c85ed2f35"]},"value":1,"unit":""}},{"id":"a-57-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".switch-heandler","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eac"]},"xValue":0,"xUnit":"px","yUnit":"PX","zUnit":"PX"}}]},{"actionItems":[{"id":"a-57-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".switch-heandler","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eac"]},"xValue":28,"xUnit":"px","yUnit":"PX","zUnit":"PX"}},{"id":"a-57-n-8","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".switch-heandler","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eac"]},"globalSwatchId":"@var_variable-74cfba17-27d4-1d84-ae3c-2f81c73559ea","rValue":88,"bValue":34,"gValue":32,"aValue":1}},{"id":"a-57-n-9","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".chips-stack__item.is-white","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ecf","b9cc8399-b9fd-7ba6-c467-c27c85ed2f35"]},"value":0.4,"unit":""}},{"id":"a-57-n-10","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".img-grid__left","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ee1"]},"value":0.5,"unit":""}},{"id":"a-57-n-11","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".chips-stack__item.is-red","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ecf","b9cc8399-b9fd-7ba6-c467-c27c85ed2f16"]},"value":1,"unit":""}},{"id":"a-57-n-12","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".img-grid__right","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ea0"]},"value":1,"unit":""}},{"id":"a-57-n-13","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad995"},"globalSwatchId":"@var_variable-22e9d26b-7c64-5951-9bf1-e08c57999159","rValue":138,"bValue":46,"gValue":43,"aValue":1}},{"id":"a-57-n-14","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".switch-heandler","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eac"]},"globalSwatchId":"@var_variable-049f1359-16df-ac4b-6de8-6cf5d4372015","rValue":253,"bValue":244,"gValue":244,"aValue":1}}]}],"useFirstGroupAsInitialState":true,"createdOn":1757622219387},"a-58":{"id":"a-58","title":"Custom Switch Off","actionItemGroups":[{"actionItems":[{"id":"a-58-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"useEventTarget":"CHILDREN","selector":".switch-heandler","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eac"]},"xValue":0,"xUnit":"px","yUnit":"PX","zUnit":"PX"}},{"id":"a-58-n-2","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".switch-heandler","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eac"]},"globalSwatchId":"@var_variable-22e9d26b-7c64-5951-9bf1-e08c57999159","rValue":138,"bValue":46,"gValue":43,"aValue":1}},{"id":"a-58-n-3","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".chips-stack__item.is-red","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ecf","b9cc8399-b9fd-7ba6-c467-c27c85ed2f16"]},"value":0.4,"unit":""}},{"id":"a-58-n-4","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".chips-stack__item.is-white","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ecf","b9cc8399-b9fd-7ba6-c467-c27c85ed2f35"]},"value":1,"unit":""}},{"id":"a-58-n-5","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".img-grid__right","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ea0"]},"value":0.4,"unit":""}},{"id":"a-58-n-6","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"inQuart","duration":200,"target":{"selector":".img-grid__left","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ee1"]},"value":1,"unit":""}},{"id":"a-58-n-7","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"68e56c7dd1f5a4689ff4c3bf|75e0e430-bfed-c930-cfd1-4c47947ad995"},"globalSwatchId":"@var_variable-049f1359-16df-ac4b-6de8-6cf5d4372015","rValue":253,"bValue":244,"gValue":244,"aValue":1}}]}],"useFirstGroupAsInitialState":false,"createdOn":1757623675448},"a-59":{"id":"a-59","title":"Mobile Trigger On","actionItemGroups":[{"actionItems":[{"id":"a-59-n","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"outQuart","duration":0,"target":{"selector":".image-grid__red-group","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ecc"]},"value":"grid"}},{"id":"a-59-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"outQuart","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".switch-heandler","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eac"]},"xValue":28,"xUnit":"px","yUnit":"PX","zUnit":"PX"}},{"id":"a-59-n-3","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"outQuart","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".switch-heandler","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eac"]},"globalSwatchId":"@var_variable-049f1359-16df-ac4b-6de8-6cf5d4372015","rValue":253,"bValue":244,"gValue":244,"aValue":1}},{"id":"a-59-n-4","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"outQuart","duration":300,"target":{"useEventTarget":true,"id":"68c314e426597a0f7c1d95df|77a30886-bf1e-8ec5-a8e9-8718985a74ca"},"globalSwatchId":"@var_variable-22e9d26b-7c64-5951-9bf1-e08c57999159","rValue":138,"bValue":46,"gValue":43,"aValue":1}},{"id":"a-59-n-5","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"","duration":0,"target":{"selector":".image-grid__white-group","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eea"]},"value":"none"}}]}],"useFirstGroupAsInitialState":false,"createdOn":1758114603168},"a-60":{"id":"a-60","title":"Mobile Trigger Off","actionItemGroups":[{"actionItems":[{"id":"a-60-n","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"outQuart","duration":0,"target":{"selector":".image-grid__white-group","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eea"]},"value":"grid"}},{"id":"a-60-n-2","actionTypeId":"GENERAL_DISPLAY","config":{"delay":0,"easing":"outQuart","duration":0,"target":{"selector":".image-grid__red-group","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2ecc"]},"value":"none"}},{"id":"a-60-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"outQuart","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".switch-heandler","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eac"]},"xValue":0,"xUnit":"px","yUnit":"PX","zUnit":"PX"}},{"id":"a-60-n-4","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"outQuart","duration":300,"target":{"useEventTarget":"CHILDREN","selector":".switch-heandler","selectorGuids":["b9cc8399-b9fd-7ba6-c467-c27c85ed2eac"]},"globalSwatchId":"@var_variable-74cfba17-27d4-1d84-ae3c-2f81c73559ea","rValue":88,"bValue":34,"gValue":32,"aValue":1}},{"id":"a-60-n-5","actionTypeId":"STYLE_BACKGROUND_COLOR","config":{"delay":0,"easing":"outQuart","duration":300,"target":{"useEventTarget":true,"id":"68c314e426597a0f7c1d95df|77a30886-bf1e-8ec5-a8e9-8718985a74ca"},"globalSwatchId":"@var_variable-049f1359-16df-ac4b-6de8-6cf5d4372015","rValue":253,"bValue":244,"gValue":244,"aValue":1}}]}],"useFirstGroupAsInitialState":false,"createdOn":1758114918195},"a-67":{"id":"a-67","title":"Span Hero Changer Mobile","actionItemGroups":[{"actionItems":[{"id":"a-67-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":0,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-67-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-32,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-67-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-63,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-67-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-94,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-67-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-126,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-67-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":0,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1760725896964},"a-63":{"id":"a-63","title":"Stacking card effect","continuousParameterGroups":[{"id":"a-63-p","type":"SCROLL_PROGRESS","parameterLabel":"Scroll","continuousActionGroups":[{"keyframe":15,"actionItems":[{"id":"a-63-n","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--first","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","4dce9562-926d-3f0c-7a84-037f8bc47902"]},"xValue":1,"yValue":1,"locked":true}}]},{"keyframe":20,"actionItems":[{"id":"a-63-n-2","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--first","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","4dce9562-926d-3f0c-7a84-037f8bc47902"]},"xValue":0.85,"yValue":0.85,"locked":true}},{"id":"a-63-n-3","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--first","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","4dce9562-926d-3f0c-7a84-037f8bc47902"]},"value":1,"unit":""}}]},{"keyframe":24,"actionItems":[{"id":"a-63-n-16","actionTypeId":"STYLE_FILTER","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--first","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","4dce9562-926d-3f0c-7a84-037f8bc47902"]},"filters":[{"type":"blur","filterId":"7ee5","value":0,"unit":"px"}]}}]},{"keyframe":25,"actionItems":[{"id":"a-63-n-4","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--first","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","4dce9562-926d-3f0c-7a84-037f8bc47902"]},"value":1,"unit":""}}]},{"keyframe":30,"actionItems":[{"id":"a-63-n-5","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--second","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","51af1042-f7b8-5a59-cff6-bb18d4bfc1ab"]},"xValue":1,"yValue":1,"locked":true}},{"id":"a-63-n-7","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--second","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","51af1042-f7b8-5a59-cff6-bb18d4bfc1ab"]},"value":1,"unit":""}}]},{"keyframe":34,"actionItems":[{"id":"a-63-n-15","actionTypeId":"STYLE_FILTER","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--first","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","4dce9562-926d-3f0c-7a84-037f8bc47902"]},"filters":[{"type":"blur","filterId":"7ee5","value":3,"unit":"px"}]}}]},{"keyframe":35,"actionItems":[{"id":"a-63-n-6","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--second","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","51af1042-f7b8-5a59-cff6-bb18d4bfc1ab"]},"xValue":0.85,"yValue":0.85,"locked":true}},{"id":"a-63-n-17","actionTypeId":"STYLE_FILTER","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".stacking-card.is--second","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","51af1042-f7b8-5a59-cff6-bb18d4bfc1ab"]},"filters":[{"type":"blur","filterId":"fc43","value":0,"unit":"px"}]}}]},{"keyframe":40,"actionItems":[{"id":"a-63-n-8","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--second","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","51af1042-f7b8-5a59-cff6-bb18d4bfc1ab"]},"value":1,"unit":""}}]},{"keyframe":45,"actionItems":[{"id":"a-63-n-9","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--third","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","7da3ec94-3e7e-ba05-f498-2d6571c24b2b"]},"xValue":1,"yValue":1,"locked":true}}]},{"keyframe":50,"actionItems":[{"id":"a-63-n-10","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--third","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","7da3ec94-3e7e-ba05-f498-2d6571c24b2b"]},"xValue":0.85,"yValue":0.85,"locked":true}},{"id":"a-63-n-11","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--third","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","7da3ec94-3e7e-ba05-f498-2d6571c24b2b"]},"value":1,"unit":""}}]},{"keyframe":60,"actionItems":[{"id":"a-63-n-12","actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--third","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","7da3ec94-3e7e-ba05-f498-2d6571c24b2b"]},"value":1,"unit":""}}]},{"keyframe":65,"actionItems":[{"id":"a-63-n-13","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--fourth","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","aa0c274c-d242-ab7b-7825-e8ba1c12560c"]},"xValue":1,"yValue":1,"locked":true}}]},{"keyframe":70,"actionItems":[{"id":"a-63-n-14","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--fourth","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","aa0c274c-d242-ab7b-7825-e8ba1c12560c"]},"xValue":0.85,"yValue":0.85,"locked":true}}]},{"keyframe":79,"actionItems":[{"id":"a-63-n-19","actionTypeId":"STYLE_FILTER","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--third","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","7da3ec94-3e7e-ba05-f498-2d6571c24b2b"]},"filters":[{"type":"blur","filterId":"9076","value":0,"unit":"px"}]}}]},{"keyframe":80,"actionItems":[{"id":"a-63-n-18","actionTypeId":"STYLE_FILTER","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".stacking-card.is--second","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","51af1042-f7b8-5a59-cff6-bb18d4bfc1ab"]},"filters":[{"type":"blur","filterId":"f9c8","value":3,"unit":"px"}]}},{"id":"a-63-n-20","actionTypeId":"STYLE_FILTER","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":"CHILDREN","selector":".stacking-card.is--third","selectorGuids":["d58feaff-74c2-452c-dc5d-b7e26dda682f","7da3ec94-3e7e-ba05-f498-2d6571c24b2b"]},"filters":[{"type":"blur","filterId":"d78d","value":3,"unit":"px"}]}}]}]}],"createdOn":1760968949063},"a-65":{"id":"a-65","title":"Marquee Slider","actionItemGroups":[{"actionItems":[{"id":"a-65-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":36000,"target":{"selector":".marquee-track.is--first-row","selectorGuids":["2086bae7-3597-063e-1452-e322fe35b42d","705b7e4b-045c-efea-f1a2-3ea8e74d0db1"]},"xValue":-10,"xUnit":"rem","yUnit":"PX","zUnit":"PX"}},{"id":"a-65-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":36000,"target":{"selector":".marquee-track.is--second-row","selectorGuids":["2086bae7-3597-063e-1452-e322fe35b42d","caf046a5-b641-9e94-6b09-14e25a7404d6"]},"xValue":-80,"xUnit":"rem","yUnit":"PX","zUnit":"PX"}}]},{"actionItems":[{"id":"a-65-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":36000,"target":{"selector":".marquee-track.is--second-row","selectorGuids":["2086bae7-3597-063e-1452-e322fe35b42d","caf046a5-b641-9e94-6b09-14e25a7404d6"]},"xValue":0,"xUnit":"%","yUnit":"PX","zUnit":"PX"}},{"id":"a-65-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":36000,"target":{"selector":".marquee-track.is--first-row","selectorGuids":["2086bae7-3597-063e-1452-e322fe35b42d","705b7e4b-045c-efea-f1a2-3ea8e74d0db1"]},"xValue":-50,"xUnit":"rem","yUnit":"PX","zUnit":"PX"}}]},{"actionItems":[{"id":"a-65-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".marquee-track.is--first-row","selectorGuids":["2086bae7-3597-063e-1452-e322fe35b42d","705b7e4b-045c-efea-f1a2-3ea8e74d0db1"]},"xValue":0,"xUnit":"px","yUnit":"PX","zUnit":"PX"}}]},{"actionItems":[{"id":"a-65-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".marquee-track.is--second-row","selectorGuids":["2086bae7-3597-063e-1452-e322fe35b42d","caf046a5-b641-9e94-6b09-14e25a7404d6"]},"xValue":0,"xUnit":"px","yUnit":"PX","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1761050072608},"a-66":{"id":"a-66","title":"Mockup Vertical Scroll","continuousParameterGroups":[{"id":"a-66-p","type":"SCROLL_PROGRESS","parameterLabel":"Scroll","continuousActionGroups":[{"keyframe":16,"actionItems":[{"id":"a-66-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".phone-mockup__img","selectorGuids":["71dafbf9-2a74-ccd0-1356-cc2275ef1495"]},"yValue":0,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":34,"actionItems":[{"id":"a-66-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".phone-mockup__img","selectorGuids":["71dafbf9-2a74-ccd0-1356-cc2275ef1495"]},"yValue":-15,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":40,"actionItems":[{"id":"a-66-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".phone-mockup__img","selectorGuids":["71dafbf9-2a74-ccd0-1356-cc2275ef1495"]},"yValue":-20,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":50,"actionItems":[{"id":"a-66-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".phone-mockup__img","selectorGuids":["71dafbf9-2a74-ccd0-1356-cc2275ef1495"]},"yValue":-25,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":53,"actionItems":[{"id":"a-66-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".phone-mockup__img","selectorGuids":["71dafbf9-2a74-ccd0-1356-cc2275ef1495"]},"yValue":-30,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]},{"keyframe":70,"actionItems":[{"id":"a-66-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"selector":".phone-mockup__img","selectorGuids":["71dafbf9-2a74-ccd0-1356-cc2275ef1495"]},"yValue":-54,"xUnit":"PX","yUnit":"%","zUnit":"PX"}}]}]}],"createdOn":1761070048132},"a-61":{"id":"a-61","title":"Span Hero Changer","actionItemGroups":[{"actionItems":[{"id":"a-61-n","actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":0,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-61-n-2","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-80,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-61-n-3","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-160,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-61-n-4","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-240,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-61-n-5","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-320,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-61-n-6","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-410,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-61-n-7","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-487,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-61-n-8","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-568,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-61-n-9","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-645,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]},{"actionItems":[{"id":"a-61-n-10","actionTypeId":"TRANSFORM_MOVE","config":{"delay":1000,"easing":"","duration":500,"target":{"id":"68f27b8e98ec7053563a1092|7e2c550e-becf-0a13-be82-f14f05543871"},"yValue":-715,"xUnit":"PX","yUnit":"px","zUnit":"PX"}}]}],"useFirstGroupAsInitialState":true,"createdOn":1760725896964},"a-68":{"id":"a-68","title":"Scaling Decorations","continuousParameterGroups":[{"id":"a-68-p","type":"SCROLL_PROGRESS","parameterLabel":"Scroll","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-68-n","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"68fa2e7260fdd6766f55e951|a585bfc2-567f-d2ea-0600-238a8744fb6f"},"xValue":0,"yValue":0,"locked":true}}]},{"keyframe":47,"actionItems":[{"id":"a-68-n-2","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"easeIn","duration":500,"target":{"useEventTarget":true,"id":"68fa2e7260fdd6766f55e951|a585bfc2-567f-d2ea-0600-238a8744fb6f"},"xValue":1,"yValue":1,"locked":true}}]}]}],"createdOn":1761335900190},"a-69":{"id":"a-69","title":"Scaling Animation Fast","continuousParameterGroups":[{"id":"a-69-p","type":"SCROLL_PROGRESS","parameterLabel":"Scroll","continuousActionGroups":[{"keyframe":0,"actionItems":[{"id":"a-69-n","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":"","duration":500,"target":{"useEventTarget":true,"id":"68f27b8e98ec7053563a1092|c3f2d3da-49ee-67fa-c43a-3ce465b73988"},"xValue":0,"yValue":0,"locked":true}}]},{"keyframe":25,"actionItems":[{"id":"a-69-n-2","actionTypeId":"TRANSFORM_SCALE","config":{"delay":0,"easing":[0.755,0.05,0.855,0.06],"duration":500,"target":{"useEventTarget":true,"id":"68f27b8e98ec7053563a1092|c3f2d3da-49ee-67fa-c43a-3ce465b73988"},"xValue":1,"yValue":1,"locked":true}}]}]}],"createdOn":1761336949013},"slideInBottom":{"id":"slideInBottom","useFirstGroupAsInitialState":true,"actionItemGroups":[{"actionItems":[{"actionTypeId":"STYLE_OPACITY","config":{"delay":0,"duration":0,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"value":0}}]},{"actionItems":[{"actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"duration":0,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"xValue":0,"yValue":100,"xUnit":"PX","yUnit":"PX","zUnit":"PX"}}]},{"actionItems":[{"actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"outQuart","duration":1000,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"xValue":0,"yValue":0,"xUnit":"PX","yUnit":"PX","zUnit":"PX"}},{"actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"outQuart","duration":1000,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"value":1}}]}]},"fadeIn":{"id":"fadeIn","useFirstGroupAsInitialState":true,"actionItemGroups":[{"actionItems":[{"actionTypeId":"STYLE_OPACITY","config":{"delay":0,"duration":0,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"value":0}}]},{"actionItems":[{"actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"outQuart","duration":1000,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"value":1}}]}]},"slideInTop":{"id":"slideInTop","useFirstGroupAsInitialState":true,"actionItemGroups":[{"actionItems":[{"actionTypeId":"STYLE_OPACITY","config":{"delay":0,"duration":0,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"value":0}}]},{"actionItems":[{"actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"duration":0,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"xValue":0,"yValue":-100,"xUnit":"PX","yUnit":"PX","zUnit":"PX"}}]},{"actionItems":[{"actionTypeId":"STYLE_OPACITY","config":{"delay":0,"easing":"outQuart","duration":1000,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"value":1}},{"actionTypeId":"TRANSFORM_MOVE","config":{"delay":0,"easing":"outQuart","duration":1000,"target":{"id":"N/A","appliesTo":"TRIGGER_ELEMENT","useEventTarget":true},"xValue":0,"yValue":0,"xUnit":"PX","yUnit":"PX","zUnit":"PX"}}]}]}},"site":{"mediaQueries":[{"key":"main","min":992,"max":10000},{"key":"medium","min":768,"max":991},{"key":"small","min":480,"max":767},{"key":"tiny","min":0,"max":479}]}}
);


}),

}]);